{
  "Content": "- Don't miss **Changes in Manifest Generation - Important!**, below.\n\n## New Features\n- CF MySQL now uses [MariaDB 10.0.23 and Galera 25.3.9](https://mariadb.com/kb/en/mariadb/mariadb-galera-cluster-10023-release-notes/) [[#110702918](https://www.pivotaltracker.com/story/show/110702918)]\n- As an Operator, I'd like to specify a user that has read-only-access to all data [[#110369648](https://www.pivotaltracker.com/story/show/110369648)]\n  \n  Supply a password for the `roadmin` user in the manifest, and cf-mysql will automatically provision a user with access to read all databases in the system, but permission to write to none. You can rotate this password by redefining it in the manifest and redeploying.\n  - If you don't like this, it's easy to disable. [[#112020565](https://www.pivotaltracker.com/story/show/112020565)]\n\n### Introducing the Arbitrator\n- [Why build three when you can have two at only twice the price?](http://www.imdb.com/title/tt0118884/quotes?item=qt1542424) [[#2223556](https://www.pivotaltracker.com/epic/show/2223556)]\n  \n  For cf-mysql administrators who are careful with their infrastructure resources, the Arbitrator feature is a new deployment topology that uses a smaller VM footprint while maintaining high availability guarantees. Unlike the old [three node](cluster-behavior.md#avoid-an-even-number-of-nodes) topology, the Arbitrator decreases spend with no impact on performance.\n  \n  With cf-mysql v26, we've replaced one of the MySQL nodes with a lightweight [Arbitrator node](http://galeracluster.\n  com/documentation-webpages/arbitrator.html). Previously, the minimal HA configuration required three full-size MySQL nodes. \n  \n  When using only two nodes, the safest way to respond to a network or VM incident is downtime: the nodes stop accepting traffic until they can re-establish communication. An Arbitrator helps a two node MySQL cluster avoid the possibility of a [split-brain condition](http://galeracluster.com/documentation-webpages/weightedquorum.html#split-brain-condition) or downtime by participating in [weighted quorum elections](http://galeracluster.com/documentation-webpages/weightedquorum.html).\n  \n  CF-MySQL scales best vertically, not horizontally. On many public clouds, large instances can be very expensive, but the Arbitrator uses a lightweight VM. By using an Arbitrator, as you scale your deployment, you spend only twice, not three times the cost required to support your applications. On AWS, we recommend a [T2 small](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/t2-instances.html) **with no sacrifice in performance**, see our benchmarking work below.\n  \n  For new deployments, the 2+1 topology is the default. You can find instructions to generate an install manifest in the [README.md](README.md), and further instructions to migrate between Single, Three, and 2+1 toplogies in the [Arbitrator documentation](arbitrator.md). The instructions also cover how to migrate between each. If you follow along carefully, you won't experience any downtime.\n  - [[#109744228](https://www.pivotaltracker.com/story/show/109744228)], [[#109744232](https://www.pivotaltracker.com/story/show/109744232)], [[#109744230](https://www.pivotaltracker.com/story/show/109744230)], [[#109744234](https://www.pivotaltracker.com/story/show/109744234), [[#109744236](https://www.pivotaltracker.com/story/show/109744236)], [[#110772724](https://www.pivotaltracker.com/story/show/110772724)], [[#111741306](https://www.pivotaltracker.com/story/show/111741306)], [[#109748868](https://www.pivotaltracker.com/story/show/109748868)]\n    - You can view our results in the [Benchmarking spreadsheet](https://docs.google.com/spreadsheets/d/12p7OGa_Xmrf7zdNqmzDY0O7p8aFHF0PeUmaN0AQl7eY/edit?usp=sharing).\n\n## Bugfixes and Interestings\n- Enable `wsrep_load_data_splitting` option [[#112648647](https://www.pivotaltracker.com/story/show/112648647)]\n  - Ensures bulk-loading data from big files using `LOAD DATA INFILE` uses transactions.\n- Change default of skip_name_resolve to true [[#106676160](https://www.pivotaltracker.com/story/show/106676160)]\n  - As promised in the [v25 release notes](https://github.com/cloudfoundry/cf-mysql-release/releases/tag/v25).\n- **Bugfix:** Bump route-registrar libraries [[#112556657](https://www.pivotaltracker.com/story/show/112556657)]\n- **Bugfix:** As an Operator and as a Service Author, it'd be great to keep a local copy of logs when syslog is configured [[#111344064](https://www.pivotaltracker.com/story/show/111344064)]\n- **Bugfix:** wsrep_node_name is the same for all mysql jobs [[#113135203](https://www.pivotaltracker.com/story/show/113135203)]\n- **Docs fix:** Document that user should wait if they encounter the monit 503 error during bootstrap [[#111778592](https://www.pivotaltracker.com/story/show/111778592)]\n\n## Changes in Manifest Generation - Important!\n- As an Operator, I should be able to specify flags instead of positional args when generating a manifest [[#110775864](https://www.pivotaltracker.com/story/show/110775864)].\n  \n  We've changed the way you create manifests considerably. The new way closely resembles how [diego](diego-release/examples/aws/README.md) generates manifests. Regrettably, for those of you who do not generate manifests by updating stubs and re-generating manifests, the new manifests are **significantly different** than versions pre-v26.\n  \n  The `generate-deployment-manifest` script is now located in the cf-mysql-release `scripts` directory. Run `./scripts/generate-deployment-manifest` without argument to see help output.\n  - Manifest generation now requires [spiff](https://github.com/cloudfoundry-incubator/spiff) v1.0.7\n  \n  If you're the type of person who manually updates deployment manifests, we've unfortunately made a lot of work for you. We _highly recommend_ you switch to generating manifests from the provided stubs each time you update `cf-mysql-release`.\n\n## Manifest Changes\n\n#### MySQL Job Spec Changes\n- Move `skip_name_resolve` to `cf_mysql.mysql.skip_name_resolve` and it now defaults to true\n- `cf_mysql.mysql.roadmin_password` combined with `cf_mysql.mysql.roadmin_enabled` determine if the read only user exists\n  - If `roadmin_password` is blank or `roadmin_enabled` is false, the read only user will be disabled\n- `port` is now `cf_mysql.mysql.port`\n- `healthcheck_port` is now `cf_mysql.mysql.healthcheck_port`\n- `max_connections` is now `cf_mysql.mysql.max_connections`\n- `innodb_buffer_pool_size` is now `cf_mysql.mysql.innodb_buffer_pool_size`\n- `cluster_ips` is now `cf_mysql.mysql.cluster_ips`\n- `max_heap_table_size` is now `cf_mysql.mysql.max_heap_table_size`\n- `tmp_table_size` is now `cf_mysql.mysql.tmp_table_size`\n- `wsrep_max_ws_rows` is now `cf_mysql.mysql.wsrep_max_ws_rows`\n- `wsrep_max_ws_size` is now `cf_mysql.mysql.wsrep_max_ws_size`\n- `gcache_size` is now `cf_mysql.mysql.gcache_size`\n- `ib_log_file_size` is now `cf_mysql.mysql.ib_log_file_size`\n- `seeded_databases` is now `cf_mysql.mysql.seeded_databases`\n- `bootstrap_endpoint.username` is now `cf_mysql.mysql.bootstrap_endpoint.username`\n- `bootstrap_endpoint.password` is now `cf_mysql.mysql.bootstrap_endpoint.password`\n\n#### Proxy Job Spec Changes\n- Move all properties to be under the top level `cf_mysql` key, except for `network_name`\n- `cluster_ips` now refers to the same `cf_mysql.mysql.cluster_ips` from the mysql job spec\n- Rename the entire `proxy` hash to `cf_mysql.proxy`\n- added `cf_mysql.proxy.arbitrator_ip` property to tell the proxy where the arbitrator lives. This, in case you are deploying using an arbitrator, see above for details.\n\n#### CF MySQL Broker Job Spec Changes\n- `api_url` is now `cf.api_url`\n- `skip_ssl_validation` is now `cf.skip_ssl_validation`\n- `mysql_node.host` is now `cf_mysql.external_host`\n- Move `auth_username`, `auth_password`, `cookie_secret`, `max_user_connections_default`, `services`, `ssl_enabled` to\n  \n  ```\n  cf_mysql:\n    broker:\n      auth_username:\n      auth_password:\n      cookie_secret:\n      max_user_connections_default:\n      services:\n      ssl_enabled:\n  ```\n- Rename `mysql_node` hash to `cf_mysql.mysql`\n\n#### Arbitrator Job Spec\n- See spec file [spec file](jobs/arbitrator/spec) for manifest properties.\n- These properties are optional dependent upon whether you are deploying an arbitrator.\n\n#### Acceptance Tests Errand Spec Changes\n- `cf.apps_domain` is now `cf.app_domains`\n- Add `cf.smoke_tests.org`\n- Add `cf.smoke_tests.use_existing_org`\n- `smoke_tests_only` is now `cf_mysql.acceptance_tests.smoke_tests_only`\n- `standalone_tests_only` is now `cf_mysql.acceptance_tests.standalone_tests_only`\n- `timeout_scale` is now `cf_mysql.acceptance_tests.timeout_scale`\n- Move all `proxy` properties under `cf_mysql.proxy`\n- Add `cf_mysql.broker.services`\n\n#### Bootstrap Errand Spec Changes\n- All properties have been moved under `cf_mysql.mysql`\n\n#### Broker Registrar Errand Spec Changes\n- `broker.host` is now `cf_mysql.external_host`\n- Remove `broker.name`\n- `broker.protocol` is now `cf_mysql.broker.brotocol`\n- `broker.services` is now `cf_mysql.broker.services`\n- `broker.username` is now `cf_mysql.broker.auth_username`\n- `broker.password` is now `cf_mysql.broker.auth_password`\n- `broker.protocol` is now `cf_mysql.broker.protocol`\n- `broker.port` is now `cf_mysql.broker.port`\n\n#### Broker Deregistrar Errand Spec Changes\n- `broker.name` is removed\n- Added `cf_mysql.broker.services`\n"
}