[
  {
    "Name": "doppler",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor526408960/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "doppler.key.erb",
        "DstPathEnd": "config/certs/doppler.key",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/doppler.key.erb"
      },
      {
        "SrcPathEnd": "loggregator_ca.crt.erb",
        "DstPathEnd": "config/certs/loggregator_ca.crt",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/loggregator_ca.crt.erb"
      },
      {
        "SrcPathEnd": "dns_health_check.erb",
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/dns_health_check.erb"
      },
      {
        "SrcPathEnd": "doppler_ctl.erb",
        "DstPathEnd": "bin/doppler_ctl",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/doppler_ctl.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "doppler.crt.erb",
        "DstPathEnd": "config/certs/doppler.crt",
        "Path": "/tmp/tar-CmdExtractor526408960/templates/doppler.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "doppler"
      }
    ],
    "Properties": [
      {
        "Name": "loggregator.tls.cipher_suites",
        "Description": "An ordered list of supported SSL cipher suites. Allowed cipher suites are\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.\n",
        "Default": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.grpc_port",
        "Description": "Port for outgoing log messages via GRPC",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.container_metric_ttl_seconds",
        "Description": "TTL (in seconds) for container usage metrics",
        "Default": 120,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.pprof_port",
        "Description": "The pprof port for runtime profiling data",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.health_addr",
        "Description": "The host:port to expose health metrics for doppler",
        "Default": "localhost:14825",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.maxRetainedLogMessages",
        "Description": "number of log messages to retain per application",
        "Default": 100,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.doppler.key",
        "Description": "TLS key for doppler",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.host",
        "Description": "The host used to emit messages to the Metron agent",
        "Default": "127.0.0.1",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.grpc_port",
        "Description": "The port used to emit grpc messages to the Metron agent",
        "Default": 3458,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.doppler.cert",
        "Description": "TLS certificate for doppler",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.sink_inactivity_timeout_seconds",
        "Description": "Interval before removing a sink due to inactivity",
        "Default": 3600,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.locked_memory_limit",
        "Description": "Size (KB) of shell's locked memory limit. Set to 'kernel' to use the\nkernel's default. Non-numeric values other than 'kernel', 'soft', 'hard',\nand 'unlimited' will result in an error.\n",
        "Default": "unlimited",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "loggregator_trafficcontroller",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor149841458/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "loggregator_trafficcontroller_ctl.erb",
        "DstPathEnd": "bin/loggregator_trafficcontroller_ctl",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/loggregator_trafficcontroller_ctl.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "trafficcontroller.crt.erb",
        "DstPathEnd": "config/certs/trafficcontroller.crt",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/trafficcontroller.crt.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/uaa_ca.crt.erb"
      },
      {
        "SrcPathEnd": "dns_health_check.erb",
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/dns_health_check.erb"
      },
      {
        "SrcPathEnd": "drain.erb",
        "DstPathEnd": "bin/drain",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/drain.erb"
      },
      {
        "SrcPathEnd": "trafficcontroller.key.erb",
        "DstPathEnd": "config/certs/trafficcontroller.key",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/trafficcontroller.key.erb"
      },
      {
        "SrcPathEnd": "loggregator_ca.crt.erb",
        "DstPathEnd": "config/certs/loggregator_ca.crt",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/loggregator_ca.crt.erb"
      },
      {
        "SrcPathEnd": "cc_trafficcontroller.crt.erb",
        "DstPathEnd": "config/certs/cc_trafficcontroller.crt",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/cc_trafficcontroller.crt.erb"
      },
      {
        "SrcPathEnd": "cc_trafficcontroller.key.erb",
        "DstPathEnd": "config/certs/cc_trafficcontroller.key",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/cc_trafficcontroller.key.erb"
      },
      {
        "SrcPathEnd": "mutual_tls_ca.crt.erb",
        "DstPathEnd": "config/certs/mutual_tls_ca.crt",
        "Path": "/tmp/tar-CmdExtractor149841458/templates/mutual_tls_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "loggregator_trafficcontroller"
      }
    ],
    "Properties": [
      {
        "Name": "metron_endpoint.grpc_port",
        "Description": "The port used to emit grpc messages to the Metron agent",
        "Default": 3458,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metric_emitter.interval",
        "Description": "The interval that metrics are emitted to the metron.",
        "Default": "1m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.uaa.client_secret",
        "Description": "Doppler's client secret to connect to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "PEM encoded CA certificate for secure communication to UAA. Required if uaa.internal_url is provided.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.grpc_port",
        "Description": "Port for outgoing log messages via GRPC",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "system_domain",
        "Description": "Domain reserved for CF operator, base URL where the login, uaa, and other non-user apps listen",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.internal_service_hostname",
        "Description": "Internal hostname used to resolve the address of the Cloud Controller",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.cc_trafficcontroller.key",
        "Description": "TLS key for communication between Cloud Controller and trafficcontroller",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.internal_url",
        "Description": "Internal URL of UAA",
        "Default": "",
        "Example": "https://uaa.service.cf.internal:8443",
        "Examples": null
      },
      {
        "Name": "loggregator.tls.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "traffic_controller.health_addr",
        "Description": "The host:port to expose health metrics for trafficcontroller",
        "Default": "localhost:14825",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ssl.skip_cert_verify",
        "Description": "when connecting over https, ignore bad ssl certificates",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.mutual_tls.ca_cert",
        "Description": "PEM-encoded CA certificate for secure, mutually authenticated TLS communication",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.uaa_client_id",
        "Description": "DEPRECATED in favor of loggregator.uaa.client.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.outgoing_dropsonde_port",
        "Description": "Port for outgoing dropsonde messages",
        "Default": 8081,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.doppler.addrs",
        "Description": "The addresses of Dopplers (alternative to doppler link)",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.cc_trafficcontroller.cert",
        "Description": "TLS certificate for communication between Cloud Controller and trafficcontroller",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.outgoing_port",
        "Description": "Port for outgoing doppler messages",
        "Default": 8081,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "traffic_controller.pprof_port",
        "Description": "The pprof port for runtime profiling data",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.host",
        "Description": "The host used to emit messages to the Metron agent",
        "Default": "127.0.0.1",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "traffic_controller.security_event_logging.enabled",
        "Description": "Enable logging of all requests made to the Traffic Controller in CEF format",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.trafficcontroller.cert",
        "Description": "TLS certificate for trafficcontroller",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.trafficcontroller.key",
        "Description": "TLS key for trafficcontroller",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.dropsonde_port",
        "Description": "The port used to emit dropsonde messages to the Metron agent",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.tls_port",
        "Description": "Port for internal TLS communication",
        "Default": 9023,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "traffic_controller.disable_access_control",
        "Description": "Traffic controller bypasses authentication with the UAA and CC",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "traffic_controller.locked_memory_limit",
        "Description": "Size (KB) of shell's locked memory limit. Set to 'kernel' to use the\nkernel's default. Non-numeric values other than 'kernel', 'soft',\n'hard', and 'unlimited' will result in an error.\n",
        "Default": "unlimited",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.uaa.client",
        "Description": "Doppler's client id to connect to UAA",
        "Default": "doppler",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metron_agent",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor501102132/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "metron_agent.key.erb",
        "DstPathEnd": "config/certs/metron_agent.key",
        "Path": "/tmp/tar-CmdExtractor501102132/templates/metron_agent.key.erb"
      },
      {
        "SrcPathEnd": "loggregator_ca.crt.erb",
        "DstPathEnd": "config/certs/loggregator_ca.crt",
        "Path": "/tmp/tar-CmdExtractor501102132/templates/loggregator_ca.crt.erb"
      },
      {
        "SrcPathEnd": "metron_agent_ctl.erb",
        "DstPathEnd": "bin/metron_agent_ctl",
        "Path": "/tmp/tar-CmdExtractor501102132/templates/metron_agent_ctl.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor501102132/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "metron_agent.crt.erb",
        "DstPathEnd": "config/certs/metron_agent.crt",
        "Path": "/tmp/tar-CmdExtractor501102132/templates/metron_agent.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "metron_agent"
      }
    ],
    "Properties": [
      {
        "Name": "metron_agent.health_port",
        "Description": "The port for the health endpoint",
        "Default": 14824,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.bosh_dns",
        "Description": "Enable Bosh DNS. Disabling this implies Consul DNS.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.addr",
        "Description": "DNS name for doppler. This needs to be round robbin DNS if you want metron to communicate with multiple dopplers.",
        "Default": "doppler.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.grpc_port",
        "Description": "Port for outgoing log messages via GRPC",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.metron.key",
        "Description": "TLS key for metron",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.deployment",
        "Description": "Name of deployment (added as tag on all outgoing v1 envelopes)",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.disable_udp",
        "Description": "Disable incoming UDP",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.grpc_port",
        "Description": "Port the metron agent is listening on to receive gRPC log envelopes",
        "Default": 3458,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.pprof_port",
        "Description": "The pprof port for runtime profiling data",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.cipher_suites",
        "Description": "An ordered list of supported SSL cipher suites. Allowed cipher suites are\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.\n",
        "Default": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.zone",
        "Description": "Availability zone where this agent is running",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.tags",
        "Description": "Collection of tags to add on all outgoing v2 envelopes. Bosh deployment, job, index and IP will be merged with this property if they are not provided",
        "Default": {},
        "Example": {
          "deployment": "cf"
        },
        "Examples": null
      },
      {
        "Name": "metron_agent.listening_port",
        "Description": "Port the metron agent is listening on to receive dropsonde log messages",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.metron.cert",
        "Description": "TLS certificate for metron",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metron_agent_windows",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor342779782/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "pre-start.ps1.erb",
        "DstPathEnd": "bin/pre-start.ps1",
        "Path": "/tmp/tar-CmdExtractor342779782/templates/pre-start.ps1.erb"
      },
      {
        "SrcPathEnd": "metron_agent.crt.erb",
        "DstPathEnd": "config/certs/metron_agent.crt",
        "Path": "/tmp/tar-CmdExtractor342779782/templates/metron_agent.crt.erb"
      },
      {
        "SrcPathEnd": "metron_agent.key.erb",
        "DstPathEnd": "config/certs/metron_agent.key",
        "Path": "/tmp/tar-CmdExtractor342779782/templates/metron_agent.key.erb"
      },
      {
        "SrcPathEnd": "loggregator_ca.crt.erb",
        "DstPathEnd": "config/certs/loggregator_ca.crt",
        "Path": "/tmp/tar-CmdExtractor342779782/templates/loggregator_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "metron_agent_windows"
      }
    ],
    "Properties": [
      {
        "Name": "metron_agent.bosh_dns",
        "Description": "Enable Bosh DNS. Disabling this implies Consul DNS.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.metron.cert",
        "Description": "TLS certificate for metron",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.zone",
        "Description": "Availability zone where this agent is running",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.deployment",
        "Description": "Name of deployment (added as tag on all outgoing v1 envelopes)",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.tags",
        "Description": "Collection of tags to add on all outgoing v2 envelopes. Bosh deployment, job, index and IP will be merged with this property if they are not provided",
        "Default": {},
        "Example": {
          "deployment": "cf"
        },
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.fallback_addresses",
        "Description": "Addresses of fallback servers to be used if the primary syslog server is down. Only tcp or relp are supported. Each list entry should consist of \"address\", \"transport\" and \"port\" keys. ",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.custom_rule",
        "Description": "Custom rule for syslog forward daemon",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.max_message_size",
        "Description": "maximum message size to be sent",
        "Default": "4k",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.health_port",
        "Description": "The port for the health endpoint",
        "Default": 14824,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.listening_port",
        "Description": "Port the metron agent is listening on to receive dropsonde log messages",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.pprof_port",
        "Description": "The pprof port for runtime profiling data",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.grpc_port",
        "Description": "Port the metron agent is listening on to receive gRPC log envelopes",
        "Default": 3458,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.metron.key",
        "Description": "TLS key for metron",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.cipher_suites",
        "Description": "An ordered list of supported SSL cipher suites. Allowed cipher suites are\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.\n",
        "Default": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.enable",
        "Description": "Enable or disable rsyslog configuration for forwarding syslog messages into metron",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.port",
        "Description": "Port of syslog aggregator",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_agent.disable_udp",
        "Description": "Disable incoming UDP",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.grpc_port",
        "Description": "Port for outgoing log messages via GRPC",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.address",
        "Description": "IP address for syslog aggregator",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "syslog_daemon_config.transport",
        "Description": "Transport to be used when forwarding logs (tcp|udp).",
        "Default": "udp",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "doppler.addr",
        "Description": "DNS name for doppler. This needs to be round robbin DNS if you want metron to communicate with multiple dopplers.",
        "Default": "doppler.service.cf.internal",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "reverse_log_proxy",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor950702760/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "reverse_log_proxy.key.erb",
        "DstPathEnd": "config/certs/reverse_log_proxy.key",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/reverse_log_proxy.key.erb"
      },
      {
        "SrcPathEnd": "mutual_tls_ca.crt.erb",
        "DstPathEnd": "config/certs/mutual_tls_ca.crt",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/mutual_tls_ca.crt.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "dns_health_check.erb",
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/dns_health_check.erb"
      },
      {
        "SrcPathEnd": "drain.erb",
        "DstPathEnd": "bin/drain",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/drain.erb"
      },
      {
        "SrcPathEnd": "reverse_log_proxy_ctl.erb",
        "DstPathEnd": "bin/reverse_log_proxy_ctl",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/reverse_log_proxy_ctl.erb"
      },
      {
        "SrcPathEnd": "reverse_log_proxy.crt.erb",
        "DstPathEnd": "config/certs/reverse_log_proxy.crt",
        "Path": "/tmp/tar-CmdExtractor950702760/templates/reverse_log_proxy.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "reverse_log_proxy"
      }
    ],
    "Properties": [
      {
        "Name": "loggregator.doppler.addrs",
        "Description": "The addresses of Dopplers (alternative to doppler link)",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.doppler.grpc_port",
        "Description": "The grpc port for Doppler (alternative to doppler link)",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.host",
        "Description": "The host used to emit messages to the Metron agent",
        "Default": "127.0.0.1",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "reverse_log_proxy.egress.port",
        "Description": "The port of Loggregator's v2 API",
        "Default": 8082,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "reverse_log_proxy.egress.max_streams",
        "Description": "Maximum allowed streams open from a single reverse log proxy.\n",
        "Default": 500,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "reverse_log_proxy.pprof.port",
        "Description": "",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "reverse_log_proxy.health_addr",
        "Description": "The host:port to expose health metrics for reverse log proxy",
        "Default": "localhost:0",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metric_emitter.interval",
        "Description": "The interval that metrics are emitted to the metron.",
        "Default": "1m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.reverse_log_proxy.cert",
        "Description": "TLS certificate for the reverse log proxy",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.reverse_log_proxy.key",
        "Description": "TLS key for the reverse log proxy",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "loggregator.tls.cipher_suites",
        "Description": "An ordered list of supported SSL cipher suites. Allowed cipher suites are\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 and TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.\n",
        "Default": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron_endpoint.grpc_port",
        "Description": "The port used to emit grpc messages to the Metron agent",
        "Default": 3458,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "reverse_log_proxy_gateway",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor395045402/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "reverse_log_proxy_gateway.crt.erb",
        "DstPathEnd": "config/certs/reverse_log_proxy_gateway.crt",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/reverse_log_proxy_gateway.crt.erb"
      },
      {
        "SrcPathEnd": "reverse_log_proxy_gateway.key.erb",
        "DstPathEnd": "config/certs/reverse_log_proxy_gateway.key",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/reverse_log_proxy_gateway.key.erb"
      },
      {
        "SrcPathEnd": "mutual_tls_ca.crt.erb",
        "DstPathEnd": "config/certs/mutual_tls_ca.crt",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/mutual_tls_ca.crt.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "drain.erb",
        "DstPathEnd": "bin/drain",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/drain.erb"
      },
      {
        "SrcPathEnd": "reverse_log_proxy_gateway_ctl.erb",
        "DstPathEnd": "bin/reverse_log_proxy_gateway_ctl",
        "Path": "/tmp/tar-CmdExtractor395045402/templates/reverse_log_proxy_gateway_ctl.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "reverse_log_proxy_gateway"
      }
    ],
    "Properties": [
      {
        "Name": "http.address",
        "Description": "HTTP address for the gateway to listen on",
        "Default": "127.0.0.1:8088",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.ca_cert",
        "Description": "CA root required for key/cert verification",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.client_cert",
        "Description": "TLS client certificate for connecting to logs provider",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.client_key",
        "Description": "TLS client key for connecting to logs provider",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.common_name",
        "Description": "TLS common name for logs provider",
        "Default": "reverselogproxy",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "reverse_log_proxy_gateway_cf_auth_proxy",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor494274652/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "cc_ca.crt.erb",
        "DstPathEnd": "config/certs/cc_ca.crt",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/cc_ca.crt.erb"
      },
      {
        "SrcPathEnd": "cc.crt.erb",
        "DstPathEnd": "config/certs/cc.crt",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/cc.crt.erb"
      },
      {
        "SrcPathEnd": "cc.key.erb",
        "DstPathEnd": "config/certs/cc.key",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/cc.key.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor494274652/templates/uaa_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "reverse_log_proxy_gateway_cf_auth_proxy"
      }
    ],
    "Properties": [
      {
        "Name": "cc.ca_cert",
        "Description": "The CA for the internal api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.cert",
        "Description": "The cert used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.key",
        "Description": "The client private key used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_id",
        "Description": "The client id to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_secret",
        "Description": "The client secret to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "The CA for internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "skip_cert_verify",
        "Description": "Whether to accept invalid certs",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "proxy_port",
        "Description": "The port for the rlp-gateway-cf-auth-proxy to listen on",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.common_name",
        "Description": "The CN for the CA cert",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.internal_addr",
        "Description": "The endpoint used for the internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  }
]