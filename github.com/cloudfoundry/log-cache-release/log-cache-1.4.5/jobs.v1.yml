[
  {
    "Name": "log-cache",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor931882440/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor931882440/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor931882440/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor931882440/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor931882440/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor931882440/templates/log_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache"
      }
    ],
    "Properties": [
      {
        "Name": "disabled",
        "Description": "Turns off log cache.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "port",
        "Description": "The port for the log-cache to listen on",
        "Default": 8080,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "store_size",
        "Description": "The number of envelopes to store in memory",
        "Default": 1000000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "memory_limit_percent",
        "Description": "Percentage of system memory to use for the cache",
        "Default": 50,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health_addr",
        "Description": "The address for LogCache to bind a health endpoint",
        "Default": "localhost:6060",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.ca_cert",
        "Description": "The Certificate Authority for log cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.cert",
        "Description": "The client cert for log cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.key",
        "Description": "The client private key for log cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-blackbox",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor185561146/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor185561146/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor185561146/templates/ctl"
      },
      {
        "SrcPathEnd": "log_cache_ca.crt.erb",
        "DstPathEnd": "config/certs/log_cache_ca.crt",
        "Path": "/tmp/tar-CmdExtractor185561146/templates/log_cache_ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor185561146/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor185561146/templates/log_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-blackbox"
      }
    ],
    "Properties": [
      {
        "Name": "run_interval",
        "Description": "The interval between test runs",
        "Default": "10m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "datadog.api_key",
        "Description": "The api key to use when emitting test results to Datadog",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "datadog.tags",
        "Description": "Tags that will be added to the emitted Datadog metrics as a comma separated list.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "datadog.origin_host",
        "Description": "Hostname to be included on the emitted Datadog metrics",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_cache_host",
        "Description": "BOSH DNS alias at which Log Cache can be found",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-cf-auth-proxy",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor223179132/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "cc_ca.crt.erb",
        "DstPathEnd": "config/certs/cc_ca.crt",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/cc_ca.crt.erb"
      },
      {
        "SrcPathEnd": "cc.crt.erb",
        "DstPathEnd": "config/certs/cc.crt",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/cc.crt.erb"
      },
      {
        "SrcPathEnd": "cc.key.erb",
        "DstPathEnd": "config/certs/cc.key",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/cc.key.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/uaa_ca.crt.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor223179132/templates/environment.sh.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-cf-auth-proxy"
      }
    ],
    "Properties": [
      {
        "Name": "uaa.internal_addr",
        "Description": "The endpoint used for the internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "skip_cert_verify",
        "Description": "Whether to accept invalid certs",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.ca_cert",
        "Description": "The CA for the internal api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.common_name",
        "Description": "The CN for the CA cert",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_id",
        "Description": "The client id to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_secret",
        "Description": "The client secret to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "proxy_port",
        "Description": "The port for the cf-auth-proxy to listen on",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.cert",
        "Description": "The cert used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.key",
        "Description": "The client private key used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "The CA for internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-expvar-forwarder",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor680019470/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor680019470/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor680019470/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor680019470/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor680019470/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor680019470/templates/log_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-expvar-forwarder"
      }
    ],
    "Properties": [
      {
        "Name": "interval",
        "Description": "How often the expvar-forwarder should scrape registered\nendpoints and report values.\n",
        "Default": "1m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_metrics",
        "Description": "Write each metric from the endpoints to Log Cache and stdout.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "counters",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- source_id: The output sourceID of the Counter\n- template: The golang text/template to find the metric in the expvar\n  output.\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "gauges",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- unit: The output unit of the Counter\n- source_id: The output sourceID of the Counter\n- template: The golang text/template to find the metric in the expvar\n  output.\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "maps",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- source_id: The output sourceID of the Map\n- template: The golang text/template to find the metric in the expvar\n  output. (Hint: you'll probably want to use a custom map formatter\n  such as the jsonMap)\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\nEach entry in the map will be parsed into one gauge per key before it\nis forwarder onto the receiving log cache instance.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_source_id",
        "Description": "Source ID to use for reported metrics when none is provided. Also used\nfor version metrics.\n",
        "Default": "log-cache",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-gateway",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor349798000/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor349798000/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor349798000/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor349798000/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor349798000/templates/log_cache.key.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor349798000/templates/ctl"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-gateway"
      }
    ],
    "Properties": [
      {
        "Name": "gateway_addr",
        "Description": "The address for the log-cache-gateway to listen on",
        "Default": ":8081",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-nozzle",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor973374242/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "logs_provider.key.erb",
        "DstPathEnd": "config/certs/logs_provider.key",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/logs_provider.key.erb"
      },
      {
        "SrcPathEnd": "logs_provider_ca.crt.erb",
        "DstPathEnd": "config/certs/logs_provider_ca.crt",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/logs_provider_ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache_ca.crt.erb",
        "DstPathEnd": "config/certs/log_cache_ca.crt",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/log_cache_ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/log_cache.key.erb"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/ctl"
      },
      {
        "SrcPathEnd": "logs_provider.crt.erb",
        "DstPathEnd": "config/certs/logs_provider.crt",
        "Path": "/tmp/tar-CmdExtractor973374242/templates/logs_provider.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-nozzle"
      }
    ],
    "Properties": [
      {
        "Name": "shard_id",
        "Description": "The sharding group name to use for egress from RLP",
        "Default": "log-cache",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "selectors",
        "Description": "A list of envelope types to read from RLP",
        "Default": [
          "log",
          "gauge",
          "counter",
          "timer",
          "event"
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.tls.ca_cert",
        "Description": "CA root required for key/cert verification to connect to the logs-provider",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.tls.cert",
        "Description": "TLS certificate for the logs-provider connection",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.tls.key",
        "Description": "TLS key for the logs-provider connection",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health_addr",
        "Description": "The address for the Nozzle to bind a health endpoint",
        "Default": "localhost:6061",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "log-cache-scheduler",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor848705188/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor848705188/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor848705188/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.crt.erb",
        "DstPathEnd": "config/certs/log_cache.crt",
        "Path": "/tmp/tar-CmdExtractor848705188/templates/log_cache.crt.erb"
      },
      {
        "SrcPathEnd": "log_cache.key.erb",
        "DstPathEnd": "config/certs/log_cache.key",
        "Path": "/tmp/tar-CmdExtractor848705188/templates/log_cache.key.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor848705188/templates/ctl"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-scheduler"
      }
    ],
    "Properties": [
      {
        "Name": "interval",
        "Description": "The interval at which the scheduler operates",
        "Default": "15s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "count",
        "Description": "The number of ranges to schedule across the Log Cache cluster",
        "Default": 100,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health_addr",
        "Description": "The address for LogCache to bind a health endpoint",
        "Default": "localhost:6064",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor177140086/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "metric_cache.key.erb",
        "DstPathEnd": "config/certs/metric_cache.key",
        "Path": "/tmp/tar-CmdExtractor177140086/templates/metric_cache.key.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor177140086/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor177140086/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor177140086/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.crt.erb",
        "DstPathEnd": "config/certs/metric_cache.crt",
        "Path": "/tmp/tar-CmdExtractor177140086/templates/metric_cache.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "metric-cache"
      }
    ],
    "Properties": [
      {
        "Name": "port",
        "Description": "The port for the metric-cache to listen on",
        "Default": 8080,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "store_size",
        "Description": "The number of envelopes to store in memory",
        "Default": 1000000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "memory_limit_percent",
        "Description": "Percentage of system memory to use for the cache",
        "Default": 50,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health_addr",
        "Description": "The address for metric-cache to bind a health endpoint",
        "Default": "localhost:6060",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.ca_cert",
        "Description": "The Certificate Authority for metric-cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.cert",
        "Description": "The client cert for metric-cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls.key",
        "Description": "The client private key for metric-cache mutual TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "disabled",
        "Description": "Turns off metric-cache.",
        "Default": false,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache-cf-auth-proxy",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor574087704/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "cc.crt.erb",
        "DstPathEnd": "config/certs/cc.crt",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/cc.crt.erb"
      },
      {
        "SrcPathEnd": "cc.key.erb",
        "DstPathEnd": "config/certs/cc.key",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/cc.key.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/uaa_ca.crt.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "cc_ca.crt.erb",
        "DstPathEnd": "config/certs/cc_ca.crt",
        "Path": "/tmp/tar-CmdExtractor574087704/templates/cc_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-cf-auth-proxy"
      }
    ],
    "Properties": [
      {
        "Name": "cc.key",
        "Description": "The client private key used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "The CA for internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "skip_cert_verify",
        "Description": "Whether to accept invalid certs",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "proxy_port",
        "Description": "The port for the cf-auth-proxy to listen on",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.common_name",
        "Description": "The CN for the CA cert",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.cert",
        "Description": "The cert used to authenticate against the internal CC api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cc.ca_cert",
        "Description": "The CA for the internal api",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_id",
        "Description": "The client id to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_secret",
        "Description": "The client secret to authenticate to UAA",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.internal_addr",
        "Description": "The endpoint used for the internal UAA api",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache-expvar-forwarder",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor128714506/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor128714506/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor128714506/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor128714506/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.crt.erb",
        "DstPathEnd": "config/certs/metric_cache.crt",
        "Path": "/tmp/tar-CmdExtractor128714506/templates/metric_cache.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.key.erb",
        "DstPathEnd": "config/certs/metric_cache.key",
        "Path": "/tmp/tar-CmdExtractor128714506/templates/metric_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-expvar-forwarder"
      }
    ],
    "Properties": [
      {
        "Name": "default_source_id",
        "Description": "Source ID to use for reported metrics when none is provided. Also used\nfor version metrics.\n",
        "Default": "metric-cache",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "interval",
        "Description": "How often the expvar-forwarder should scrape registered\nendpoints and report values.\n",
        "Default": "1m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_metrics",
        "Description": "Write each metric from the endpoints to metric-cache and stdout.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "counters",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- source_id: The output sourceID of the Counter\n- template: The golang text/template to find the metric in the expvar\n  output.\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "gauges",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- unit: The output unit of the Counter\n- source_id: The output sourceID of the Counter\n- template: The golang text/template to find the metric in the expvar\n  output.\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "maps",
        "Description": "An array of Objects that have the following fields:\n- addr: address of the expvar endpoint\n- name: The output name of the Counter\n- source_id: The output sourceID of the Map\n- template: The golang text/template to find the metric in the expvar\n  output. (Hint: you'll probably want to use a custom map formatter\n  such as the jsonMap)\n- tags: An object that can only have string values. They will be\n  passed as tags on the envelope.\nEach entry in the map will be parsed into one gauge per key before it\nis forwarder onto the receiving metric-cache instance.\n",
        "Default": [],
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache-gateway",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor401503436/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor401503436/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor401503436/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor401503436/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.crt.erb",
        "DstPathEnd": "config/certs/metric_cache.crt",
        "Path": "/tmp/tar-CmdExtractor401503436/templates/metric_cache.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.key.erb",
        "DstPathEnd": "config/certs/metric_cache.key",
        "Path": "/tmp/tar-CmdExtractor401503436/templates/metric_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-gateway"
      }
    ],
    "Properties": [
      {
        "Name": "gateway_addr",
        "Description": "The address for the metric-cache-gateway to listen on",
        "Default": ":8081",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache-nozzle",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor790560734/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/ctl"
      },
      {
        "SrcPathEnd": "logs_provider.crt.erb",
        "DstPathEnd": "config/certs/logs_provider.crt",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/logs_provider.crt.erb"
      },
      {
        "SrcPathEnd": "logs_provider.key.erb",
        "DstPathEnd": "config/certs/logs_provider.key",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/logs_provider.key.erb"
      },
      {
        "SrcPathEnd": "logs_provider_ca.crt.erb",
        "DstPathEnd": "config/certs/logs_provider_ca.crt",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/logs_provider_ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache_ca.crt.erb",
        "DstPathEnd": "config/certs/metric_cache_ca.crt",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/metric_cache_ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.crt.erb",
        "DstPathEnd": "config/certs/metric_cache.crt",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/metric_cache.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.key.erb",
        "DstPathEnd": "config/certs/metric_cache.key",
        "Path": "/tmp/tar-CmdExtractor790560734/templates/metric_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-nozzle"
      }
    ],
    "Properties": [
      {
        "Name": "logs_provider.tls.cert",
        "Description": "TLS certificate for the logs-provider connection",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.tls.key",
        "Description": "TLS key for the logs-provider connection",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health_addr",
        "Description": "The address for the Nozzle to bind a health endpoint",
        "Default": "localhost:6061",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "shard_id",
        "Description": "The sharding group name to use for egress from RLP",
        "Default": "metric-cache",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "selectors",
        "Description": "A list of envelope types to read from RLP",
        "Default": [
          "gauge",
          "counter",
          "timer"
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "logs_provider.tls.ca_cert",
        "Description": "CA root required for key/cert verification to connect to the logs-provider",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "metric-cache-scheduler",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor302592192/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor302592192/templates/ctl"
      },
      {
        "SrcPathEnd": "environment.sh.erb",
        "DstPathEnd": "bin/environment.sh",
        "Path": "/tmp/tar-CmdExtractor302592192/templates/environment.sh.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "config/certs/ca.crt",
        "Path": "/tmp/tar-CmdExtractor302592192/templates/ca.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.crt.erb",
        "DstPathEnd": "config/certs/metric_cache.crt",
        "Path": "/tmp/tar-CmdExtractor302592192/templates/metric_cache.crt.erb"
      },
      {
        "SrcPathEnd": "metric_cache.key.erb",
        "DstPathEnd": "config/certs/metric_cache.key",
        "Path": "/tmp/tar-CmdExtractor302592192/templates/metric_cache.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "log-cache-scheduler"
      }
    ],
    "Properties": [
      {
        "Name": "health_addr",
        "Description": "The address for metric-cache to bind a health endpoint",
        "Default": "localhost:6064",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "interval",
        "Description": "The interval at which the scheduler operates",
        "Default": "15s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "count",
        "Description": "The number of ranges to schedule across the metric-ache cluster",
        "Default": 100,
        "Example": null,
        "Examples": null
      }
    ]
  }
]