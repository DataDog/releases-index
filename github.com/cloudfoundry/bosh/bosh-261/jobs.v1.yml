[
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor416106373/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "blobstore",
    "Packages": [
      {
        "Name": "nginx"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "Password agents must use to access blobstore via HTTP Basic",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.agent.password"
      },
      {
        "Default": "5000m",
        "Description": "Max allowed file size for upload",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.max_upload_size"
      },
      {
        "Default": 2,
        "Description": "Number of nginx workers for blobstore",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.nginx.workers"
      },
      {
        "Default": 25250,
        "Description": "TCP port blobstore server (ngnix) listens on",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.port"
      },
      {
        "Default": 25251,
        "Description": "TCP port backend blobstore server (simple blobstore) listens on",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.backend_port"
      },
      {
        "Default": null,
        "Description": "Username director must use to access blobstore via HTTP Basic",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.director.user"
      },
      {
        "Default": null,
        "Description": "Password director must use to access blobstore via HTTP Basic",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.director.password"
      },
      {
        "Default": null,
        "Description": "Username agents must use to access blobstore via HTTP Basic",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.agent.user"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/write_users",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/write_users.erb",
        "SrcPathEnd": "write_users.erb"
      },
      {
        "DstPathEnd": "bin/nginx_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/nginx_ctl",
        "SrcPathEnd": "nginx_ctl"
      },
      {
        "DstPathEnd": "config/nginx.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/nginx.conf.erb",
        "SrcPathEnd": "nginx.conf.erb"
      },
      {
        "DstPathEnd": "config/sites/blobstore.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/blobstore.conf.erb",
        "SrcPathEnd": "blobstore.conf.erb"
      },
      {
        "DstPathEnd": "config/mime.types",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/mime.types",
        "SrcPathEnd": "mime.types"
      },
      {
        "DstPathEnd": "config/read_users",
        "Path": "/mnt/tmp/tar-CmdExtractor416106373/templates/read_users.erb",
        "SrcPathEnd": "read_users.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor077605887/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "director",
    "Packages": [
      {
        "Name": "director"
      },
      {
        "Name": "nginx"
      },
      {
        "Name": "libpq"
      },
      {
        "Name": "postgres"
      },
      {
        "Name": "mysql"
      },
      {
        "Name": "ruby"
      },
      {
        "Name": "s3cli"
      },
      {
        "Name": "davcli"
      },
      {
        "Name": "verify_multidigest"
      }
    ],
    "Properties": [
      {
        "Default": false,
        "Description": "When true, remove dev tool packages from non-compilation VMs",
        "Example": null,
        "Examples": null,
        "Name": "director.remove_dev_tools"
      },
      {
        "Default": 4222,
        "Description": "Port that the nats server listens on",
        "Example": null,
        "Examples": null,
        "Name": "nats.port"
      },
      {
        "Default": false,
        "Description": "When true, rendered templates will be sent over NATs",
        "Example": null,
        "Examples": null,
        "Name": "director.enable_nats_delivered_templates"
      },
      {
        "Default": 5,
        "Description": "Days to keep orphaned disks and orhaned snapshots before cleanup",
        "Example": null,
        "Examples": null,
        "Name": "director.disks.max_orphaned_age_in_days"
      },
      {
        "Default": null,
        "Description": "AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4.",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.sse_kms_key_id"
      },
      {
        "Default": null,
        "Description": "Region of the blobstore used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.s3_region"
      },
      {
        "Default": "10000m",
        "Description": "Max allowed file size for upload",
        "Example": null,
        "Examples": null,
        "Name": "director.max_upload_size"
      },
      {
        "Default": false,
        "Description": "Enable/Disable snapshots for persistent disks (true|false)",
        "Example": null,
        "Examples": null,
        "Name": "director.enable_snapshots"
      },
      {
        "Default": "0 0 6 * * * UTC",
        "Description": "RufusScheduler cron formatted schedule for self snapshots",
        "Example": null,
        "Examples": null,
        "Name": "director.self_snapshot_schedule"
      },
      {
        "Default": null,
        "Description": "Uaa URL, specify either the url or the urls attribute",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.uaa.url"
      },
      {
        "Default": null,
        "Description": "Host of blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.host"
      },
      {
        "Default": 25777,
        "Description": "Port of the Registry to connect to",
        "Example": null,
        "Examples": null,
        "Name": "registry.port"
      },
      {
        "Default": false,
        "Description": "Separate worker for 'bosh vms' and 'bosh ssh'",
        "Example": null,
        "Examples": null,
        "Name": "director.enable_dedicated_status_worker"
      },
      {
        "Default": null,
        "Description": "RufusScheduler cron formatted schedule for backups",
        "Example": null,
        "Examples": null,
        "Name": "director.backup_schedule"
      },
      {
        "Default": null,
        "Description": "Host of blobstore server used for compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.host"
      },
      {
        "Default": true,
        "Description": "Verify the SSL certificate used on the blobstore?",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.ssl_verify_peer"
      },
      {
        "Default": null,
        "Description": "Username director uses to connect to blobstore used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.director.user"
      },
      {
        "Default": null,
        "Description": "Username agent uses to connect to blobstore used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.agent.user"
      },
      {
        "Default": "static",
        "Description": "AWS credentials (static / env_or_profile)",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.credentials_source"
      },
      {
        "Default": null,
        "Description": "Address of the Registry to connect to",
        "Example": null,
        "Examples": null,
        "Name": "registry.address"
      },
      {
        "Default": null,
        "Description": "CA cert to trust when communicating with UAA",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.uaa.ca_cert"
      },
      {
        "Default": null,
        "Description": "AWS S3 Bucket used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.bucket_name"
      },
      {
        "Default": null,
        "Description": "Name of cpi job (null to use bundled cpi gems)",
        "Example": null,
        "Examples": null,
        "Name": "director.cpi_job"
      },
      {
        "Default": null,
        "Description": "Server-side encryption algorithm used when storing blobs in S3 (Optional - \"AES256\"|\"aws:kms\")",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.server_side_encryption"
      },
      {
        "Default": null,
        "Description": "Password to access the Registry",
        "Example": null,
        "Examples": null,
        "Name": "registry.password"
      },
      {
        "Default": null,
        "Description": "Name of the director",
        "Example": null,
        "Examples": null,
        "Name": "director.name"
      },
      {
        "Default": null,
        "Description": "UAA client id to access Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.uaa.client_id"
      },
      {
        "Default": "0 * * * * UTC",
        "Description": "RufusScheduler cron formatted schedule for cleanup of events",
        "Example": null,
        "Examples": null,
        "Name": "director.events.cleanup_schedule"
      },
      {
        "Default": null,
        "Description": "UAA client secret to access Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.uaa.client_secret"
      },
      {
        "Default": null,
        "Description": "List of Uaa URLs, specify either the url or the urls attribute",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.uaa.urls"
      },
      {
        "Default": null,
        "Description": "Default host to use as ssh gateway with bosh ssh command",
        "Example": null,
        "Examples": null,
        "Name": "director.default_ssh_options.gateway_host"
      },
      {
        "Default": "127.0.0.1",
        "Description": "Address of the director database, for example, in the case of AWS RDS:\nrds-instance-name.coqxxxxxxxxx.us-east-1.rds.amazonaws.com\n",
        "Example": null,
        "Examples": null,
        "Name": "director.db.host"
      },
      {
        "Default": null,
        "Description": "Public key to verify Uaa token when token is encoded with asymmetric encryption",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.uaa.public_key"
      },
      {
        "Default": null,
        "Description": "AWS access_key_id used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.access_key_id"
      },
      {
        "Default": true,
        "Description": "Verify the SSL certificate used on the blobstore?",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.ssl_verify_peer"
      },
      {
        "Default": 5,
        "Description": "Max retries when creating VMs",
        "Example": null,
        "Examples": null,
        "Name": "director.max_vm_create_tries"
      },
      {
        "Default": null,
        "Description": "URL for the Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.url"
      },
      {
        "Default": null,
        "Description": "Address of the powerdns server",
        "Example": null,
        "Examples": null,
        "Name": "dns.address"
      },
      {
        "Default": "postgres",
        "Description": "DNS Database adapter",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.adapter"
      },
      {
        "Default": null,
        "Description": "Password director uses to connect to blobstore used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.director.password"
      },
      {
        "Default": null,
        "Description": "AWS region for agent used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.s3_region"
      },
      {
        "Default": null,
        "Description": "URL for the UAA server used for authenticating access to Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.uaa.url"
      },
      {
        "Default": "nats",
        "Description": "Username to connect to nats with",
        "Example": null,
        "Examples": null,
        "Name": "nats.user"
      },
      {
        "Default": "127.0.0.1",
        "Description": "DNS Database host",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.host"
      },
      {
        "Default": null,
        "Description": "AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4.",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.sse_kms_key_id"
      },
      {
        "Default": 443,
        "Description": "Port of blobstore server used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.s3_port"
      },
      {
        "Default": null,
        "Description": "AWS secret_access_key for agent used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.secret_access_key"
      },
      {
        "Default": 900,
        "Description": "Timeout for proxy connection from nginx to director",
        "Example": null,
        "Examples": null,
        "Name": "director.proxy_timeout"
      },
      {
        "Default": "bosh",
        "Description": "Name of the powerdns database",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.database"
      },
      {
        "Default": 10000,
        "Description": "Max number of events to keep",
        "Example": null,
        "Examples": null,
        "Name": "director.events.max_events"
      },
      {
        "Default": null,
        "Description": "Address of blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.address"
      },
      {
        "Default": 25250,
        "Description": "Port of blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.port"
      },
      {
        "Default": null,
        "Description": "HTTP proxy that the director, scheduler and workers should use",
        "Example": null,
        "Examples": null,
        "Name": "env.http_proxy"
      },
      {
        "Default": "static",
        "Description": "AWS Credential Source (static / env_or_profile)",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.credentials_source"
      },
      {
        "Default": null,
        "Description": "HTTPS proxy that the director, scheduler and workers should use",
        "Example": null,
        "Examples": null,
        "Name": "env.https_proxy"
      },
      {
        "Default": null,
        "Description": "AWS S3 Bucket used for the compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.bucket_name"
      },
      {
        "Default": null,
        "Description": "SSL Certificate for director (PEM encoded)",
        "Example": null,
        "Examples": null,
        "Name": "director.ssl.cert"
      },
      {
        "Default": "0 0,30 * * * * UTC",
        "Description": "RufusScheduler cron formatted schedule for cleanup of orphaned disks and orphaned snapshots",
        "Example": null,
        "Examples": null,
        "Name": "director.disks.cleanup_schedule"
      },
      {
        "Default": "bosh",
        "Description": "Name of the director database",
        "Example": null,
        "Examples": null,
        "Name": "director.db.database"
      },
      {
        "Default": [
          "0.pool.ntp.org",
          "1.pool.ntp.org"
        ],
        "Description": "List of ntp server IPs. pool.ntp.org attempts to return IPs closest to your location, but you can still specify if needed.",
        "Example": null,
        "Examples": null,
        "Name": "ntp"
      },
      {
        "Default": null,
        "Description": "AWS access_key_id for agent used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.access_key_id"
      },
      {
        "Default": null,
        "Description": "List of comma-separated hosts that should skip connecting to the proxy in the director, scheduler and workers",
        "Example": null,
        "Examples": null,
        "Name": "env.no_proxy"
      },
      {
        "Default": null,
        "Description": "CA cert to trust when communicating with Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.ca_cert"
      },
      {
        "Default": null,
        "Description": "Address of the nats server",
        "Example": null,
        "Examples": null,
        "Name": "nats.address"
      },
      {
        "Default": "dav",
        "Description": "Provider of the blobstore used by director and agent (dav|simple|s3)",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.provider"
      },
      {
        "Default": true,
        "Description": "Whether the simple blobstore plugin should use SSL to connect to the blobstore server",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.use_ssl"
      },
      {
        "Default": null,
        "Description": "AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4.",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.sse_kms_key_id"
      },
      {
        "Default": 25556,
        "Description": "Port that the director listens on",
        "Example": null,
        "Examples": null,
        "Name": "director.backend_port"
      },
      {
        "Default": "bosh",
        "Description": "DNS Database user",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.user"
      },
      {
        "Default": {
          "max_connections": 32,
          "pool_timeout": 10
        },
        "Description": "Additional options for the powerdns database",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.connection_options"
      },
      {
        "Default": null,
        "Description": "Port for agent to connect to blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.port"
      },
      {
        "Default": 2,
        "Description": "Number of nginx workers for director",
        "Example": null,
        "Examples": null,
        "Name": "director.nginx.workers"
      },
      {
        "Default": false,
        "Description": "When true, all templates will run their post_deploy script once deployment is complete",
        "Example": null,
        "Examples": null,
        "Name": "director.enable_post_deploy"
      },
      {
        "Default": null,
        "Description": "Configuration of the blobstore used by director for backups (dav|simple|s3)",
        "Example": null,
        "Examples": null,
        "Name": "director.backup_destination"
      },
      {
        "Default": true,
        "Description": "Prefer server's cipher priority instead of client's (true for On, false for Off)",
        "Example": null,
        "Examples": null,
        "Name": "director.nginx.ssl_prefer_server_ciphers"
      },
      {
        "Default": 7200,
        "Description": "Timeout for connection from bosh CLI to nginx",
        "Example": null,
        "Examples": null,
        "Name": "director.timeout"
      },
      {
        "Default": null,
        "Description": "Password used for the director database",
        "Example": null,
        "Examples": null,
        "Name": "director.db.password"
      },
      {
        "Default": null,
        "Description": "Address for agent to connect to nats",
        "Example": null,
        "Examples": null,
        "Name": "agent.nats.address"
      },
      {
        "Default": null,
        "Description": "Password to connect to nats with",
        "Example": null,
        "Examples": null,
        "Name": "nats.password"
      },
      {
        "Default": "static",
        "Description": "AWS credentials (static / env_or_profile)",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.credentials_source"
      },
      {
        "Default": 32,
        "Description": "Max number of director concurrent threads",
        "Example": null,
        "Examples": null,
        "Name": "director.max_threads"
      },
      {
        "Default": false,
        "Description": "Access to api is logged to the syslog",
        "Example": null,
        "Examples": null,
        "Name": "director.log_access_events_to_syslog"
      },
      {
        "Default": false,
        "Description": "When true, bosh will not delete vm from cloud when instance update, just destroy vm record in db",
        "Example": null,
        "Examples": null,
        "Name": "director.enable_virtual_delete_vms"
      },
      {
        "Default": false,
        "Description": "If local DNS is enabled, then include_index will cause director to propagate dns records with instance index number as well as dns records with instance ID",
        "Example": null,
        "Examples": null,
        "Name": "director.local_dns.include_index"
      },
      {
        "Default": false,
        "Description": "When true, replace substitution values in manifest with values from Config Server",
        "Example": null,
        "Examples": null,
        "Name": "director.config_server.enabled"
      },
      {
        "Default": "local",
        "Description": "User management implementation (local|uaa)",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.provider"
      },
      {
        "Default": false,
        "Description": "When a bosh deploy fails, the failed VM will be kept instead of destroyed",
        "Example": null,
        "Examples": null,
        "Name": "director.debug.keep_unreachable_vms"
      },
      {
        "Default": null,
        "Description": "Server-side encryption algorithm used when storing blobs in S3 (Optional - \"AES256\"|\"aws:kms\")",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.server_side_encryption"
      },
      {
        "Default": null,
        "Description": "SSL private key for director (PEM encoded)",
        "Example": null,
        "Examples": null,
        "Name": "director.ssl.key"
      },
      {
        "Default": 5432,
        "Description": "Port of the director database (e.g, msyql2 adapter would generally use 3306)",
        "Example": null,
        "Examples": null,
        "Name": "director.db.port"
      },
      {
        "Default": "s3",
        "Description": "Provider of the blobstore used for the compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.provider"
      },
      {
        "Default": true,
        "Description": "Whether the simple blobstore plugin should use SSL to connect to the blobstore server",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.use_ssl"
      },
      {
        "Default": null,
        "Description": "User to access the Registry",
        "Example": null,
        "Examples": null,
        "Name": "registry.username"
      },
      {
        "Default": 25555,
        "Description": "Port that the director nginx listens on",
        "Example": null,
        "Examples": null,
        "Name": "director.port"
      },
      {
        "Default": "0 0 7 * * * UTC",
        "Description": "RufusScheduler cron formatted schedule for snapshots",
        "Example": null,
        "Examples": null,
        "Name": "director.snapshot_schedule"
      },
      {
        "Default": false,
        "Description": "Enables local DNS, i.e., sending sync_dns messages with all names/IPs to all agents managed by this director",
        "Example": null,
        "Examples": null,
        "Name": "director.local_dns.enabled"
      },
      {
        "Default": false,
        "Description": "Allow gateway to be omitted from subnet configuration. Boshlite vms(containers) do not require gateway.",
        "Example": null,
        "Examples": null,
        "Name": "director.ignore_missing_gateway"
      },
      {
        "Default": 25250,
        "Description": "Port of blobstore server used for compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.port"
      },
      {
        "Default": 443,
        "Description": "Port of blobstore server used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.s3_port"
      },
      {
        "Default": null,
        "Description": "Server-side encryption algorithm used when storing blobs in S3 (Optional - \"AES256\"|\"aws:kms\")",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.server_side_encryption"
      },
      {
        "Default": 100,
        "Description": "Max number of tasks per each type to keep in disk",
        "Example": null,
        "Examples": null,
        "Name": "director.max_tasks"
      },
      {
        "Default": false,
        "Description": "Clear up arp entries when machines are recreated",
        "Example": null,
        "Examples": null,
        "Name": "director.flush_arp"
      },
      {
        "Default": null,
        "Description": "Symmetric key to verify Uaa token",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.uaa.symmetric_key"
      },
      {
        "Default": "vcap",
        "Description": "Default user to use with bosh ssh command",
        "Example": null,
        "Examples": null,
        "Name": "director.default_ssh_options.gateway_user"
      },
      {
        "Default": null,
        "Description": "DNS Database password",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.password"
      },
      {
        "Default": false,
        "Description": "Enable recording of events to the database and syslog",
        "Example": null,
        "Examples": null,
        "Name": "director.events.record_events"
      },
      {
        "Default": null,
        "Description": "Signature version of the blobstore used by s3 blobstore plugin (optional, if not provided the s3 client decides which version to use)",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.s3_signature_version"
      },
      {
        "Default": 3,
        "Description": "Number of director workers",
        "Example": null,
        "Examples": null,
        "Name": "director.workers"
      },
      {
        "Default": "bosh",
        "Description": "Username used for the director database",
        "Example": null,
        "Examples": null,
        "Name": "director.db.user"
      },
      {
        "Default": false,
        "Description": "Enable/Disable agent-director encryption (true|false)",
        "Example": null,
        "Examples": null,
        "Name": "director.encryption"
      },
      {
        "Default": true,
        "Description": "Enable/Disable auto resolution for stateful nodes for scan_and_fix (true|false)",
        "Example": null,
        "Examples": null,
        "Name": "director.auto_fix_stateful_nodes"
      },
      {
        "Default": false,
        "Description": "When true, a random unique password will be used for each vm if user has not specified a password",
        "Example": null,
        "Examples": null,
        "Name": "director.generate_vm_passwords"
      },
      {
        "Default": null,
        "Description": "AWS secret_access_key used by s3 blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.secret_access_key"
      },
      {
        "Default": null,
        "Description": "Signature version of the blobstore used by s3 blobstore plugin (optional, if not provided the s3 client decides which version to use)",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.s3_signature_version"
      },
      {
        "Default": "bosh",
        "Description": "TLD of the dns zone used by bosh",
        "Example": null,
        "Examples": null,
        "Name": "dns.domain_name"
      },
      {
        "Default": null,
        "Description": "Password agent uses to connect to blobstore used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "blobstore.agent.password"
      },
      {
        "Default": null,
        "Description": "AWS access_key_id used for the compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.access_key_id"
      },
      {
        "Default": null,
        "Description": "Signature version of the blobstore used by s3 blobstore plugin (optional, if not provided the s3 client decides which version to use)",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.s3_signature_version"
      },
      {
        "Default": "TLSv1.2",
        "Description": "SSL/TLS protocols to allow",
        "Example": null,
        "Examples": null,
        "Name": "director.nginx.ssl_protocols"
      },
      {
        "Default": "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK",
        "Description": "List of SSL ciphers to allow (format: https://www.openssl.org/docs/manmaster/man1/ciphers.html - CIPHER LIST FORMAT section)",
        "Example": null,
        "Examples": null,
        "Name": "director.nginx.ssl_ciphers"
      },
      {
        "Default": 5432,
        "Description": "Port that the powerdns database listens on",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.port"
      },
      {
        "Default": null,
        "Description": "Host of blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.host"
      },
      {
        "Default": true,
        "Description": "Whether the simple blobstore plugin should use SSL to connect to the blobstore server",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.use_ssl"
      },
      {
        "Default": null,
        "Description": "Address for agent to connect to blobstore server used by simple blobstore plugin",
        "Example": null,
        "Examples": null,
        "Name": "agent.blobstore.address"
      },
      {
        "Default": null,
        "Description": "List of users that can authenticate with director in non-Uaa mode",
        "Example": null,
        "Examples": null,
        "Name": "director.user_management.local.users"
      },
      {
        "Default": "postgres",
        "Description": "The type of database used (mysql2|postgres|sqlite)",
        "Example": null,
        "Examples": null,
        "Name": "director.db.adapter"
      },
      {
        "Default": {
          "max_connections": 32,
          "pool_timeout": 10
        },
        "Description": "Additional options for the database",
        "Example": null,
        "Examples": null,
        "Name": "director.db.connection_options"
      },
      {
        "Default": null,
        "Description": "AWS secret_access_key used for the compiled package cache",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.secret_access_key"
      },
      {
        "Default": true,
        "Description": "Verify the SSL certificate used on the blobstore?",
        "Example": null,
        "Examples": null,
        "Name": "compiled_package_cache.options.ssl_verify_peer"
      },
      {
        "Default": "",
        "Description": "Cerfiticates that VMs created by this director should trust in addition to those packaged with the stemcell (PEM encoded; zero or more certs allowed)",
        "Example": null,
        "Examples": null,
        "Name": "director.trusted_certs"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/pre-start.erb",
        "SrcPathEnd": "pre-start.erb"
      },
      {
        "DstPathEnd": "bin/director_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/director_ctl.erb",
        "SrcPathEnd": "director_ctl.erb"
      },
      {
        "DstPathEnd": "config/director.yml.erb",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/director.yml.erb.erb",
        "SrcPathEnd": "director.yml.erb.erb"
      },
      {
        "DstPathEnd": "bin/ps_utils.sh",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/ps_utils.sh",
        "SrcPathEnd": "ps_utils.sh"
      },
      {
        "DstPathEnd": "bin/stemcell-copy",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/stemcell-copy.sh",
        "SrcPathEnd": "stemcell-copy.sh"
      },
      {
        "DstPathEnd": "bin/restore-db",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/restore-db",
        "SrcPathEnd": "restore-db"
      },
      {
        "DstPathEnd": "bin/nginx_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/nginx_ctl",
        "SrcPathEnd": "nginx_ctl"
      },
      {
        "DstPathEnd": "config/uaa_server_ca.cert",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/uaa_server_ca.cert.erb",
        "SrcPathEnd": "uaa_server_ca.cert.erb"
      },
      {
        "DstPathEnd": "bin/sync_dns_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/sync_dns_ctl.erb",
        "SrcPathEnd": "sync_dns_ctl.erb"
      },
      {
        "DstPathEnd": "config/sudoers",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/sudoers",
        "SrcPathEnd": "sudoers"
      },
      {
        "DstPathEnd": "config/task_logrotate.cron",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/task_logrotate.cron",
        "SrcPathEnd": "task_logrotate.cron"
      },
      {
        "DstPathEnd": "config/ssl/director.pem",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/director.pem.erb",
        "SrcPathEnd": "director.pem.erb"
      },
      {
        "DstPathEnd": "config/config_server_ca.cert",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/config_server_ca.cert.erb",
        "SrcPathEnd": "config_server_ca.cert.erb"
      },
      {
        "DstPathEnd": "bin/task_logrotate",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/task_logrotate.sh",
        "SrcPathEnd": "task_logrotate.sh"
      },
      {
        "DstPathEnd": "config/ssl/director.key",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/director.key.erb",
        "SrcPathEnd": "director.key.erb"
      },
      {
        "DstPathEnd": "config/mime.types",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/mime.types",
        "SrcPathEnd": "mime.types"
      },
      {
        "DstPathEnd": "bin/scheduler_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/scheduler_ctl.erb",
        "SrcPathEnd": "scheduler_ctl.erb"
      },
      {
        "DstPathEnd": "bin/worker_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/worker_ctl.erb",
        "SrcPathEnd": "worker_ctl.erb"
      },
      {
        "DstPathEnd": "bin/drain",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/drain",
        "SrcPathEnd": "drain"
      },
      {
        "DstPathEnd": "config/nginx.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor077605887/templates/nginx.conf.erb",
        "SrcPathEnd": "nginx.conf.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor708834388/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "health_monitor",
    "Packages": [
      {
        "Name": "health_monitor"
      },
      {
        "Name": "ruby"
      }
    ],
    "Properties": [
      {
        "Default": false,
        "Description": "Enable VM resurrector plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.resurrector_enabled"
      },
      {
        "Default": null,
        "Description": "Service name to alert in PagerDuty upon HM events",
        "Example": null,
        "Examples": null,
        "Name": "hm.datadog.pagerduty_service_name"
      },
      {
        "Default": false,
        "Description": "Whether or not to use the events api",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.events"
      },
      {
        "Default": null,
        "Description": "A ttl time for ttl checks, if set ttl checks will be used",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.ttl"
      },
      {
        "Default": null,
        "Description": "HTTPS proxy that the health monitor should use",
        "Example": null,
        "Examples": null,
        "Name": "env.https_proxy"
      },
      {
        "Default": 30,
        "Description": "Interval (in seconds) between discovering managed VMs and analyzing their status",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.poll_grace_period"
      },
      {
        "Default": null,
        "Description": "Use STARTTLS (optional)",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.tls"
      },
      {
        "Default": null,
        "Description": "PagerDuty service API key",
        "Example": null,
        "Examples": null,
        "Name": "hm.pagerduty.service_key"
      },
      {
        "Default": null,
        "Description": "SMTP EHLO domain (typically server's fully qualified domain name, e.g. \"bosh.cfapps.io\")",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.domain"
      },
      {
        "Default": null,
        "Description": "Port of TSDB to connect to",
        "Example": null,
        "Examples": null,
        "Name": "hm.tsdb.port"
      },
      {
        "Default": null,
        "Description": "AWS access key id",
        "Example": null,
        "Examples": null,
        "Name": "aws.access_key_id"
      },
      {
        "Default": 5,
        "Description": "If the total number of down jobs in a deployment is below this threshold, the resurrector will always request a down job be recreated",
        "Example": null,
        "Examples": null,
        "Name": "hm.resurrector.minimum_down_jobs"
      },
      {
        "Default": false,
        "Description": "Enable Graphite plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.graphite_enabled"
      },
      {
        "Default": 60,
        "Description": "Interval (in seconds) to log Health Monitor statistics",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.log_stats"
      },
      {
        "Default": null,
        "Description": "User for the event NATS message bus connection",
        "Example": null,
        "Examples": null,
        "Name": "event_nats.user"
      },
      {
        "Default": null,
        "Description": "Email of sender, e.g. \"bosh-director@cfapps.io\"",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.from"
      },
      {
        "Default": false,
        "Description": "Enable AWS CloudWatch Plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.cloud_watch_enabled"
      },
      {
        "Default": 60,
        "Description": "Interval (in seconds) to consider an agent has timed out",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.agent_timeout"
      },
      {
        "Default": null,
        "Description": "Password for SMTP Authentication (optional, use in conjuction with hm.smtp.auth)",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.password"
      },
      {
        "Default": null,
        "Description": "Address of TSDB to connect to",
        "Example": null,
        "Examples": null,
        "Name": "hm.tsdb.address"
      },
      {
        "Default": null,
        "Description": "API Key for DataDog",
        "Example": null,
        "Examples": null,
        "Name": "hm.datadog.api_key"
      },
      {
        "Default": null,
        "Description": "Password for NATS message bus connection",
        "Example": null,
        "Examples": null,
        "Name": "nats.password"
      },
      {
        "Default": null,
        "Description": "Address of the Bosh Director to connect to",
        "Example": null,
        "Examples": null,
        "Name": "director.address"
      },
      {
        "Default": 25555,
        "Description": "Port of the Bosh Director to connect to",
        "Example": null,
        "Examples": null,
        "Name": "director.port"
      },
      {
        "Default": 25923,
        "Description": "TCP port Health Monitor daemon listens on",
        "Example": null,
        "Examples": null,
        "Name": "hm.http.port"
      },
      {
        "Default": 20,
        "Description": "EM thread pool size",
        "Example": null,
        "Examples": null,
        "Name": "hm.em_threadpool_size"
      },
      {
        "Default": "",
        "Description": "UAA client id to access Bosh Director",
        "Example": null,
        "Examples": null,
        "Name": "hm.director_account.client_id"
      },
      {
        "Default": null,
        "Description": "Interval (in seconds) to deliver alerts by email (optional)",
        "Example": null,
        "Examples": null,
        "Name": "hm.email_interval"
      },
      {
        "Default": false,
        "Description": "Enable DataDog plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.datadog_enabled"
      },
      {
        "Default": null,
        "Description": "Removed. Please co-locate the syslog-release instead to forward your logs.",
        "Example": null,
        "Examples": null,
        "Name": "hm.syslog_event_forwarder_enabled"
      },
      {
        "Default": null,
        "Description": "Params for url can be used for passing ACL token",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.params"
      },
      {
        "Default": null,
        "Description": "HTTP proxy to connect to PagerDuty (optional)",
        "Example": null,
        "Examples": null,
        "Name": "hm.pagerduty.http_proxy"
      },
      {
        "Default": null,
        "Description": "AWS secret access key",
        "Example": null,
        "Examples": null,
        "Name": "aws.secret_access_key"
      },
      {
        "Default": "http",
        "Description": "http/https",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.protocol"
      },
      {
        "Default": null,
        "Description": "Port of the SMTP server to connect to (e.g. 25, 465, or 587)",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.port"
      },
      {
        "Default": null,
        "Description": "User for SMTP Authentication (optional, use in conjuction with hm.smtp.auth)",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.user"
      },
      {
        "Default": null,
        "Description": "Graphite port",
        "Example": null,
        "Examples": null,
        "Name": "hm.graphite.port"
      },
      {
        "Default": 8500,
        "Description": "Consul Port",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.port"
      },
      {
        "Default": "",
        "Description": "UAA client secret to access Bosh Director",
        "Example": null,
        "Examples": null,
        "Name": "hm.director_account.client_secret"
      },
      {
        "Default": null,
        "Description": "Address of the event NATS message bus to connect to",
        "Example": null,
        "Examples": null,
        "Name": "event_nats.address"
      },
      {
        "Default": null,
        "Description": "Address of the SMTP server to connect to (e.g. \"smtp.gmail.com\")",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.host"
      },
      {
        "Default": false,
        "Description": "Enable Riemann plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.riemann_enabled"
      },
      {
        "Default": null,
        "Description": "Prefix that will be added to all metrics sent to Graphite",
        "Example": null,
        "Examples": null,
        "Name": "hm.graphite.prefix"
      },
      {
        "Default": 60,
        "Description": "Interval (in seconds) to analyze the status of instances for missing VMs",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.analyze_instances"
      },
      {
        "Default": null,
        "Description": "User for the NATS message bus connection",
        "Example": null,
        "Examples": null,
        "Name": "nats.user"
      },
      {
        "Default": "",
        "Description": "Password to access Bosh Director",
        "Example": null,
        "Examples": null,
        "Name": "hm.director_account.password"
      },
      {
        "Default": null,
        "Description": "Graphite address",
        "Example": null,
        "Examples": null,
        "Name": "hm.graphite.address"
      },
      {
        "Default": null,
        "Description": "HTTP proxy that the health monitor should use",
        "Example": null,
        "Examples": null,
        "Name": "env.http_proxy"
      },
      {
        "Default": 120,
        "Description": "Interval (in seconds) to consider an agent as rogue (an agent that is no part of any deployment)",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.rogue_agent_alert"
      },
      {
        "Default": "info",
        "Description": "Level of log messages (fatal, error, warn, info, debug)",
        "Example": null,
        "Examples": null,
        "Name": "hm.loglevel"
      },
      {
        "Default": 600,
        "Description": "Time (in seconds) for which an alert in the resurrector is considered 'current'; alerts older than this are ignored when deciding to recreate a job.",
        "Example": null,
        "Examples": null,
        "Name": "hm.resurrector.time_threshold"
      },
      {
        "Default": false,
        "Description": "Enable email notifications plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.email_notifications"
      },
      {
        "Default": null,
        "Description": "Riemann host",
        "Example": null,
        "Examples": null,
        "Name": "hm.riemann.host"
      },
      {
        "Default": false,
        "Description": "Enable Consul Plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder_enabled"
      },
      {
        "Default": 30,
        "Description": "Interval (in seconds) to prune received events",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.prune_events"
      },
      {
        "Default": null,
        "Description": "Address of the NATS message bus to connect to",
        "Example": null,
        "Examples": null,
        "Name": "nats.address"
      },
      {
        "Default": null,
        "Description": "Password for event NATS message bus connection",
        "Example": null,
        "Examples": null,
        "Name": "event_nats.password"
      },
      {
        "Default": null,
        "Description": "Health Monitor Application Key for DataDog",
        "Example": null,
        "Examples": null,
        "Name": "hm.datadog.application_key"
      },
      {
        "Default": "Automatically Registered by Bosh-Monitor",
        "Description": "A note for ttl checks",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.ttl_note"
      },
      {
        "Default": 60,
        "Description": "Interval (in seconds) to get the list of managed VMs from Bosh Director",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.poll_director"
      },
      {
        "Default": 60,
        "Description": "Interval (in seconds) to analyze the status of agents",
        "Example": null,
        "Examples": null,
        "Name": "hm.intervals.analyze_agents"
      },
      {
        "Default": false,
        "Description": "Enable TSDB plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.tsdb_enabled"
      },
      {
        "Default": null,
        "Description": "Port of the event NATS message bus port to connect to",
        "Example": null,
        "Examples": null,
        "Name": "event_nats.port"
      },
      {
        "Default": null,
        "Description": "Email of recipients (Array)",
        "Example": null,
        "Examples": null,
        "Name": "hm.email_recipients"
      },
      {
        "Default": false,
        "Description": "Enable PagerDuty plugin",
        "Example": null,
        "Examples": null,
        "Name": "hm.pagerduty_enabled"
      },
      {
        "Default": false,
        "Description": "Should we treat all heartbeats as alerts as well?",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.heartbeats_as_alerts"
      },
      {
        "Default": null,
        "Description": "List of comma-separated hosts that should skip connecting to the proxy in the health monitor",
        "Example": null,
        "Examples": null,
        "Name": "env.no_proxy"
      },
      {
        "Default": 4222,
        "Description": "Port of the NATS message bus port to connect to",
        "Example": null,
        "Examples": null,
        "Name": "nats.port"
      },
      {
        "Default": null,
        "Description": "SMTP Authentication type (optional, only \"plain\" is supported)",
        "Example": null,
        "Examples": null,
        "Name": "hm.smtp.auth"
      },
      {
        "Default": null,
        "Description": "Location of Consul Cluster or agent",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.host"
      },
      {
        "Default": 5555,
        "Description": "Riemann port",
        "Example": null,
        "Examples": null,
        "Name": "hm.riemann.port"
      },
      {
        "Default": 0.2,
        "Description": "Percentage of total jobs in a deployment that must be down for the resurrector to to stop sending recreate-job requests. Used in 'meltdown' situations so resurrector will not try to recreate the world.",
        "Example": null,
        "Examples": null,
        "Name": "hm.resurrector.percent_threshold"
      },
      {
        "Default": null,
        "Description": "A namespace for handling multiples of the same release",
        "Example": null,
        "Examples": null,
        "Name": "hm.consul_event_forwarder.namespace"
      },
      {
        "Default": "",
        "Description": "User to access Bosh Director",
        "Example": null,
        "Examples": null,
        "Name": "hm.director_account.user"
      },
      {
        "Default": "",
        "Description": "Certificate to verify UAA endpoint",
        "Example": null,
        "Examples": null,
        "Name": "hm.director_account.ca_cert"
      },
      {
        "Default": false,
        "Description": "Enable event NATS message bus plugin",
        "Example": null,
        "Examples": null,
        "Name": "event_nats_enabled"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/health_monitor_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor708834388/templates/health_monitor_ctl.erb",
        "SrcPathEnd": "health_monitor_ctl.erb"
      },
      {
        "DstPathEnd": "config/health_monitor.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor708834388/templates/health_monitor.yml.erb",
        "SrcPathEnd": "health_monitor.yml.erb"
      },
      {
        "DstPathEnd": "config/uaa.pem",
        "Path": "/mnt/tmp/tar-CmdExtractor708834388/templates/uaa.pem.erb",
        "SrcPathEnd": "uaa.pem.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor034587814/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "nats",
    "Packages": [
      {
        "Name": "nats"
      },
      {
        "Name": "ruby"
      }
    ],
    "Properties": [
      {
        "Default": "0.0.0.0",
        "Description": "IP address nats mbus listens on",
        "Example": null,
        "Examples": null,
        "Name": "nats.listen_address"
      },
      {
        "Default": 4222,
        "Description": "TCP port nats mbus listens on",
        "Example": null,
        "Examples": null,
        "Name": "nats.port"
      },
      {
        "Default": false,
        "Description": "Disable epoll (Linux)",
        "Example": null,
        "Examples": null,
        "Name": "nats.no_epoll"
      },
      {
        "Default": true,
        "Description": "Disable kqueue (MacOSX and BSD)",
        "Example": null,
        "Examples": null,
        "Name": "nats.no_kqueue"
      },
      {
        "Default": null,
        "Description": "Username clients must use to access nats mbus",
        "Example": null,
        "Examples": null,
        "Name": "nats.user"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access nats mbus",
        "Example": null,
        "Examples": null,
        "Name": "nats.password"
      },
      {
        "Default": 1,
        "Description": "Timeout (in seconds) for clients to send auth credentials",
        "Example": null,
        "Examples": null,
        "Name": "nats.auth_timeout"
      },
      {
        "Default": 9222,
        "Description": "TCP port NATS listens on for HTTP connections (optional)",
        "Example": null,
        "Examples": null,
        "Name": "nats.http.port"
      },
      {
        "Default": null,
        "Description": "Username clients must use to access nats mbus via HTTP connection (optional)",
        "Example": null,
        "Examples": null,
        "Name": "nats.http.user"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access nats mbus via HTTP connection (optional)",
        "Example": null,
        "Examples": null,
        "Name": "nats.http.password"
      },
      {
        "Default": 5,
        "Description": "Time interval (in seconds) pings from server",
        "Example": null,
        "Examples": null,
        "Name": "nats.ping_interval"
      },
      {
        "Default": 2,
        "Description": "Maximum number of pings before declaring a client unresponsive",
        "Example": null,
        "Examples": null,
        "Name": "nats.ping_max_outstanding"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/nats_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor034587814/templates/nats_ctl.erb",
        "SrcPathEnd": "nats_ctl.erb"
      },
      {
        "DstPathEnd": "config/nats.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor034587814/templates/nats.yml.erb",
        "SrcPathEnd": "nats.yml.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor420332232/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "postgres",
    "Packages": [
      {
        "Name": "postgres"
      }
    ],
    "Properties": [
      {
        "Default": 5432,
        "Description": "TCP port Postgres listens on",
        "Example": null,
        "Examples": null,
        "Name": "postgres.port"
      },
      {
        "Default": "bosh",
        "Description": "Default Postgres database (it will be created during the startup process)",
        "Example": null,
        "Examples": null,
        "Name": "postgres.database"
      },
      {
        "Default": [],
        "Description": "Additional Postgres databases to be created (during the startup process)",
        "Example": null,
        "Examples": null,
        "Name": "postgres.additional_databases"
      },
      {
        "Default": 100,
        "Description": "Set max concurrent connections for database",
        "Example": null,
        "Examples": null,
        "Name": "postgres.max_connections"
      },
      {
        "Default": "bosh",
        "Description": "Username clients must use to access Postgres",
        "Example": null,
        "Examples": null,
        "Name": "postgres.user"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access Postgres",
        "Example": null,
        "Examples": null,
        "Name": "postgres.password"
      },
      {
        "Default": "127.0.0.1",
        "Description": "IP address Postgres listens on; use 0.0.0.0 to listen on all IP addresses",
        "Example": null,
        "Examples": null,
        "Name": "postgres.listen_address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/postgres_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor420332232/templates/postgres_ctl.erb",
        "SrcPathEnd": "postgres_ctl.erb"
      },
      {
        "DstPathEnd": "config/postgresql.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor420332232/templates/postgresql.conf.erb",
        "SrcPathEnd": "postgresql.conf.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor863944506/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "postgres-9.4",
    "Packages": [
      {
        "Name": "postgres"
      },
      {
        "Name": "postgres-9.4"
      }
    ],
    "Properties": [
      {
        "Default": 100,
        "Description": "Set max concurrent connections for database",
        "Example": null,
        "Examples": null,
        "Name": "postgres.max_connections"
      },
      {
        "Default": "bosh",
        "Description": "Username clients must use to access Postgres",
        "Example": null,
        "Examples": null,
        "Name": "postgres.user"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access Postgres",
        "Example": null,
        "Examples": null,
        "Name": "postgres.password"
      },
      {
        "Default": "127.0.0.1",
        "Description": "IP address Postgres listens on; use 0.0.0.0 to listen on all IP addresses",
        "Example": null,
        "Examples": null,
        "Name": "postgres.listen_address"
      },
      {
        "Default": 5432,
        "Description": "TCP port Postgres listens on",
        "Example": null,
        "Examples": null,
        "Name": "postgres.port"
      },
      {
        "Default": "bosh",
        "Description": "Default Postgres database (it will be created during the startup process)",
        "Example": null,
        "Examples": null,
        "Name": "postgres.database"
      },
      {
        "Default": [],
        "Description": "Additional Postgres databases to be created (during the startup process)",
        "Example": null,
        "Examples": null,
        "Name": "postgres.additional_databases"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/postgres_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor863944506/templates/postgres_ctl.erb",
        "SrcPathEnd": "postgres_ctl.erb"
      },
      {
        "DstPathEnd": "bin/postgres_db_backup.sh",
        "Path": "/mnt/tmp/tar-CmdExtractor863944506/templates/postgres_db_backup.sh.erb",
        "SrcPathEnd": "postgres_db_backup.sh.erb"
      },
      {
        "DstPathEnd": "bin/postgres_db_upgrade.sh",
        "Path": "/mnt/tmp/tar-CmdExtractor863944506/templates/postgres_db_upgrade.sh.erb",
        "SrcPathEnd": "postgres_db_upgrade.sh.erb"
      },
      {
        "DstPathEnd": "config/postgresql.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor863944506/templates/postgresql.conf.erb",
        "SrcPathEnd": "postgresql.conf.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor821293692/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "powerdns",
    "Packages": [
      {
        "Name": "powerdns"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "Password for the PowerDNS database connection",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.password"
      },
      {
        "Default": 2,
        "Description": "Number of threads to query the backend, for each receiver thread",
        "Example": null,
        "Examples": null,
        "Name": "dns.distributor_threads"
      },
      {
        "Default": null,
        "Description": "IP address to use as a source address for sending queries (optional; useful with multiple IP addresses)",
        "Example": null,
        "Examples": null,
        "Name": "dns.query_local_address"
      },
      {
        "Default": null,
        "Description": "Address of the primary PowerDNS instance",
        "Example": null,
        "Examples": null,
        "Name": "dns.address"
      },
      {
        "Default": "127.0.0.1",
        "Description": "Address for the PowerDNS database",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.host"
      },
      {
        "Default": null,
        "Description": "IP address to which to bind to (optional; useful with multiple IP addresses)",
        "Example": null,
        "Examples": null,
        "Name": "dns.local_address"
      },
      {
        "Default": "postgres",
        "Description": "Adapter for the PowerDNS database connection",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.adapter"
      },
      {
        "Default": 5432,
        "Description": "Port for the PowerDNS database connection",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.port"
      },
      {
        "Default": "bosh",
        "Description": "Database for the PowerDNS database connection",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.database"
      },
      {
        "Default": 2,
        "Description": "Number of sockets the powerdns process will open",
        "Example": null,
        "Examples": null,
        "Name": "dns.receiver_threads"
      },
      {
        "Default": null,
        "Description": "If recursion is desired, IP address of a recursing nameserver (optional)",
        "Example": null,
        "Examples": null,
        "Name": "dns.recursor"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access PowerDNS webserver (optional)",
        "Example": null,
        "Examples": null,
        "Name": "dns.webserver.password"
      },
      {
        "Default": "bosh",
        "Description": "User for the PowerDNS database connection",
        "Example": null,
        "Examples": null,
        "Name": "dns.db.user"
      },
      {
        "Default": 8081,
        "Description": "TCP port PowerDNS webserver listens on (optional)",
        "Example": null,
        "Examples": null,
        "Name": "dns.webserver.port"
      },
      {
        "Default": "0.0.0.0",
        "Description": "IP address PowerDNS webserver listens on (optional)",
        "Example": null,
        "Examples": null,
        "Name": "dns.webserver.address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/pdns.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor821293692/templates/pdns.conf.erb",
        "SrcPathEnd": "pdns.conf.erb"
      },
      {
        "DstPathEnd": "bin/powerdns_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor821293692/templates/powerdns_ctl.erb",
        "SrcPathEnd": "powerdns_ctl.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor923075342/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "registry",
    "Packages": [
      {
        "Name": "registry"
      },
      {
        "Name": "libpq"
      },
      {
        "Name": "mysql"
      },
      {
        "Name": "ruby"
      }
    ],
    "Properties": [
      {
        "Default": "publicURL",
        "Description": "OpenStack endpoint type (optional, by default publicURL)",
        "Example": null,
        "Examples": null,
        "Name": "openstack.endpoint_type"
      },
      {
        "Default": 25777,
        "Description": "TCP port Registry daemon listens on",
        "Example": null,
        "Examples": null,
        "Name": "registry.port"
      },
      {
        "Default": null,
        "Description": "Password clients must use to access Registry via HTTP Basic Auth",
        "Example": null,
        "Examples": null,
        "Name": "registry.password"
      },
      {
        "Default": null,
        "Description": "AWS IAM Secret Access Key",
        "Example": null,
        "Examples": null,
        "Name": "aws.secret_access_key"
      },
      {
        "Default": null,
        "Description": "The path the a CA cert directory",
        "Example": null,
        "Examples": null,
        "Name": "aws.ssl_ca_path"
      },
      {
        "Default": null,
        "Description": "URL of the OpenStack Identity endpoint to connect to",
        "Example": null,
        "Examples": null,
        "Name": "openstack.auth_url"
      },
      {
        "Default": "postgres",
        "Description": "The type of database used",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.adapter"
      },
      {
        "Default": {
          "max_connections": 32,
          "pool_timeout": 10
        },
        "Description": "Additional options for the database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.connection_options"
      },
      {
        "Default": null,
        "Description": "AWS IAM Access Key ID",
        "Example": null,
        "Examples": null,
        "Name": "aws.access_key_id"
      },
      {
        "Default": null,
        "Description": "OpenStack tenant name (required for Keystone API version 2)",
        "Example": null,
        "Examples": null,
        "Name": "openstack.tenant"
      },
      {
        "Default": null,
        "Description": "Username clients must use to access Registry via HTTP Basic Auth",
        "Example": null,
        "Examples": null,
        "Name": "registry.username"
      },
      {
        "Default": null,
        "Description": "HTTP proxy that the registry should use",
        "Example": null,
        "Examples": null,
        "Name": "env.http_proxy"
      },
      {
        "Default": null,
        "Description": "HTTPS proxy that the registry should use",
        "Example": null,
        "Examples": null,
        "Name": "env.https_proxy"
      },
      {
        "Default": null,
        "Description": "The service endpoint for Amazon EC2 (optional, if not supplied default region endpoint will be used)",
        "Example": null,
        "Examples": null,
        "Name": "aws.ec2_endpoint"
      },
      {
        "Default": null,
        "Description": "The service endpoint for Amazon Elastic Load Balancing (optional, if not supplied default region endpoint will be used)",
        "Example": null,
        "Examples": null,
        "Name": "aws.elb_endpoint"
      },
      {
        "Default": null,
        "Description": "List of comma-separated hosts that should skip connecting to the proxy in the registry",
        "Example": null,
        "Examples": null,
        "Name": "env.no_proxy"
      },
      {
        "Default": 5432,
        "Description": "Port of the registry database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.port"
      },
      {
        "Default": null,
        "Description": "The path to a CA cert bundle in PEM format",
        "Example": null,
        "Examples": null,
        "Name": "aws.ssl_ca_file"
      },
      {
        "Default": null,
        "Description": "OpenStack project name (required for Keystone API version 3)",
        "Example": null,
        "Examples": null,
        "Name": "openstack.project"
      },
      {
        "Default": null,
        "Description": "Hash containing optional connection parameters to the OpenStack API",
        "Example": null,
        "Examples": null,
        "Name": "openstack.connection_options"
      },
      {
        "Default": "bosh",
        "Description": "Username used for the registry database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.user"
      },
      {
        "Default": null,
        "Description": "Password used for the registry database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.password"
      },
      {
        "Default": "127.0.0.1",
        "Description": "Address of the registry database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.host"
      },
      {
        "Default": "bosh_registry",
        "Description": "Name of the registry database",
        "Example": null,
        "Examples": null,
        "Name": "registry.db.database"
      },
      {
        "Default": null,
        "Description": "OpenStack user name",
        "Example": null,
        "Examples": null,
        "Name": "openstack.username"
      },
      {
        "Default": null,
        "Description": "AWS EC2 Region",
        "Example": null,
        "Examples": null,
        "Name": "aws.region"
      },
      {
        "Default": null,
        "Description": "When true the HTTP handler validate server certificates for HTTPS requests",
        "Example": null,
        "Examples": null,
        "Name": "aws.ssl_verify_peer"
      },
      {
        "Default": null,
        "Description": "OpenStack API key",
        "Example": null,
        "Examples": null,
        "Name": "openstack.api_key"
      },
      {
        "Default": "static",
        "Description": "AWS credentials source",
        "Example": null,
        "Examples": null,
        "Name": "aws.credentials_source"
      },
      {
        "Default": 2,
        "Description": "Max number of retries to connect to AWS",
        "Example": null,
        "Examples": null,
        "Name": "aws.max_retries"
      },
      {
        "Default": null,
        "Description": "OpenStack domain (required for Keystone API version 3)",
        "Example": null,
        "Examples": null,
        "Name": "openstack.domain"
      },
      {
        "Default": null,
        "Description": "OpenStack region (optional)",
        "Example": null,
        "Examples": null,
        "Name": "openstack.region"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/cacert.pem",
        "Path": "/mnt/tmp/tar-CmdExtractor923075342/templates/cacert.pem.erb",
        "SrcPathEnd": "cacert.pem.erb"
      },
      {
        "DstPathEnd": "bin/registry_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor923075342/templates/registry_ctl.erb",
        "SrcPathEnd": "registry_ctl.erb"
      },
      {
        "DstPathEnd": "config/registry.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor923075342/templates/registry.yml.erb",
        "SrcPathEnd": "registry.yml.erb"
      }
    ]
  }
]