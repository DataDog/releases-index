[
  {
    "Name": "acceptance-tests",
    "Description": "errand to run the shared acceptance tests",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor473709396/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.erb",
        "DstPathEnd": "bin/run",
        "Path": "/tmp/tar-CmdExtractor473709396/templates/run.erb"
      },
      {
        "SrcPathEnd": "ca.crt.erb",
        "DstPathEnd": "ca.crt",
        "Path": "/tmp/tar-CmdExtractor473709396/templates/ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "golang-1.9-linux"
      },
      {
        "Name": "acceptance-tests"
      }
    ],
    "Properties": [
      {
        "Name": "bosh_deployment",
        "Description": "",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "base_stemcell",
        "Description": "",
        "Default": "ubuntu-trusty",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bosh_ca_cert",
        "Description": "",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bosh_client_secret",
        "Description": "",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bosh_client",
        "Description": "",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bosh_environment",
        "Description": "",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "acceptance-tests-windows",
    "Description": "errand to run the windows specific acceptance tests",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor382043046/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.ps1",
        "DstPathEnd": "bin/run.ps1",
        "Path": "/tmp/tar-CmdExtractor382043046/templates/run.ps1"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "golang-1.9-windows"
      },
      {
        "Name": "acceptance-tests-windows"
      }
    ],
    "Properties": [
      {
        "Name": "suites",
        "Description": "Suites to execute within acceptance_tests/windows",
        "Default": ".",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "bosh-dns",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor022264264/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "aliases.json.erb",
        "DstPathEnd": "dns/aliases.json",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/aliases.json.erb"
      },
      {
        "SrcPathEnd": "bosh_dns_resolvconf_ctl.erb",
        "DstPathEnd": "bin/bosh_dns_resolvconf_ctl",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/bosh_dns_resolvconf_ctl.erb"
      },
      {
        "SrcPathEnd": "config.json.erb",
        "DstPathEnd": "config/config.json",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/config.json.erb"
      },
      {
        "SrcPathEnd": "is-system-resolver.erb",
        "DstPathEnd": "bin/is-system-resolver",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/is-system-resolver.erb"
      },
      {
        "SrcPathEnd": "post-start.erb",
        "DstPathEnd": "bin/post-start",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/post-start.erb"
      },
      {
        "SrcPathEnd": "wait.erb",
        "DstPathEnd": "bin/wait",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/wait.erb"
      },
      {
        "SrcPathEnd": "certs/health/client.key.erb",
        "DstPathEnd": "config/certs/health/client.key",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/client.key.erb"
      },
      {
        "SrcPathEnd": "certs/api/server.crt.erb",
        "DstPathEnd": "config/certs/api/server.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/server.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/server.key.erb",
        "DstPathEnd": "config/certs/api/server.key",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/server.key.erb"
      },
      {
        "SrcPathEnd": "certs/api/server_ca.crt.erb",
        "DstPathEnd": "config/certs/api/server_ca.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/server_ca.crt.erb"
      },
      {
        "SrcPathEnd": "bosh_dns_health_ctl.erb",
        "DstPathEnd": "bin/bosh_dns_health_ctl",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/bosh_dns_health_ctl.erb"
      },
      {
        "SrcPathEnd": "cli.erb",
        "DstPathEnd": "bin/cli",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/cli.erb"
      },
      {
        "SrcPathEnd": "pre-start.erb",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/pre-start.erb"
      },
      {
        "SrcPathEnd": "certs/health/server.crt.erb",
        "DstPathEnd": "config/certs/health/server.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/server.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/client.crt.erb",
        "DstPathEnd": "config/certs/api/client.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/client.crt.erb"
      },
      {
        "SrcPathEnd": "handlers.json.erb",
        "DstPathEnd": "dns/handlers.json",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/handlers.json.erb"
      },
      {
        "SrcPathEnd": "certs/health/client.crt.erb",
        "DstPathEnd": "config/certs/health/client.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/client.crt.erb"
      },
      {
        "SrcPathEnd": "certs/health/client_ca.crt.erb",
        "DstPathEnd": "config/certs/health/client_ca.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/client_ca.crt.erb"
      },
      {
        "SrcPathEnd": "bosh_dns_ctl.erb",
        "DstPathEnd": "bin/bosh_dns_ctl",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/bosh_dns_ctl.erb"
      },
      {
        "SrcPathEnd": "health_server_config.json.erb",
        "DstPathEnd": "config/health_server_config.json",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/health_server_config.json.erb"
      },
      {
        "SrcPathEnd": "certs/health/server.key.erb",
        "DstPathEnd": "config/certs/health/server.key",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/server.key.erb"
      },
      {
        "SrcPathEnd": "certs/health/server_ca.crt.erb",
        "DstPathEnd": "config/certs/health/server_ca.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/health/server_ca.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/client.key.erb",
        "DstPathEnd": "config/certs/api/client.key",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/client.key.erb"
      },
      {
        "SrcPathEnd": "certs/api/client_ca.crt.erb",
        "DstPathEnd": "config/certs/api/client_ca.crt",
        "Path": "/tmp/tar-CmdExtractor022264264/templates/certs/api/client_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-dns"
      }
    ],
    "Properties": [
      {
        "Name": "api.port",
        "Description": "Port that the DNS servers debug API will listen on",
        "Default": 53080,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api.client.tls",
        "Description": "Client-side mutual TLS configuration for the API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "handlers",
        "Description": "Array of handler configurations",
        "Default": [],
        "Example": [
          {
            "cache": {
              "enabled": true
            },
            "domain": "local.internal.",
            "source": {
              "type": "http",
              "url": "http://some.endpoint.local"
            }
          },
          {
            "cache": {
              "enabled": true
            },
            "domain": "local.internal2.",
            "source": {
              "recursors": [
                "127.0.0.1"
              ],
              "type": "dns"
            }
          }
        ],
        "Examples": null
      },
      {
        "Name": "recursor_timeout",
        "Description": "A timeout value for when dialing, writing and reading from the configured recursors",
        "Default": "2s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cache.enabled",
        "Description": "When enabled bosh-dns will cache up to a max of 1000 recursed entries",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.enabled",
        "Description": "Enable healthchecks for DNS resolution",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.server.port",
        "Description": "Port to run health server on",
        "Default": 8853,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.max_tracked_queries",
        "Description": "Maximum number of DNS resolved FQDNs to maintain live health info for",
        "Default": 2000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "port",
        "Description": "Port that the DNS server will bind to",
        "Default": 53,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "override_nameserver",
        "Description": "Configure ourselves as the system nameserver (e.g. /etc/resolv.conf will be watched and overwritten)",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "excluded_recursors",
        "Description": "A list of recursor addresses which should not be used by the DNS server",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "upcheck_domains",
        "Description": "Domain names that the dns server should respond to with successful answers. Answer ip will always be 127.0.0.1",
        "Default": [
          "upcheck.bosh-dns."
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.server.tls",
        "Description": "Server-side mutual TLS configuration for healthchecking",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "address",
        "Description": "Address in which the DNS server will bind",
        "Default": "169.254.0.2",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "recursors",
        "Description": "Addresses of upstream DNS servers used for recursively resolving queries",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "aliased_address",
        "Description": "Address that will be added by default",
        "Default": "169.254.0.2",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api.server.tls",
        "Description": "Server-side mutual TLS configuration for the API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "records_file",
        "Description": "Path to the file containing information that the DNS server will use to create DNS records",
        "Default": "/var/vcap/instance/dns/records.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "aliases",
        "Description": "Hash of domain key to target domains array for aliased DNS lookups",
        "Default": null,
        "Example": {
          "cc.cf.consul": [
            "one",
            "two",
            "..."
          ],
          "consul.internal": [
            "127.0.0.1"
          ],
          "third.internal": [
            "four"
          ]
        },
        "Examples": null
      },
      {
        "Name": "alias_files_glob",
        "Description": "Glob for any files to look for DNS alias information",
        "Default": "/var/vcap/jobs/*/dns/aliases.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "handlers_files_glob",
        "Description": "Glob for any files to look for DNS handler information",
        "Default": "/var/vcap/jobs/*/dns/handlers.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.client.tls",
        "Description": "Client-side mutual TLS configuration for healthchecking",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "bosh-dns-windows",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor659116090/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "aliases.json.erb",
        "DstPathEnd": "dns/aliases.json",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/aliases.json.erb"
      },
      {
        "SrcPathEnd": "pre-start.ps1.erb",
        "DstPathEnd": "bin/pre-start.ps1",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/pre-start.ps1.erb"
      },
      {
        "SrcPathEnd": "certs/health/client.key.erb",
        "DstPathEnd": "config/certs/health/client.key",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/client.key.erb"
      },
      {
        "SrcPathEnd": "certs/health/client_ca.crt.erb",
        "DstPathEnd": "config/certs/health/client_ca.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/client_ca.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/client.crt.erb",
        "DstPathEnd": "config/certs/api/client.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/client.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/server.crt.erb",
        "DstPathEnd": "config/certs/api/server.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/server.crt.erb"
      },
      {
        "SrcPathEnd": "health_server_config.json.erb",
        "DstPathEnd": "config/health_server_config.json",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/health_server_config.json.erb"
      },
      {
        "SrcPathEnd": "post-start.ps1.erb",
        "DstPathEnd": "bin/post-start.ps1",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/post-start.ps1.erb"
      },
      {
        "SrcPathEnd": "certs/health/client.crt.erb",
        "DstPathEnd": "config/certs/health/client.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/client.crt.erb"
      },
      {
        "SrcPathEnd": "certs/health/server.crt.erb",
        "DstPathEnd": "config/certs/health/server.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/server.crt.erb"
      },
      {
        "SrcPathEnd": "certs/health/server.key.erb",
        "DstPathEnd": "config/certs/health/server.key",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/server.key.erb"
      },
      {
        "SrcPathEnd": "certs/health/server_ca.crt.erb",
        "DstPathEnd": "config/certs/health/server_ca.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/health/server_ca.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/client.key.erb",
        "DstPathEnd": "config/certs/api/client.key",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/client.key.erb"
      },
      {
        "SrcPathEnd": "cli.ps1.erb",
        "DstPathEnd": "bin/cli.ps1",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/cli.ps1.erb"
      },
      {
        "SrcPathEnd": "config.json.erb",
        "DstPathEnd": "config/config.json",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/config.json.erb"
      },
      {
        "SrcPathEnd": "handlers.json.erb",
        "DstPathEnd": "dns/handlers.json",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/handlers.json.erb"
      },
      {
        "SrcPathEnd": "certs/api/client_ca.crt.erb",
        "DstPathEnd": "config/certs/api/client_ca.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/client_ca.crt.erb"
      },
      {
        "SrcPathEnd": "certs/api/server.key.erb",
        "DstPathEnd": "config/certs/api/server.key",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/server.key.erb"
      },
      {
        "SrcPathEnd": "certs/api/server_ca.crt.erb",
        "DstPathEnd": "config/certs/api/server_ca.crt",
        "Path": "/tmp/tar-CmdExtractor659116090/templates/certs/api/server_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-dns-windows"
      }
    ],
    "Properties": [
      {
        "Name": "health.server.port",
        "Description": "Port to run health server on",
        "Default": 8853,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.client.tls",
        "Description": "Client-side mutual TLS configuration for healthchecking",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.max_tracked_queries",
        "Description": "Maximum number of DNS resolved FQDNs to maintain live health info for",
        "Default": 2000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "handlers_files_glob",
        "Description": "Glob for any files to look for DNS handler information",
        "Default": "C:\\var\\vcap\\jobs\\*\\dns\\handlers.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "recursor_timeout",
        "Description": "A timeout value for when dialing, writing and reading from the configured recursors",
        "Default": "2s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.enabled",
        "Description": "Enable healthchecks for DNS resolution",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "aliases",
        "Description": "Hash of domain key to target domains array for aliased DNS lookups",
        "Default": null,
        "Example": {
          "cc.cf.consul": [
            "one",
            "two",
            "..."
          ],
          "consul.internal": [
            "127.0.0.1"
          ],
          "third.internal": [
            "four"
          ]
        },
        "Examples": null
      },
      {
        "Name": "alias_files_glob",
        "Description": "Glob for any files to look for DNS alias information",
        "Default": "C:\\var\\vcap\\jobs\\*\\dns\\aliases.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "override_nameserver",
        "Description": "Configure ourselves as the system nameserver (e.g. network server addresses will be watched and overwritten)",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "handlers",
        "Description": "Array of handler configurations",
        "Default": [],
        "Example": [
          {
            "cache": {
              "enabled": true
            },
            "domain": "local.internal.",
            "source": {
              "type": "http",
              "url": "http://some.endpoint.local"
            }
          }
        ],
        "Examples": null
      },
      {
        "Name": "recursors",
        "Description": "Addresses of upstream DNS servers used for recursively resolving queries",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api.port",
        "Description": "Port that the DNS servers debug API will listen on",
        "Default": 53080,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api.server.tls",
        "Description": "Server-side mutual TLS configuration for the API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api.client.tls",
        "Description": "Client-side mutual TLS configuration for the API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "aliased_address",
        "Description": "Address that will be added on loopback interface. Defaults to none",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "addresses_files_glob",
        "Description": "Glob for any files to look for extra addresses to listen on",
        "Default": "C:\\var\\vcap\\jobs\\*\\dns\\addresses.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "upcheck_domains",
        "Description": "Domain names that the dns server should respond to with successful answers. Answer ip will always be 127.0.0.1",
        "Default": [
          "upcheck.bosh-dns."
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cache.enabled",
        "Description": "When enabled bosh-dns will cache up to a max of 1000 recursed entries",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "health.server.tls",
        "Description": "Server-side mutual TLS configuration for healthchecking",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "address",
        "Description": "Address on which the DNS server will bind. Defaults to host IP address",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "records_file",
        "Description": "Path to the file containing information that the DNS server will use to create DNS records",
        "Default": "C:\\var\\vcap\\instance\\dns\\records.json",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "excluded_recursors",
        "Description": "A list of recursor addresses which should not be used by the DNS server",
        "Default": [],
        "Example": null,
        "Examples": null
      }
    ]
  }
]