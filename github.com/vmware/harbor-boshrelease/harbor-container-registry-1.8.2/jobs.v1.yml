[
  {
    "Name": "docker",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor799142438/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/properties.sh.erb",
        "DstPathEnd": "bin/properties.sh",
        "Path": "/tmp/tar-CmdExtractor799142438/templates/bin/properties.sh.erb"
      },
      {
        "SrcPathEnd": "bin/ctl.erb",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor799142438/templates/bin/ctl.erb"
      },
      {
        "SrcPathEnd": "bin/setup-env.erb",
        "DstPathEnd": "bin/setup-env",
        "Path": "/tmp/tar-CmdExtractor799142438/templates/bin/setup-env.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "common"
      },
      {
        "Name": "docker"
      }
    ],
    "Properties": [
      {
        "Name": "data_root",
        "Description": "Root directory of persistent Docker state",
        "Default": "/var/vcap/store",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ulimit_nofile",
        "Description": "Maximum number of open files",
        "Default": 8192,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "vm.max_map_count",
        "Description": "If set, sets vm.max_map_count on VM",
        "Default": "",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "enable-bosh-dns",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor420764744/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/pre-start.erb",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor420764744/templates/bin/pre-start.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": null,
    "Properties": null
  },
  {
    "Name": "harbor",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor275134650/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/properties.erb.sh",
        "DstPathEnd": "bin/properties.sh",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/properties.erb.sh"
      },
      {
        "SrcPathEnd": "config/server.key",
        "DstPathEnd": "config/server.key",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/server.key"
      },
      {
        "SrcPathEnd": "config/uaa_ca.crt",
        "DstPathEnd": "config/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/uaa_ca.crt"
      },
      {
        "SrcPathEnd": "config/gcs_keyfile",
        "DstPathEnd": "config/gcs_keyfile",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/gcs_keyfile"
      },
      {
        "SrcPathEnd": "config/server.crt",
        "DstPathEnd": "config/server.crt",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/server.crt"
      },
      {
        "SrcPathEnd": "config/ca.crt",
        "DstPathEnd": "config/ca.crt",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/ca.crt"
      },
      {
        "SrcPathEnd": "config/daemon.json",
        "DstPathEnd": "config/daemon.json",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/daemon.json"
      },
      {
        "SrcPathEnd": "bin/uaa.erb.sh",
        "DstPathEnd": "bin/uaa.sh",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/uaa.erb.sh"
      },
      {
        "SrcPathEnd": "bin/ctl.erb.sh",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/ctl.erb.sh"
      },
      {
        "SrcPathEnd": "bin/pre-start.erb.sh",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/pre-start.erb.sh"
      },
      {
        "SrcPathEnd": "bin/post-start.erb.sh",
        "DstPathEnd": "bin/post-start",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/post-start.erb.sh"
      },
      {
        "SrcPathEnd": "bin/status_check.erb.sh",
        "DstPathEnd": "bin/status_check",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/bin/status_check.erb.sh"
      },
      {
        "SrcPathEnd": "config/harbor.yml",
        "DstPathEnd": "config/harbor.yml",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/harbor.yml"
      },
      {
        "SrcPathEnd": "config/uaa.json.erb",
        "DstPathEnd": "config/uaa.json",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/uaa.json.erb"
      },
      {
        "SrcPathEnd": "config/trusted_certificates.crt",
        "DstPathEnd": "config/trusted_certificates.crt",
        "Path": "/tmp/tar-CmdExtractor275134650/templates/config/trusted_certificates.crt"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "common"
      },
      {
        "Name": "harbor-common"
      },
      {
        "Name": "docker-compose"
      },
      {
        "Name": "harbor-app"
      },
      {
        "Name": "uaa"
      },
      {
        "Name": "python"
      },
      {
        "Name": "nfs-common"
      }
    ],
    "Properties": [
      {
        "Name": "log_rotate_count",
        "Description": "The max count of log files before rotated",
        "Default": 10,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.trusted_certificates",
        "Description": "s3 storage trusted certificate.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.gcs.keyfile_content",
        "Description": "The text content of the GCS key file.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.azure.realm",
        "Description": "Azure storage realm.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_base2",
        "Description": "The container address pool 2 base",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "http_proxy",
        "Description": "The http_proxy url for Clair",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "self_registration",
        "Description": "Turn on or off the self-registration feature",
        "Default": "on",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "db.port",
        "Description": "The port of mysql database host",
        "Default": 3306,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_rotate_size",
        "Description": "The max size of single log file",
        "Default": "100M",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_secret",
        "Description": "The client secret for connecting to UAA Server.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "The root CA of UAA Server certificate.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.gcs.chunksize",
        "Description": "The GCS chunck size ",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "hostname",
        "Description": "The IP address or hostname to access admin UI and registry service",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "db.user",
        "Description": "The user name of mysql database",
        "Default": "root",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "https_proxy",
        "Description": "The https_proxy url for Clair",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "enable_upgrade",
        "Description": "Enable upgrading Harbor",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "admin_password",
        "Description": "The initial password of Harbor admin, only works for the first time when Harbor starts",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "project_creation_restriction",
        "Description": "The flag to control what users have permission to create projects. The default value [everyone] allows everyone to creates a project. Set to [adminonly] so that only admin user can create project.",
        "Default": "everyone",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "db.host",
        "Description": "The address of the mysql database",
        "Default": "mysql",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ssl.cert",
        "Description": "The certificate for server",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "populate_etc_hosts",
        "Description": "Whether to add IP to hostname mapping for Harbor instance in /etc/hosts.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.url",
        "Description": "UAA Server URL",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.azure.accountkey",
        "Description": "Azure storage account key.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.azure.container",
        "Description": "Azure storage container.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ui_url_protocol",
        "Description": "The protocol for accessing the UI and token/notification service, by default it is https",
        "Default": "https",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.redirect",
        "Description": "This allows to redirect to the docker storage location",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "token_expiration",
        "Description": "The expiration time (in minute) of token created by token service, default is 30 minutes",
        "Default": 30,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.client_id",
        "Description": "The client id for connecting to UAA Server.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.admin.client_id",
        "Description": "ID of UAA admin client",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "customize_container_network",
        "Description": "Specify the container network type",
        "Default": "default",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "customize_crt",
        "Description": "Determine whether or not to generate certificate for the registry's token. If the value is on, the prepare script creates new root cert and private key for generating token to access the registry. If the value is off the default key/cert will be used. This flag also controls the creation of the notary signer's cert.",
        "Default": "on",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.accesskey",
        "Description": "s3 storage access key.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.regionendpoint",
        "Description": "s3 storage region endpoint.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.gcs.rootdirectory",
        "Description": "The GCS root directory.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.admin.client_secret",
        "Description": "Secret of UAA admin client",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.chunksize",
        "Description": "s3 storage chunk size.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.rootdirectory",
        "Description": "s3 storage root directory.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_size2",
        "Description": "The container address pool 2 size",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.gcs.keyfile",
        "Description": "The GCS key file path.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.verify_cert",
        "Description": "Whether to verify UAA Server certificate.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.region",
        "Description": "s3 storage region.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_base1",
        "Description": "The container address pool 1 base",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_base3",
        "Description": "The container address pool 3 base",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "max_job_workers",
        "Description": "Maximum number of job workers in job service",
        "Default": 50,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.secure",
        "Description": "s3 storage secure.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "db_password",
        "Description": "The password for the root user of postgres db",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "auth_mode",
        "Description": "By default the auth mode is db_auth, i.e. the credentials are stored in a local database. Set it to ldap_auth if you want to verify a user's credentials against an LDAP server.",
        "Default": "db_auth",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.config",
        "Description": "The comma separated 'key: value' pairs for configuring Docker Registry storage provider.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.v4auth",
        "Description": "s3 storage v4auth.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.nfs.mount_point",
        "Description": "The local mount point for remote NFS Server.",
        "Default": "/harbor-registry",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_size1",
        "Description": "The container address pool 1 size",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "clair_updater_interval",
        "Description": "The interval to run clair updater",
        "Default": 12,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "reload_config",
        "Description": "Whether to reload all configurations in harbor.cfg",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.secretkey",
        "Description": "s3 storage secret key.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "with_clair",
        "Description": "An option to determine whether install the optional component Clair or not.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ssl.ca",
        "Description": "The CA of the server",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.nfs.server_uri",
        "Description": "The URI of NFS Server, e.g. nfs_server_ip:/path/to/exported_directory .",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ssl.key",
        "Description": "The certificate key for server",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "with_notary",
        "Description": "An option to determine whether install the optional component Notary or not.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.name",
        "Description": "The name of Docker Registry storage provider.",
        "Default": "filesystem",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.s3.bucket",
        "Description": "s3 storage bucket.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.gcs.bucket",
        "Description": "The GCS bucket.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_storage_provider.azure.accountname",
        "Description": "Azure storage account name.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_address_pool_size3",
        "Description": "The container address pool 3 size",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "no_proxy",
        "Description": "The no_proxy config for Clair",
        "Default": "127.0.0.1,localhost,ui,registry",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "trusted_certificates",
        "Description": "The opsmanager trusted certificates.",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "harbor-dns-aliases",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor530959868/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "dns/aliases.json.erb",
        "DstPathEnd": "dns/aliases.json",
        "Path": "/tmp/tar-CmdExtractor530959868/templates/dns/aliases.json.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": null,
    "Properties": [
      {
        "Name": "aliases",
        "Description": "A hash of domain key to target domains array for aliased DNS lookups",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "smoke-test",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor961604238/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.sh",
        "DstPathEnd": "bin/run",
        "Path": "/tmp/tar-CmdExtractor961604238/templates/run.sh"
      },
      {
        "SrcPathEnd": "config/ca.crt",
        "DstPathEnd": "config/ca.crt",
        "Path": "/tmp/tar-CmdExtractor961604238/templates/config/ca.crt"
      },
      {
        "SrcPathEnd": "config/cert.crt",
        "DstPathEnd": "config/cert.crt",
        "Path": "/tmp/tar-CmdExtractor961604238/templates/config/cert.crt"
      },
      {
        "SrcPathEnd": "config/key.crt",
        "DstPathEnd": "config/key.crt",
        "Path": "/tmp/tar-CmdExtractor961604238/templates/config/key.crt"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "smoke-test"
      },
      {
        "Name": "docker"
      },
      {
        "Name": "busybox"
      }
    ],
    "Properties": null
  },
  {
    "Name": "uaa-deregistration",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor826448112/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.sh",
        "DstPathEnd": "bin/run",
        "Path": "/tmp/tar-CmdExtractor826448112/templates/run.sh"
      },
      {
        "SrcPathEnd": "config/uaa_ca.crt",
        "DstPathEnd": "config/uaa_ca.crt",
        "Path": "/tmp/tar-CmdExtractor826448112/templates/config/uaa_ca.crt"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "common"
      },
      {
        "Name": "uaa"
      }
    ],
    "Properties": null
  },
  {
    "Name": "wavefront",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor917789602/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/ctl.sh.erb",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor917789602/templates/bin/ctl.sh.erb"
      },
      {
        "SrcPathEnd": "bin/pre-start.sh.erb",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor917789602/templates/bin/pre-start.sh.erb"
      },
      {
        "SrcPathEnd": "bin/status_check.sh.erb",
        "DstPathEnd": "bin/status_check",
        "Path": "/tmp/tar-CmdExtractor917789602/templates/bin/status_check.sh.erb"
      },
      {
        "SrcPathEnd": "config/docker-compose.yml.erb",
        "DstPathEnd": "config/docker-compose.yml",
        "Path": "/tmp/tar-CmdExtractor917789602/templates/config/docker-compose.yml.erb"
      },
      {
        "SrcPathEnd": "config/telegraf.config.erb",
        "DstPathEnd": "config/telegraf.config",
        "Path": "/tmp/tar-CmdExtractor917789602/templates/config/telegraf.config.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "common"
      },
      {
        "Name": "docker-compose"
      },
      {
        "Name": "wavefront"
      }
    ],
    "Properties": [
      {
        "Name": "wavefront_token",
        "Description": "The token used to access url",
        "Default": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "wavefront_hostname",
        "Description": "hostname used by telegraf, if empty use os.Hostname()",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "vm_monitor",
        "Description": "Set this to wavefront_monitor to enable wavefront",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "wavefront_url",
        "Description": "the url that telegraf send data to",
        "Default": "https://longboard.wavefront.com/api",
        "Example": null,
        "Examples": null
      }
    ]
  }
]