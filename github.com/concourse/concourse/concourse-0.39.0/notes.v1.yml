{
  "Content": "\u003e Run `fly` `sync` to upgrade Fly after deploying v0.39.0!\n\nThis release adds a new way of configuring jobs called Build Plans.\n\nWe’ll be removing support for the old style of job configuration in the\nfuture; to automatically migrate your configuration, just run\n`fly` `configure` against your instance to update your local\nconfiguration after upgrading to this release.\n\nFor more details, read on.\n- The biggest and best feature of this release is support for arbitrary\n  Build Plans. Jobs no longer need to take the form of inputs to a build\n  to outputs (although this is still possible). Jobs can now run steps\n  in parallel, aggregate inputs together, and push to outputs in the\n  middle of a build. The applications and possibilities are too numerous\n  to list. So I’m not going to bother.\n  \n  Since there is now more than one stage to `hijack` into we’ve added\n  new flags for the step name (`-n`) and step type (`-t`). You can use\n  these to gain shell access to any step of your build.\n  \n  For more information on how you can start, see Build Plans. We’ve\n  found a 43.73% increase in happiness from people who use this feature.\n  \n  As part of rolling out build plans, we now automatically translate the\n  old configuration format to the new plan-based configuration.\n- We’ve renamed what was formerly known as \"builds\" (i.e. `build.yml`)\n  to Tasks to disambiguate from builds of a job. Jobs have builds, and\n  builds are the result of running tasks and resource actions.\n- In related news, we needed to upgrade the UI to support all of these\n  wonderful new flows so we’ve spruced up the build log page a little.\n  There are now individual success/failure markers for each stage and\n  stages that are not-interesting (successful) will automatically\n  collapse. There are also little icons. Totally rad.\n- A few of you noticed that having multiple ignore paths in the\n  `git-resource` wasn’t really working properly. Well, we’ve fixed that.\n  We now process the `ignore_paths` parameter using `.gitignore`\n  semantics.\n"
}