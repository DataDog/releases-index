[
  {
    "Description": "The ATC (Air Traffic Controller) provides UI and API access. It is\nresponsible for scheduling builds and detecting versions of your resources.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor078846935/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "atc",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "atc"
      },
      {
        "Name": "fly"
      },
      {
        "Name": "generated_signing_key"
      }
    ],
    "Properties": [
      {
        "Default": "",
        "Description": "GitHub client secret to use for OAuth.\n\nThe application must be configured with its callback URL as\n`{atc.external_url}/auth/github/callback` (replacing `{atc.external_url}`\nwith the actual value).\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.github_auth.client_secret"
      },
      {
        "Default": "",
        "Description": "If configured, detailed metrics will be emitted to the specified Riemann\nserver.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.riemann.host"
      },
      {
        "Default": 5555,
        "Description": "Port of the Riemann server to emit events to.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.riemann.port"
      },
      {
        "Default": "atc",
        "Description": "Name of role to connect with.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.postgresql.role.name"
      },
      {
        "Default": false,
        "Description": "Loosen up security for development purposes. This allows the ATC to be\nconfigured with no authentication methods.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.development_mode"
      },
      {
        "Default": "",
        "Description": "Username for HTTP basic auth.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.basic_auth_username"
      },
      {
        "Default": "",
        "Description": "Password for HTTP basic auth, in plaintext.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.basic_auth_password"
      },
      {
        "Default": [],
        "Description": "An array of different criteria to check for when authorizing a GitHub\nuser. If empty, GitHub authorization is effectively disabled.\n",
        "Example": [
          {
            "organization": "org1",
            "teams": "all"
          },
          {
            "organization": "org2",
            "teams": [
              "Team 1",
              "Team 2"
            ]
          },
          {
            "user": "user1"
          },
          {
            "user": "user2"
          }
        ],
        "Examples": null,
        "Name": "atc.github_auth.authorize"
      },
      {
        "Default": "",
        "Description": "If configured, errors emitted to the logs will also be emitted to Yeller.\nThis is only really useful for Concourse developers.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.yeller.api_key"
      },
      {
        "Default": "postgresql.service.dc1.consul:5432",
        "Description": "Address of the PostgreSQL server, in `HOST:PORT` format.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.postgresql.address"
      },
      {
        "Default": null,
        "Description": "password to use when connecting.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.postgresql.role.password"
      },
      {
        "Default": {},
        "Description": "This property auto-configured `consul-agent` to register the ATC as a\nservice. You shouldn't need to touch it.\n",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.services.atc"
      },
      {
        "Default": 8080,
        "Description": "Port for the web server to listen on.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.web_bind_port"
      },
      {
        "Default": null,
        "Description": "Address used internally to reach the ATC. This will be auto-generated\nusing the IP of each ATC VM if not specified.\n\nNote that this refers to an *individual ATC*, not the whole cluster. This\nproperty is only useful if you're deploying in a way that cannot\nautodetect its own IP, e.g. a `bosh-init` deployment.\n\nYou should otherwise leave this value blank.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.peer_url"
      },
      {
        "Default": false,
        "Description": "Allow viewing of pipelines as an anonymous user. Destructive operations\nstill require auth, and the output of builds will only be visible if\ntheir job is configured with `public: true`.\n\nThis is useful for open-source projects, or as a convenience to make\nmonitoring your pipeline status easier.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.publicly_viewable"
      },
      {
        "Default": "30s",
        "Description": "The interval, in Go duration format (1m = 1 minute), on which to check\nfor and release old caches of resource versions.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.resource_cache_cleanup_interval"
      },
      {
        "Default": "atc",
        "Description": "Name of the database to use.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.postgresql.database"
      },
      {
        "Default": [
          "/var/vcap/sys/log/atc/atc.stdout.log",
          "/var/vcap/sys/log/atc/atc.stderr.log",
          "/var/vcap/sys/log/monit/atc_ctl.out.log",
          "/var/vcap/sys/log/monit/atc_ctl.err.log"
        ],
        "Description": "This property auto-configures `blackbox` to emit ATC's logs to its syslog\ndrain. You shouldn't need to touch it.\n",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.atc"
      },
      {
        "Default": "",
        "Description": "Externally reachable URL of the ATCs. Required for OAuth.\n\nTypically this is the URL that you as a user would use to reach your CI.\nFor multiple ATCs it would go to some sort of load balancer.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.external_url"
      },
      {
        "Default": "",
        "Description": "GitHub client ID to use for OAuth.\n\nThe application must be configured with its callback URL as\n`{atc.external_url}/auth/github/callback` (replacing `{atc.external_url}`\nwith the actual value).\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.github_auth.client_id"
      },
      {
        "Default": "1m",
        "Description": "The interval, in Go duration format (1m = 1 minute), on which to check\nfor new versions of resources.\n\nThis can also be specified on a per-resource basis by specifying\n`check_every` on the resource config.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.default_check_interval"
      },
      {
        "Default": "0.0.0.0",
        "Description": "IP address for the web server to listen on.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.web_bind_ip"
      },
      {
        "Default": "5m",
        "Description": "How long to cache the result of a get step after a newer version of the\nresource is found. Use Go duration format (1m = 1 minute).\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.old_resource_grace_period"
      },
      {
        "Default": "",
        "Description": "Environment name to specify for errors emitted to Yeller.\n",
        "Example": null,
        "Examples": null,
        "Name": "atc.yeller.environment_name"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/atc_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor078846935/templates/atc_ctl.erb",
        "SrcPathEnd": "atc_ctl.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor365125153/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "baggageclaim",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "btrfs_tools"
      },
      {
        "Name": "baggageclaim"
      }
    ],
    "Properties": [
      {
        "Default": 7788,
        "Description": "the port which baggageclaim hosts its api on",
        "Example": null,
        "Examples": null,
        "Name": "baggageclaim.listen_addr.port"
      },
      {
        "Default": "",
        "Description": "api key from yeller to output errors from concourse to yeller",
        "Example": null,
        "Examples": null,
        "Name": "baggageclaim.yeller.api_key"
      },
      {
        "Default": "",
        "Description": "environment name you wish to group errors under in yeller",
        "Example": null,
        "Examples": null,
        "Name": "baggageclaim.yeller.environment_name"
      },
      {
        "Default": [
          "/var/vcap/sys/log/baggageclaim/baggageclaim.stdout.log",
          "/var/vcap/sys/log/baggageclaim/baggageclaim.stderr.log",
          "/var/vcap/sys/log/baggageclaim/fs_mounter.stdout.log",
          "/var/vcap/sys/log/baggageclaim/fs_mounter.stderr.log",
          "/var/vcap/sys/log/monit/baggageclaim_ctl.out.log",
          "/var/vcap/sys/log/monit/baggageclaim_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.baggageclaim"
      },
      {
        "Default": "0.0.0.0",
        "Description": "the host or ip which baggageclaim hosts its api on",
        "Example": null,
        "Examples": null,
        "Name": "baggageclaim.listen_addr.address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/baggageclaim_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor365125153/templates/baggageclaim_ctl.erb",
        "SrcPathEnd": "baggageclaim_ctl.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor468119291/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "blackbox",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "blackbox"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "address for syslog drain (including port)",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.destination.address"
      },
      {
        "Default": "tls",
        "Description": "transport protocol for syslog drain (udp/tcp/tls)",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.destination.transport"
      },
      {
        "Default": {},
        "Description": "files whose contents will be emitted to the destination. the format is `{ \"tag\" =\u003e [\"/path/to/log\"] }`.\n",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/blackbox_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor468119291/templates/blackbox_ctl",
        "SrcPathEnd": "blackbox_ctl"
      },
      {
        "DstPathEnd": "config/config.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor468119291/templates/config.yml.erb",
        "SrcPathEnd": "config.yml.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor625768165/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "consul-agent",
    "Packages": [
      {
        "Name": "consul"
      }
    ],
    "Properties": [
      {
        "Default": "dc1",
        "Description": "name of the agent's datacenter",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.datacenter"
      },
      {
        "Default": {},
        "Description": "map of services to configure",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.services"
      },
      {
        "Default": [
          "/var/vcap/sys/log/consul-agent/consul-agent.stdout.log",
          "/var/vcap/sys/log/consul-agent/consul-agent.stderr.log",
          "/var/vcap/sys/log/monit/consul-agent.out.log",
          "/var/vcap/sys/log/monit/consul-agent.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.consul"
      },
      {
        "Default": "client",
        "Description": "mode to run the agent in. (client or server)",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.mode"
      },
      {
        "Default": [],
        "Description": "LAN server addresses to join on start",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.servers.lan"
      },
      {
        "Default": [],
        "Description": "WAN server addresses to join",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.servers.wan"
      },
      {
        "Default": "info",
        "Description": "agent log level",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.log_level"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/agent_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor625768165/templates/agent_ctl.sh.erb",
        "SrcPathEnd": "agent_ctl.sh.erb"
      },
      {
        "DstPathEnd": "bin/join_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor625768165/templates/join_ctl.sh.erb",
        "SrcPathEnd": "join_ctl.sh.erb"
      },
      {
        "DstPathEnd": "config/config.json",
        "Path": "/mnt/tmp/tar-CmdExtractor625768165/templates/config.json.erb",
        "SrcPathEnd": "config.json.erb"
      }
    ]
  },
  {
    "Description": "The ground crew registers a Garden worker with the ATC on an interval, advertises supported resource types, and cleans up ephemeral containers on shutdown.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor945305183/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "groundcrew",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "jettison"
      },
      {
        "Name": "generated_tsa_host_key"
      },
      {
        "Name": "generated_worker_key"
      },
      {
        "Name": "archive_resource"
      },
      {
        "Name": "cf_resource"
      },
      {
        "Name": "docker_image_resource"
      },
      {
        "Name": "git_resource"
      },
      {
        "Name": "github_release_resource"
      },
      {
        "Name": "pool_resource"
      },
      {
        "Name": "s3_resource"
      },
      {
        "Name": "semver_resource"
      },
      {
        "Name": "time_resource"
      },
      {
        "Name": "tracker_resource"
      },
      {
        "Name": "vagrant_cloud_resource"
      },
      {
        "Name": "bosh_io_release_resource"
      },
      {
        "Name": "bosh_io_stemcell_resource"
      },
      {
        "Name": "bosh_deployment_resource"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "baggageclaim server URL to advertise to the TSA",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.baggageclaim.url"
      },
      {
        "Default": [
          {
            "image": "/var/vcap/packages/archive_resource",
            "type": "archive"
          },
          {
            "image": "/var/vcap/packages/cf_resource",
            "type": "cf"
          },
          {
            "image": "/var/vcap/packages/docker_image_resource",
            "type": "docker-image"
          },
          {
            "image": "/var/vcap/packages/git_resource",
            "type": "git"
          },
          {
            "image": "/var/vcap/packages/s3_resource",
            "type": "s3"
          },
          {
            "image": "/var/vcap/packages/semver_resource",
            "type": "semver"
          },
          {
            "image": "/var/vcap/packages/time_resource",
            "type": "time"
          },
          {
            "image": "/var/vcap/packages/tracker_resource",
            "type": "tracker"
          },
          {
            "image": "/var/vcap/packages/pool_resource",
            "type": "pool"
          },
          {
            "image": "/var/vcap/packages/vagrant_cloud_resource",
            "type": "vagrant-cloud"
          },
          {
            "image": "/var/vcap/packages/github_release_resource",
            "type": "github-release"
          },
          {
            "image": "/var/vcap/packages/bosh_io_release_resource",
            "type": "bosh-io-release"
          },
          {
            "image": "/var/vcap/packages/bosh_io_stemcell_resource",
            "type": "bosh-io-stemcell"
          },
          {
            "image": "/var/vcap/packages/bosh_deployment_resource",
            "type": "bosh-deployment"
          }
        ],
        "Description": "resource types supported by the worker, in [{type: type, image: image}] form",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.resource_types"
      },
      {
        "Default": [],
        "Description": "additional resource types that will be merged into groundcrew.resource_types (the same format is used)",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.additional_resource_types"
      },
      {
        "Default": "tsa.service.dc1.consul",
        "Description": "host of the TSA server to register with",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.tsa.host"
      },
      {
        "Default": {},
        "Description": "this property auto-registers Garden as a service",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.services.garden"
      },
      {
        "Default": [
          "/var/vcap/sys/log/groundcrew/beacon.stdout.log",
          "/var/vcap/sys/log/groundcrew/beacon.stderr.log",
          "/var/vcap/sys/log/groundcrew/jettison.stdout.log",
          "/var/vcap/sys/log/groundcrew/jettison.stderr.log",
          "/var/vcap/sys/log/monit/beacon_ctl.out.log",
          "/var/vcap/sys/log/monit/beacon_ctl.err.log",
          "/var/vcap/sys/log/monit/jettison_ctl.out.log",
          "/var/vcap/sys/log/monit/jettison_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.groundcrew"
      },
      {
        "Default": null,
        "Description": "garden server connection address to advertise to the TSA",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.garden.address"
      },
      {
        "Default": "",
        "Description": "private key to use when authenticating with the TSA. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.tsa.private_key"
      },
      {
        "Default": "",
        "Description": "environment name you wish to group errors under in yeller",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.yeller.environment_name"
      },
      {
        "Default": null,
        "Description": "baggageclaim server connection address to forward through SSH to the TSA",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.baggageclaim.forward_address"
      },
      {
        "Default": "linux",
        "Description": "platform of the worker to advertise",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.platform"
      },
      {
        "Default": [],
        "Description": "an array of tags to advertise for the worker",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.tags"
      },
      {
        "Default": 2222,
        "Description": "port of the TSA server to register with",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.tsa.port"
      },
      {
        "Default": "",
        "Description": "api key from yeller to output errors from concourse to yeller",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.yeller.api_key"
      },
      {
        "Default": null,
        "Description": "garden server connection address to forward through SSH to the TSA",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.garden.forward_address"
      },
      {
        "Default": [
          "/var/vcap/sys/log/garden/garden.stdout.log",
          "/var/vcap/sys/log/garden/garden.stderr.log",
          "/var/vcap/sys/log/monit/garden_ctl.log",
          "/var/vcap/sys/log/monit/garden_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.garden"
      },
      {
        "Default": "",
        "Description": "host key to verify for the TSA server. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Examples": null,
        "Name": "groundcrew.tsa.host_public_key"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/beacon_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor945305183/templates/beacon_ctl.erb",
        "SrcPathEnd": "beacon_ctl.erb"
      },
      {
        "DstPathEnd": "bin/jettison_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor945305183/templates/jettison_ctl.erb",
        "SrcPathEnd": "jettison_ctl.erb"
      },
      {
        "DstPathEnd": "config/known_hosts",
        "Path": "/mnt/tmp/tar-CmdExtractor945305183/templates/known_hosts.erb",
        "SrcPathEnd": "known_hosts.erb"
      },
      {
        "DstPathEnd": "config/private_key",
        "Path": "/mnt/tmp/tar-CmdExtractor945305183/templates/private_key.erb",
        "SrcPathEnd": "private_key.erb"
      },
      {
        "DstPathEnd": "config/worker.json",
        "Path": "/mnt/tmp/tar-CmdExtractor945305183/templates/worker.json.erb",
        "SrcPathEnd": "worker.json.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor299183593/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "postgresql",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "postgresql_9.3"
      }
    ],
    "Properties": [
      {
        "Default": 500,
        "Description": "maximum number of open database connections",
        "Example": null,
        "Examples": null,
        "Name": "postgresql.max_connections"
      },
      {
        "Default": {},
        "Description": "this property auto-registers PostgreSQL as a service",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.services.postgresql"
      },
      {
        "Default": [
          "/var/vcap/sys/log/postgresql/postgresql.log",
          "/var/vcap/sys/log/monit/postgresql_ctl.out.log",
          "/var/vcap/sys/log/monit/postgresql_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.postgresql"
      },
      {
        "Default": "0.0.0.0",
        "Description": "listening host of the PostgreSQL service",
        "Example": null,
        "Examples": null,
        "Name": "postgresql.listen_host"
      },
      {
        "Default": 5432,
        "Description": "listening port of the PostgreSQL service",
        "Example": null,
        "Examples": null,
        "Name": "postgresql.listen_port"
      },
      {
        "Default": null,
        "Description": "a list of databases to create, e.g. [{name:foo}]",
        "Example": null,
        "Examples": null,
        "Name": "postgresql.databases"
      },
      {
        "Default": null,
        "Description": "a list of roles to create, e.g. [{name:foo,password:bar}]",
        "Example": null,
        "Examples": null,
        "Name": "postgresql.roles"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/postgresql_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor299183593/templates/postgresql_ctl.erb",
        "SrcPathEnd": "postgresql_ctl.erb"
      },
      {
        "DstPathEnd": "config/postgresql.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor299183593/templates/postgresql.conf.erb",
        "SrcPathEnd": "postgresql.conf.erb"
      },
      {
        "DstPathEnd": "config/pg_hba.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor299183593/templates/pg_hba.conf.erb",
        "SrcPathEnd": "pg_hba.conf.erb"
      }
    ]
  },
  {
    "Description": "TSA registers workers with the ATC via a SSH interface.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor551109123/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "tsa",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "tsa"
      },
      {
        "Name": "generated_tsa_host_key"
      },
      {
        "Name": "generated_worker_key"
      }
    ],
    "Properties": [
      {
        "Default": {},
        "Description": "this property auto-registers TSA as a service",
        "Example": null,
        "Examples": null,
        "Name": "consul.agent.services.tsa"
      },
      {
        "Default": null,
        "Description": "address to advertise forwarded worker connections to. if not specified, determined dynamically.",
        "Example": null,
        "Examples": null,
        "Name": "tsa.forward_host"
      },
      {
        "Default": 2222,
        "Description": "port to listen on for tsa ssh server",
        "Example": null,
        "Examples": null,
        "Name": "tsa.listen_port"
      },
      {
        "Default": "",
        "Description": "api key from yeller to output errors from concourse to yeller",
        "Example": null,
        "Examples": null,
        "Name": "tsa.yeller.api_key"
      },
      {
        "Default": "",
        "Description": "environment name you wish to group errors under in yeller",
        "Example": null,
        "Examples": null,
        "Name": "tsa.yeller.environment_name"
      },
      {
        "Default": "",
        "Description": "private key to use for the SSH server. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Examples": null,
        "Name": "tsa.host_key"
      },
      {
        "Default": [],
        "Description": "public keys to permit",
        "Example": null,
        "Examples": null,
        "Name": "tsa.authorized_keys"
      },
      {
        "Default": true,
        "Description": "permit access via generated worker key, local to deployment",
        "Example": null,
        "Examples": null,
        "Name": "tsa.authorize_generated_worker_key"
      },
      {
        "Default": [
          "/var/vcap/sys/log/tsa/tsa.stdout.log",
          "/var/vcap/sys/log/tsa/tsa.stderr.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Examples": null,
        "Name": "blackbox.syslog.sources.tsa"
      },
      {
        "Default": "30s",
        "Description": "interval on which to register with the ATC",
        "Example": null,
        "Examples": null,
        "Name": "tsa.heartbeat_interval"
      },
      {
        "Default": "atc.service.dc1.consul:8080",
        "Description": "atc server connection address",
        "Example": null,
        "Examples": null,
        "Name": "tsa.atc.address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/tsa_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor551109123/templates/tsa_ctl.erb",
        "SrcPathEnd": "tsa_ctl.erb"
      },
      {
        "DstPathEnd": "config/host_key",
        "Path": "/mnt/tmp/tar-CmdExtractor551109123/templates/host_key.erb",
        "SrcPathEnd": "host_key.erb"
      }
    ]
  }
]