[
  {
    "Description": "ATC (Air Traffic Controller) provides UI and API access.\nIt is responsible for scheduling builds. To configure the pipeline specify\nthe `atc.pipeline` property.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor767990585/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "atc",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "atc"
      },
      {
        "Name": "fly"
      }
    ],
    "Properties": [
      {
        "Default": "atc",
        "Description": "name of role to connect with",
        "Example": null,
        "Name": "atc.postgresql.role.name"
      },
      {
        "Default": "",
        "Description": "plaintext password for http basic auth",
        "Example": null,
        "Name": "atc.basic_auth_password"
      },
      {
        "Default": null,
        "Description": "static pipeline configuration containing jobs and resources. omit to manage config via the API.",
        "Example": {
          "jobs": [
            {
              "config": {
                "image": "docker:///busybox",
                "run": {
                  "args": [
                    "Hello",
                    "world!"
                  ],
                  "path": "echo"
                }
              },
              "name": "dummy"
            }
          ],
          "resources": [
            {
              "name": "concourse",
              "source": {
                "uri": "https://github.com/concource/concourse"
              },
              "type": "git"
            }
          ]
        },
        "Name": "atc.pipeline"
      },
      {
        "Default": "postgresql.service.dc1.consul:5432",
        "Description": "address of the PostgreSQL server",
        "Example": null,
        "Name": "atc.postgresql.address"
      },
      {
        "Default": "atc",
        "Description": "name of the database to use",
        "Example": null,
        "Name": "atc.postgresql.database"
      },
      {
        "Default": false,
        "Description": "allow public viewing; destructive operations still require auth",
        "Example": null,
        "Name": "atc.publicly_viewable"
      },
      {
        "Default": "0.0.0.0",
        "Description": "address for the web server to listen on",
        "Example": null,
        "Name": "atc.web_listen_address"
      },
      {
        "Default": "",
        "Description": "username for http basic auth",
        "Example": null,
        "Name": "atc.basic_auth_username"
      },
      {
        "Default": "",
        "Description": "bcrypt encrypted password for http basic auth",
        "Example": null,
        "Name": "atc.basic_auth_encrypted_password"
      },
      {
        "Default": null,
        "Description": "password to use when connecting",
        "Example": null,
        "Name": "atc.postgresql.role.password"
      },
      {
        "Default": {},
        "Description": "this property auto-registers ATC as a service",
        "Example": null,
        "Name": "consul.agent.services.atc"
      },
      {
        "Default": 8080,
        "Description": "port for the web server to listen on",
        "Example": null,
        "Name": "atc.web_listen_port"
      },
      {
        "Default": null,
        "Description": "address reachable by workers to reach the ATC. auto-detected if omitted.",
        "Example": null,
        "Name": "atc.callbacks_address"
      },
      {
        "Default": "1m",
        "Description": "how often to check for new versions of resources. keep rate limiting in mind.",
        "Example": null,
        "Name": "atc.default_check_interval"
      },
      {
        "Default": [
          "/var/vcap/sys/log/atc/atc.stdout.log",
          "/var/vcap/sys/log/atc/atc.stderr.log",
          "/var/vcap/sys/log/monit/atc_ctl.out.log",
          "/var/vcap/sys/log/monit/atc_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.atc"
      },
      {
        "Default": {
          "tags": [
            "program:atc"
          ],
          "url": "http://127.0.0.1:8079/debug/vars"
        },
        "Description": "",
        "Example": null,
        "Name": "blackbox.expvar.sources.atc"
      },
      {
        "Default": false,
        "Description": "loosen up security for development purposes",
        "Example": null,
        "Name": "atc.development_mode"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/atc_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor767990585/templates/atc_ctl.erb",
        "SrcPathEnd": "atc_ctl.erb"
      },
      {
        "DstPathEnd": "config/pipeline.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor767990585/templates/pipeline.yml.erb",
        "SrcPathEnd": "pipeline.yml.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor879256019/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "baggageclaim",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "btrfs_tools"
      },
      {
        "Name": "baggageclaim"
      }
    ],
    "Properties": [
      {
        "Default": "0.0.0.0",
        "Description": "the host or ip which baggageclaim hosts its api on",
        "Example": null,
        "Name": "baggageclaim.listen_addr.address"
      },
      {
        "Default": 7788,
        "Description": "the port which baggageclaim hosts its api on",
        "Example": null,
        "Name": "baggageclaim.listen_addr.port"
      },
      {
        "Default": [
          "/var/vcap/sys/log/baggageclaim/baggageclaim.stdout.log",
          "/var/vcap/sys/log/baggageclaim/baggageclaim.stderr.log",
          "/var/vcap/sys/log/baggageclaim/fs_mounter.stdout.log",
          "/var/vcap/sys/log/baggageclaim/fs_mounter.stderr.log",
          "/var/vcap/sys/log/monit/baggageclaim_ctl.out.log",
          "/var/vcap/sys/log/monit/baggageclaim_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.baggageclaim"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/baggageclaim_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor879256019/templates/baggageclaim_ctl.erb",
        "SrcPathEnd": "baggageclaim_ctl.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor897551741/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "blackbox",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "blackbox"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "address for syslog drain (including port)",
        "Example": null,
        "Name": "blackbox.syslog.destination.address"
      },
      {
        "Default": "udp",
        "Description": "transport protocol for syslog drain (udp/tcp/tls)",
        "Example": null,
        "Name": "blackbox.syslog.destination.transport"
      },
      {
        "Default": {},
        "Description": "files whose contents will be emitted to the destination. the format is `{ \"tag\" =\u003e [\"/path/to/log\"] }`.\n",
        "Example": null,
        "Name": "blackbox.syslog.sources"
      },
      {
        "Default": null,
        "Description": "API key to use when sending metrics to Datadog",
        "Example": null,
        "Name": "blackbox.expvar.datadog.api_key"
      },
      {
        "Default": 10,
        "Description": "interval on which to emit metrics",
        "Example": null,
        "Name": "blackbox.expvar.interval_in_seconds"
      },
      {
        "Default": {},
        "Description": "expvar endpoints from which to emit metrics the format is `{ \"name\" =\u003e { \"url\" =\u003e \"http://...\", \"tags\" =\u003e [\"program:atc\"] }`.\n",
        "Example": null,
        "Name": "blackbox.expvar.sources"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/blackbox_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor897551741/templates/blackbox_ctl",
        "SrcPathEnd": "blackbox_ctl"
      },
      {
        "DstPathEnd": "config/config.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor897551741/templates/config.yml.erb",
        "SrcPathEnd": "config.yml.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor453741239/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "consul-agent",
    "Packages": [
      {
        "Name": "consul"
      }
    ],
    "Properties": [
      {
        "Default": [],
        "Description": "WAN server addresses to join",
        "Example": null,
        "Name": "consul.agent.servers.wan"
      },
      {
        "Default": "info",
        "Description": "agent log level",
        "Example": null,
        "Name": "consul.agent.log_level"
      },
      {
        "Default": "dc1",
        "Description": "name of the agent's datacenter",
        "Example": null,
        "Name": "consul.agent.datacenter"
      },
      {
        "Default": {},
        "Description": "map of services to configure",
        "Example": null,
        "Name": "consul.agent.services"
      },
      {
        "Default": [
          "/var/vcap/sys/log/consul-agent/consul-agent.stdout.log",
          "/var/vcap/sys/log/consul-agent/consul-agent.stderr.log",
          "/var/vcap/sys/log/monit/consul-agent.out.log",
          "/var/vcap/sys/log/monit/consul-agent.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.consul"
      },
      {
        "Default": "client",
        "Description": "mode to run the agent in. (client or server)",
        "Example": null,
        "Name": "consul.agent.mode"
      },
      {
        "Default": [],
        "Description": "LAN server addresses to join on start",
        "Example": null,
        "Name": "consul.agent.servers.lan"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/agent_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor453741239/templates/agent_ctl.sh.erb",
        "SrcPathEnd": "agent_ctl.sh.erb"
      },
      {
        "DstPathEnd": "bin/join_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor453741239/templates/join_ctl.sh.erb",
        "SrcPathEnd": "join_ctl.sh.erb"
      },
      {
        "DstPathEnd": "config/config.json",
        "Path": "/mnt/tmp/tar-CmdExtractor453741239/templates/config.json.erb",
        "SrcPathEnd": "config.json.erb"
      }
    ]
  },
  {
    "Description": "The ground crew registers a Garden worker with the ATC on an interval, advertises supported resource types, and cleans up ephemeral containers on shutdown.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor282099713/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "groundcrew",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "jettison"
      },
      {
        "Name": "generated_tsa_host_key"
      },
      {
        "Name": "generated_worker_key"
      },
      {
        "Name": "archive_resource"
      },
      {
        "Name": "cf_resource"
      },
      {
        "Name": "docker_image_resource"
      },
      {
        "Name": "git_resource"
      },
      {
        "Name": "github_release_resource"
      },
      {
        "Name": "pool_resource"
      },
      {
        "Name": "s3_resource"
      },
      {
        "Name": "semver_resource"
      },
      {
        "Name": "time_resource"
      },
      {
        "Name": "tracker_resource"
      },
      {
        "Name": "vagrant_cloud_resource"
      },
      {
        "Name": "bosh_io_release_resource"
      },
      {
        "Name": "bosh_io_stemcell_resource"
      },
      {
        "Name": "bosh_deployment_resource"
      }
    ],
    "Properties": [
      {
        "Default": 2222,
        "Description": "port of the TSA server to register with",
        "Example": null,
        "Name": "groundcrew.tsa.port"
      },
      {
        "Default": "",
        "Description": "host key to verify for the TSA server. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Name": "groundcrew.tsa.host_public_key"
      },
      {
        "Default": "",
        "Description": "private key to use when authenticating with the TSA. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Name": "groundcrew.tsa.private_key"
      },
      {
        "Default": null,
        "Description": "garden server connection address to forward through SSH to the TSA",
        "Example": null,
        "Name": "groundcrew.garden.forward_address"
      },
      {
        "Default": [
          {
            "image": "/var/vcap/packages/archive_resource",
            "type": "archive"
          },
          {
            "image": "/var/vcap/packages/cf_resource",
            "type": "cf"
          },
          {
            "image": "/var/vcap/packages/docker_image_resource",
            "type": "docker-image"
          },
          {
            "image": "/var/vcap/packages/git_resource",
            "type": "git"
          },
          {
            "image": "/var/vcap/packages/s3_resource",
            "type": "s3"
          },
          {
            "image": "/var/vcap/packages/semver_resource",
            "type": "semver"
          },
          {
            "image": "/var/vcap/packages/time_resource",
            "type": "time"
          },
          {
            "image": "/var/vcap/packages/tracker_resource",
            "type": "tracker"
          },
          {
            "image": "/var/vcap/packages/pool_resource",
            "type": "pool"
          },
          {
            "image": "/var/vcap/packages/vagrant_cloud_resource",
            "type": "vagrant-cloud"
          },
          {
            "image": "/var/vcap/packages/github_release_resource",
            "type": "github-release"
          },
          {
            "image": "/var/vcap/packages/bosh_io_release_resource",
            "type": "bosh-io-release"
          },
          {
            "image": "/var/vcap/packages/bosh_io_stemcell_resource",
            "type": "bosh-io-stemcell"
          },
          {
            "image": "/var/vcap/packages/bosh_deployment_resource",
            "type": "bosh-deployment"
          }
        ],
        "Description": "resource types supported by the worker, in [{type: type, image: image}] form",
        "Example": null,
        "Name": "groundcrew.resource_types"
      },
      {
        "Default": "linux",
        "Description": "platform of the worker to advertise",
        "Example": null,
        "Name": "groundcrew.platform"
      },
      {
        "Default": "tsa.service.dc1.consul",
        "Description": "host of the TSA server to register with",
        "Example": null,
        "Name": "groundcrew.tsa.host"
      },
      {
        "Default": null,
        "Description": "garden server connection address to advertise to the TSA",
        "Example": null,
        "Name": "groundcrew.garden.address"
      },
      {
        "Default": [],
        "Description": "an array of tags to advertise for the worker",
        "Example": null,
        "Name": "groundcrew.tags"
      },
      {
        "Default": {},
        "Description": "this property auto-registers Garden as a service",
        "Example": null,
        "Name": "consul.agent.services.garden"
      },
      {
        "Default": [
          "/var/vcap/sys/log/groundcrew/beacon.stdout.log",
          "/var/vcap/sys/log/groundcrew/beacon.stderr.log",
          "/var/vcap/sys/log/groundcrew/jettison.stdout.log",
          "/var/vcap/sys/log/groundcrew/jettison.stderr.log",
          "/var/vcap/sys/log/monit/beacon_ctl.out.log",
          "/var/vcap/sys/log/monit/beacon_ctl.err.log",
          "/var/vcap/sys/log/monit/jettison_ctl.out.log",
          "/var/vcap/sys/log/monit/jettison_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.groundcrew"
      },
      {
        "Default": [
          "/var/vcap/sys/log/garden/garden.stdout.log",
          "/var/vcap/sys/log/garden/garden.stderr.log",
          "/var/vcap/sys/log/monit/garden_ctl.log",
          "/var/vcap/sys/log/monit/garden_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.garden"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/beacon_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor282099713/templates/beacon_ctl.erb",
        "SrcPathEnd": "beacon_ctl.erb"
      },
      {
        "DstPathEnd": "bin/jettison_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor282099713/templates/jettison_ctl.erb",
        "SrcPathEnd": "jettison_ctl.erb"
      },
      {
        "DstPathEnd": "config/known_hosts",
        "Path": "/mnt/tmp/tar-CmdExtractor282099713/templates/known_hosts.erb",
        "SrcPathEnd": "known_hosts.erb"
      },
      {
        "DstPathEnd": "config/private_key",
        "Path": "/mnt/tmp/tar-CmdExtractor282099713/templates/private_key.erb",
        "SrcPathEnd": "private_key.erb"
      },
      {
        "DstPathEnd": "config/worker.json",
        "Path": "/mnt/tmp/tar-CmdExtractor282099713/templates/worker.json.erb",
        "SrcPathEnd": "worker.json.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor714226651/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "postgresql",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "postgresql_9.3"
      }
    ],
    "Properties": [
      {
        "Default": [
          "/var/vcap/sys/log/postgresql/postgresql.log",
          "/var/vcap/sys/log/monit/postgresql_ctl.out.log",
          "/var/vcap/sys/log/monit/postgresql_ctl.err.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.postgresql"
      },
      {
        "Default": "0.0.0.0",
        "Description": "listening host of the PostgreSQL service",
        "Example": null,
        "Name": "postgresql.listen_host"
      },
      {
        "Default": 5432,
        "Description": "listening port of the PostgreSQL service",
        "Example": null,
        "Name": "postgresql.listen_port"
      },
      {
        "Default": null,
        "Description": "a list of databases to create, e.g. [{name:foo}]",
        "Example": null,
        "Name": "postgresql.databases"
      },
      {
        "Default": null,
        "Description": "a list of roles to create, e.g. [{name:foo,password:bar}]",
        "Example": null,
        "Name": "postgresql.roles"
      },
      {
        "Default": 500,
        "Description": "maximum number of open database connections",
        "Example": null,
        "Name": "postgresql.max_connections"
      },
      {
        "Default": {},
        "Description": "this property auto-registers PostgreSQL as a service",
        "Example": null,
        "Name": "consul.agent.services.postgresql"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/postgresql_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor714226651/templates/postgresql_ctl.erb",
        "SrcPathEnd": "postgresql_ctl.erb"
      },
      {
        "DstPathEnd": "config/postgresql.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor714226651/templates/postgresql.conf.erb",
        "SrcPathEnd": "postgresql.conf.erb"
      },
      {
        "DstPathEnd": "config/pg_hba.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor714226651/templates/pg_hba.conf.erb",
        "SrcPathEnd": "pg_hba.conf.erb"
      }
    ]
  },
  {
    "Description": "TSA registers workers with the ATC via a SSH interface.\n",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor725310661/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "tsa",
    "Packages": [
      {
        "Name": "pid_utils"
      },
      {
        "Name": "tsa"
      },
      {
        "Name": "generated_tsa_host_key"
      },
      {
        "Name": "generated_worker_key"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "address to advertise forwarded worker connections to. if not specified, determined dynamically.",
        "Example": null,
        "Name": "tsa.forward_host"
      },
      {
        "Default": true,
        "Description": "permit access via generated worker key, local to deployment",
        "Example": null,
        "Name": "tsa.authorize_generated_worker_key"
      },
      {
        "Default": [
          "/var/vcap/sys/log/tsa/tsa.stdout.log",
          "/var/vcap/sys/log/tsa/tsa.stderr.log"
        ],
        "Description": "files whose contents blackbox will emit to its syslog drain",
        "Example": null,
        "Name": "blackbox.syslog.sources.tsa"
      },
      {
        "Default": "30s",
        "Description": "interval on which to register with the ATC",
        "Example": null,
        "Name": "tsa.heartbeat_interval"
      },
      {
        "Default": "atc.service.dc1.consul:8080",
        "Description": "atc server connection address",
        "Example": null,
        "Name": "tsa.atc.address"
      },
      {
        "Default": "",
        "Description": "ATC API basic auth username",
        "Example": null,
        "Name": "tsa.atc.username"
      },
      {
        "Default": "",
        "Description": "ATC API basic auth password",
        "Example": null,
        "Name": "tsa.atc.password"
      },
      {
        "Default": "",
        "Description": "private key to use for the SSH server. if not specified, a deployment-scoped default is used.\n",
        "Example": null,
        "Name": "tsa.host_key"
      },
      {
        "Default": [],
        "Description": "public keys to permit",
        "Example": null,
        "Name": "tsa.authorized_keys"
      },
      {
        "Default": {},
        "Description": "this property auto-registers TSA as a service",
        "Example": null,
        "Name": "consul.agent.services.tsa"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/tsa_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor725310661/templates/tsa_ctl.erb",
        "SrcPathEnd": "tsa_ctl.erb"
      },
      {
        "DstPathEnd": "config/host_key",
        "Path": "/mnt/tmp/tar-CmdExtractor725310661/templates/host_key.erb",
        "SrcPathEnd": "host_key.erb"
      }
    ]
  }
]