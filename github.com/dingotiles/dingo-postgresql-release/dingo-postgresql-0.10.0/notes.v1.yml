{
  "Content": "## Do not upgrade from previous versions\n\nIf you are running a previous version and have running service instances/clusters, please contact us on https://slack.dingotiles.com to discuss the upgrade path.\n\n## New feature\n- `clone-from` - create a new service instance cloned from the latest backups of an existing service instance or previously existing (deleted) service instance from the same org/space.\n\n```\ncf create-service dingo-postgresql cluster prod\ncf create-service dingo-postgresql cluster staging -c '{\"clone-from\":\"prod\"}'\n```\n\nThe `clone-from` feature also allows developers/admins to confirm that backups are working (edit `prod`, create a `clone-from` and confirm that the edit exists in the clone).\n\nNote: `clone-from` only works for service instances created since this feature was implemented.\n\nTo enable this feature, your deployment needs to add `cf.*` and `backups.database_storage.*` properties to `broker` template (in the `router` job).\n\nTo test the feature, add the `integration-test` errand to your deployment. See the `templates/cf.yml` and `templates/integration-test.yml` spruce templates.\n\n## Learn more at CFSummit Europe\n\nMeet Justin Carter and Dr Nic Williams in Frankfurt http://sched.co/7rdh on Wed Sept 28!\n\n## Changes\n- `disaster-recovery` properties have changed (`cf.api_url` and `cf.skip_ssl_validation`)\n- removed support for `backups.*.s3_endpoint` (use `backups.*.region`) and the `$WALE_S3_ENDPOINT` variable until future time when we formally test alternate S3 apis\n\n## Upload to BOSH\n\nTo upload BOSH releases:\n\n```\ncurl -s \"https://api.github.com/repos/dingotiles/dingo-postgresql-release/releases/tags/v0.10.0\" | jq -r \".assets[].browser_download_url\"  | grep tgz |   xargs -L1 bosh upload release --skip-if-exists\n```\n\nOr get URLs for BOSH releases:\n\n```\ncurl -s \"https://api.github.com/repos/dingotiles/dingo-postgresql-release/releases/tags/v0.10.0\" | jq -r \".assets[].browser_download_url\"  | grep tgz\n```\n"
}