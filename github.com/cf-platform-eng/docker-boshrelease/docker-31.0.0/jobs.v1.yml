[
  {
    "Name": "containers",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor068055245/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor068055245/templates/bin/ctl"
      },
      {
        "SrcPathEnd": "bin/job_properties.sh.erb",
        "DstPathEnd": "bin/job_properties.sh",
        "Path": "/tmp/tar-CmdExtractor068055245/templates/bin/job_properties.sh.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-helpers"
      }
    ],
    "Properties": [
      {
        "Name": "containers",
        "Description": "Containers Array (see below for details)",
        "Default": null,
        "Example": "containers.name: String containing the name of the container\ncontainers.image: String containing the name of the image to create/run\ncontainers.command: Optional String containing the command to the run (including arguments)\ncontainers.blkio_weight: Optional string containing the Block IO (relative weight)\ncontainers.cap_adds: Optional array of Linux capabilities to add\ncontainers.cap_drops: Optional array of Linux capabilities to drop\ncontainers.cpu_period: Optional string containing the CPU CFS (Completely Fair Scheduler) period limit\ncontainers.cpu_quota: Optional string containing the CPU CFS (Completely Fair Scheduler) quota limit\ncontainers.cpu_shares: Optional string containing the CPU shares to assign to the container (relative weight)\ncontainers.depends_on: Optional array of names of others containers in the same job that this container depends on\ncontainers.devices: Optional array of host devices to add to the container\ncontainers.disable_content_trust: Optional boolean to skip image verification\ncontainers.dns: Optional array of strings to set custom DNS servers\ncontainers.dns_options: Optional array of strings to set custom DNS servers\ncontainers.dns_search: Optional array of strings to set custom DNS search domains\ncontainers.entrypoint: Optional string containing the entrypoint (only if you want to override the default entrypoint set by the image)\ncontainers.env_file: Optional paths to files of environment variables to pass to the container\ncontainers.env_vars: Optional array of environment variables to pass to the container\ncontainers.expose_ports: Optional array of network port to expose from the container without publishing it to your host\ncontainers.group_adds: Optional array of additional groups to join\ncontainers.hostname: Optional string containing the container host name\ncontainers.kernel_memory: Optional string containing the kernel memory limit\ncontainers.labels: Optional array of container labels meta data\ncontainers.links: Optional array of links to another containers (name:alias)\ncontainers.log_driver: Optional string containing the log driver for the container\ncontainers.log_options: Optional array of log driver options\ncontainers.lxc_options: Optional array of custom lxc options\ncontainers.mac_address: Optional string containing the container MAC address\ncontainers.memory: Optional string containing the memory limit to assign to the container (format: \u003cnumber\u003e\u003coptional unit\u003e, where unit = b, k, m or g)\ncontainers.memory_reservation: Optional string containing the memory soft limit\ncontainers.memory_swap: Optional string containing the total memory usage (memory + swap), set '-1' to disable swap (format: \u003cnumber\u003e\u003coptional unit\u003e, where unit = b, k, m or g)\ncontainers.memory_swappiness: Optional string containing the tuning container memory swappiness\ncontainers.net: Optional string containing the network for the container\ncontainers.oom_kill_disable: Optional boolean to disable OOM Killer\ncontainers.privileged: Optional boolean to enable/disable extended privileges to this container\ncontainers.bind_ports: Optional array of network ports to map to the container\ncontainers.read_only: Optional boolean to mount the container's root filesystem as read only\ncontainers.restart: Optional string containing the restart policy to apply when a container exits (no, on-failure, always)\ncontainers.security_options: Optional array of security options\ncontainers.stop_signal: Optional string containing the signal to stop a container, SIGTERM by default\ncontainers.ulimits: Optional array of Ulimit options\ncontainers.user: Optional string containing the username or UID to run the first process\ncontainers.volumes: Optional array of volumes to bind mount\ncontainers.bind_volumes: Optional array of container mountpoints to bind to a host directory\ncontainers.volumes_from: Optional array of mount volumes from the specified container(s)\ncontainers.volume_driver: Optional string containing the volume driver for the container\ncontainers.workdir: Optional string containing the working directory inside the container\ncontainers.store_dir: Optional string containing directory to store the containers data files\n",
        "Examples": null
      }
    ]
  },
  {
    "Name": "docker",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor830953095/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "config/docker.cacert.erb",
        "DstPathEnd": "config/docker.cacert",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/config/docker.cacert.erb"
      },
      {
        "SrcPathEnd": "config/docker.cert.erb",
        "DstPathEnd": "config/docker.cert",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/config/docker.cert.erb"
      },
      {
        "SrcPathEnd": "config/docker.key.erb",
        "DstPathEnd": "config/docker.key",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/config/docker.key.erb"
      },
      {
        "SrcPathEnd": "bin/cgroupfs-mount",
        "DstPathEnd": "bin/cgroupfs-mount",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/bin/cgroupfs-mount"
      },
      {
        "SrcPathEnd": "bin/ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/bin/ctl"
      },
      {
        "SrcPathEnd": "bin/envrc",
        "DstPathEnd": "bin/envrc",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/bin/envrc"
      },
      {
        "SrcPathEnd": "bin/setup-user-env",
        "DstPathEnd": "bin/setup-user-env",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/bin/setup-user-env"
      },
      {
        "SrcPathEnd": "bin/job_properties.sh.erb",
        "DstPathEnd": "bin/job_properties.sh",
        "Path": "/tmp/tar-CmdExtractor830953095/templates/bin/job_properties.sh.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-helpers"
      },
      {
        "Name": "docker"
      },
      {
        "Name": "ctop"
      }
    ],
    "Properties": [
      {
        "Name": "log_driver",
        "Description": "Default driver for container logs",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "mtu",
        "Description": "Set the containers network MTU (if no value is provided: default to the default route MTU or 1500 if no default route is available)",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "registry_mirrors",
        "Description": "Array of preferred Docker registry mirrors",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "storage_options",
        "Description": "Array of storage driver options",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "selinux_enable",
        "Description": "Enable selinux support",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "store_dir",
        "Description": "Path to use as the root of the Docker runtime",
        "Default": "/var/vcap/store",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls_cert",
        "Description": "TLS certificate file, if tcp_address not 127.0.0.1",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_gateway",
        "Description": "Container default gateway IPv4 address",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "disable_legacy_registry",
        "Description": "Do not contact legacy registries",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ip",
        "Description": "Default IP when binding container ports",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.https_proxy",
        "Description": "HTTPS proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "cidr_prefix",
        "Description": "CIDR notation prefix (first 2 octets) for the network bridges IP",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "iptables",
        "Description": "Enable Docker's addition of iptables rules",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "storage_driver",
        "Description": "Use a specific storage driver",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ulimit.nofile",
        "Description": "Maximum number of open files",
        "Default": 8192,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "exec_options",
        "Description": "Array of exec driver options",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ip_forward",
        "Description": "Enable net.ipv4.ip_forward and IPv6 forwarding",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ip_masq",
        "Description": "Enable IP masquerading",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_level",
        "Description": "Set the logging level (debug, info, warn, error, fatal)",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls_cacert",
        "Description": "Trust only remotes providing a certificate signed by the CA given here, if tcp_address not 127.0.0.1",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "debug",
        "Description": "Enable debug mode",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_gateway_v6",
        "Description": "Container default gateway IPv6 address",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "dns_options",
        "Description": "Array of DNS options to be used",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "userland_proxy",
        "Description": "Use userland proxy for loopback traffic",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bridge",
        "Description": "Name of the network bridge to attach containers (defaults to docker0)",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ipv6",
        "Description": "Enable IPv6 networking",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "bip",
        "Description": "Bridge IP in CIDR form. Example: 172.17.0.1/24. If set, this value will be used for the docker0 bridge '--bip' argument.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "labels",
        "Description": "Array of key=value labels for the daemon",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.http_proxy",
        "Description": "HTTP proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.no_proxy",
        "Description": "List of comma-separated hosts that Docker should skip connecting to the proxy",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_address",
        "Description": "TCP address where Docker daemon will listen to (if not set, TCP will not be available)",
        "Default": "127.0.0.1",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "dns_servers",
        "Description": "Array of DNS servers to be used",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "dns_search",
        "Description": "Array of DNS search domains to be used",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "icc",
        "Description": "Allow unrestricted inter-container and Docker daemon host communication",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "insecure_registries",
        "Description": "Array of insecure registries (no certificate verification for HTTPS and enable HTTP fallback)",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "vm.max_map_count",
        "Description": "If set, sets vm.max_map_count on VM",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "flannel",
        "Description": "Enable flannel support",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_port",
        "Description": "TCP port where Docker daemon will listen to (if not set, TCP will not be available)",
        "Default": "4243",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tls_key",
        "Description": "TLS key file, if tcp_address not 127.0.0.1",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "default_ulimits",
        "Description": "Array of default ulimits for containers",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "log_options",
        "Description": "Array of log driver options",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "flannel",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor681499217/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor681499217/templates/bin/ctl"
      },
      {
        "SrcPathEnd": "bin/monit_debugger",
        "DstPathEnd": "bin/monit_debugger",
        "Path": "/tmp/tar-CmdExtractor681499217/templates/bin/monit_debugger"
      },
      {
        "SrcPathEnd": "data/properties.sh.erb",
        "DstPathEnd": "data/properties.sh",
        "Path": "/tmp/tar-CmdExtractor681499217/templates/data/properties.sh.erb"
      },
      {
        "SrcPathEnd": "helpers/ctl_setup.sh",
        "DstPathEnd": "helpers/ctl_setup.sh",
        "Path": "/tmp/tar-CmdExtractor681499217/templates/helpers/ctl_setup.sh"
      },
      {
        "SrcPathEnd": "helpers/ctl_utils.sh",
        "DstPathEnd": "helpers/ctl_utils.sh",
        "Path": "/tmp/tar-CmdExtractor681499217/templates/helpers/ctl_utils.sh"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "flannel"
      }
    ],
    "Properties": [
      {
        "Name": "apiserver.ip",
        "Description": "ip of api server",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ip-range",
        "Description": "ip range of flannel overlay network",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "swarm-agent",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor928736427/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/job_properties.sh.erb",
        "DstPathEnd": "bin/job_properties.sh",
        "Path": "/tmp/tar-CmdExtractor928736427/templates/bin/job_properties.sh.erb"
      },
      {
        "SrcPathEnd": "bin/ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor928736427/templates/bin/ctl"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-helpers"
      },
      {
        "Name": "swarm"
      }
    ],
    "Properties": [
      {
        "Name": "log_level",
        "Description": "Log level (options: debug, info, warn, error, fatal, panic)",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "advertise",
        "Description": "Address of the Docker Engine joining the cluster. Swarm manager(s) MUST be able to reach the Docker Engine at this address.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "heartbeat",
        "Description": "Time in second between each heartbeat",
        "Default": "20s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "swarm.discovery",
        "Description": "Swarm discovery string (ie: consul://\u003cip\u003e/\u003cpath\u003e, etcd://\u003cip1\u003e,\u003cip2\u003e/\u003cpath\u003e, zk://\u003cip1\u003e,\u003cip2\u003e/\u003cpath\u003e, [nodes://]\u003cip1\u003e,\u003cip2\u003e",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "debug",
        "Description": "Enable debug mode",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "ttl",
        "Description": "Sets the expiration of an ephemeral node",
        "Default": "60s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "swarm.discovery_options",
        "Description": "Swarm discovery options",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.http_proxy",
        "Description": "HTTP proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.https_proxy",
        "Description": "HTTPS proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.no_proxy",
        "Description": "List of comma-separated hosts that Docker should skip connecting to the proxy",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "swarm-manager",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor221975061/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "bin/job_properties.sh.erb",
        "DstPathEnd": "bin/job_properties.sh",
        "Path": "/tmp/tar-CmdExtractor221975061/templates/bin/job_properties.sh.erb"
      },
      {
        "SrcPathEnd": "bin/ctl",
        "DstPathEnd": "bin/ctl",
        "Path": "/tmp/tar-CmdExtractor221975061/templates/bin/ctl"
      },
      {
        "SrcPathEnd": "config/docker.cacert.erb",
        "DstPathEnd": "config/docker.cacert",
        "Path": "/tmp/tar-CmdExtractor221975061/templates/config/docker.cacert.erb"
      },
      {
        "SrcPathEnd": "config/docker.cert.erb",
        "DstPathEnd": "config/docker.cert",
        "Path": "/tmp/tar-CmdExtractor221975061/templates/config/docker.cert.erb"
      },
      {
        "SrcPathEnd": "config/docker.key.erb",
        "DstPathEnd": "config/docker.key",
        "Path": "/tmp/tar-CmdExtractor221975061/templates/config/docker.key.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "bosh-helpers"
      },
      {
        "Name": "swarm"
      }
    ],
    "Properties": [
      {
        "Name": "log_level",
        "Description": "Log level (options: debug, info, warn, error, fatal, panic)",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "listen_address",
        "Description": "Listen address",
        "Default": "0.0.0.0",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "filters",
        "Description": "Filters to use [health, port, dependency, affinity, constraint]",
        "Default": [
          "health",
          "port",
          "dependency",
          "affinity",
          "constraint"
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "replication",
        "Description": "Enable Swarm manager replication",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.https_proxy",
        "Description": "HTTPS proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "strategy",
        "Description": "Placement strategy to use [spread, binpack, random]",
        "Default": "spread",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "api_enable_cors",
        "Description": "Enable CORS headers in the remote API",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "overcommit",
        "Description": "Overcommit to apply on resources",
        "Default": "0.5",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.no_proxy",
        "Description": "List of comma-separated hosts that Docker should skip connecting to the proxy",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "replication_ttl",
        "Description": "Leader lock release time on failure",
        "Default": "30s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "swarm.discovery_options",
        "Description": "Swarm discovery options",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "swarm.discovery",
        "Description": "Defaults to BOSH links. Override with swarm discovery string (ie: consul://\u003cip\u003e/\u003cpath\u003e, etcd://\u003cip1\u003e,\u003cip2\u003e/\u003cpath\u003e, zk://\u003cip1\u003e,\u003cip2\u003e/\u003cpath\u003e, [nodes://]\u003cip1\u003e,\u003cip2\u003e",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "debug",
        "Description": "Enable debug mode",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "port",
        "Description": "Listen port",
        "Default": "2375",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "advertise",
        "Description": "Address of the Swarm Manager joining the cluster. Other Swarm Manager(s) MUST be able to reach the Swarm Manager at this address.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "heartbeat",
        "Description": "Time in second between each heartbeat",
        "Default": "20s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "env.http_proxy",
        "Description": "HTTP proxy that Docker should use",
        "Default": null,
        "Example": null,
        "Examples": null
      }
    ]
  }
]