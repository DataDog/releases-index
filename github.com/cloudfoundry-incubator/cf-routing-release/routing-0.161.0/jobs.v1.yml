[
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor596294736/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "acceptance_tests",
    "Packages": [
      {
        "Name": "golang1.8"
      },
      {
        "Name": "acceptance_tests"
      },
      {
        "Name": "tcp_emitter"
      },
      {
        "Name": "rtr"
      },
      {
        "Name": "cf-cli"
      }
    ],
    "Properties": [
      {
        "Default": 4,
        "Description": "The number of parallel test executors to spawn. The larger the number the higher the stress on the system.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.nodes"
      },
      {
        "Default": [
          "10.244.14.2"
        ],
        "Description": "A list of addresses which will be checked for TCP connectivity and features",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.addresses"
      },
      {
        "Default": null,
        "Description": "Cloud Controller admin user",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.admin_user"
      },
      {
        "Default": false,
        "Description": "Flag for using HTTP when making application requests rather than the default HTTPS",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.use_http"
      },
      {
        "Default": null,
        "Description": "App domain that will be created",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.apps_domain"
      },
      {
        "Default": null,
        "Description": "Cloud Controller admin user's password",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.admin_password"
      },
      {
        "Default": null,
        "Description": "Password for UAA client for the tcp emitter.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.oauth_secret"
      },
      {
        "Default": null,
        "Description": "Domain for system components, e.g. bosh-lite.com",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.system_domain"
      },
      {
        "Default": [],
        "Description": "List of addresses of routers with `forward_client_cert` configured to `forward`. Used for testing `X-Forwarded-Client-Cert`.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.xfcc.forward"
      },
      {
        "Default": false,
        "Description": "Whether to pass the -v flag to router acceptance tests",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.verbose"
      },
      {
        "Default": null,
        "Description": "URL of the Cloud Controller API",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.api"
      },
      {
        "Default": null,
        "Description": "By default, users created during acceptance tests will be configured random names and random passwords. This property enables specifying the password for users created during the test.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.user_password"
      },
      {
        "Default": 120,
        "Description": "Default timeout for Ginkgo assertions. i.e. Timeout for `Eventually`",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.default_timeout"
      },
      {
        "Default": "default-tcp",
        "Description": "The name of the the router group associated with the default TCP Router",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.tcp_router_group"
      },
      {
        "Default": [],
        "Description": "List of addresses of routers with `forward_client_cert` configured to `always_forward`. Used for testing `X-Forwarded-Client-Cert`.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.xfcc.always_forward"
      },
      {
        "Default": false,
        "Description": "When true, does not verify TLS certificates for any API calls made during the test run",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.skip_ssl_validation"
      },
      {
        "Default": false,
        "Description": "When true, additionally runs the HTTP Routes test for Routing API",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.include_http_routes"
      },
      {
        "Default": [],
        "Description": "List of addresses of routers with `forward_client_cert` configured to `sanitize_set`. Used for testing `X-Forwarded-Client-Cert`.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.xfcc.sanitize_set"
      },
      {
        "Default": null,
        "Description": "Array of private keys and certs for client mTLS authentication. Each element in the array supports a chain of certificates and private keys in PEM format. Required if any of xfcc.always_forward, xfcc.forward, or xfcc.sanitize_set are non-empty arrays.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.xfcc.client_pem"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/run",
        "Path": "/mnt/tmp/tar-CmdExtractor596294736/templates/run.erb",
        "SrcPathEnd": "run.erb"
      },
      {
        "DstPathEnd": "bin/config.json",
        "Path": "/mnt/tmp/tar-CmdExtractor596294736/templates/config.json.erb",
        "SrcPathEnd": "config.json.erb"
      }
    ]
  },
  {
    "Description": "Gorouter maintains a dynamic routing table based on updates received from NATS and (when enabled) the Routing API. This routing table maps URLs to backends. The router finds the URL in the routing table that most closely matches the host header of the request and load balances across the associated backends.",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor618304514/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "gorouter",
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "gorouter"
      }
    ],
    "Properties": [
      {
        "Default": false,
        "Description": "Suspend pruning of routes when NATs is unavailable and maintain the\ncurrent routing table. WARNING: This strategy favors availability over\nconsistency and there is a possibility of routing to an incorrect\nendpoint in the case of port re-use. To be used with caution.\"\n",
        "Example": null,
        "Examples": null,
        "Name": "router.suspend_pruning_if_nats_unavailable"
      },
      {
        "Default": "",
        "Description": "To rotate keys, add your new key here and deploy. Then swap this key with the value of route_services_secret and deploy again.",
        "Example": null,
        "Examples": null,
        "Name": "router.route_services_secret_decrypt_only"
      },
      {
        "Default": null,
        "Description": "Password for NATS authentication",
        "Example": "natSpa55w0rd",
        "Examples": null,
        "Name": "nats.password"
      },
      {
        "Default": 22,
        "Description": "If the X-Vcap-Trace request header is set and has this value, trace headers are added to the response.",
        "Example": null,
        "Examples": null,
        "Name": "router.trace_key"
      },
      {
        "Default": 3457,
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Example": null,
        "Examples": null,
        "Name": "metron.port"
      },
      {
        "Default": 3000,
        "Description": "Port on which Routing API is running.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.port"
      },
      {
        "Default": "uaa.service.cf.internal",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.token_endpoint"
      },
      {
        "Default": "http://routing-api.service.cf.internal",
        "Description": "URL where the routing API can be reached internally",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.uri"
      },
      {
        "Default": 20,
        "Description": "On startup, the router will delay listening for requests by this duration to increase likelihood that it has a complete routing table before serving requests.\nThe router also broadcasts the same duration as a recommended interval to registering clients via NATS.\nThis must be less than 60, otherwise monit will mark the process as failed.\n",
        "Example": null,
        "Examples": null,
        "Name": "router.requested_route_registration_interval_in_seconds"
      },
      {
        "Default": "HTTP-Monitor/1.1",
        "Description": "DEPRECATED. Use /health endpoint on port specified by status.port. User-Agent for the health check agent (usually the Load Balancer).",
        "Example": "ELB-HealthChecker/1.0",
        "Examples": null,
        "Name": "router.healthcheck_user_agent"
      },
      {
        "Default": [],
        "Description": "An array of headers that access log events will be annotated with",
        "Example": null,
        "Examples": null,
        "Name": "router.extra_headers_to_log"
      },
      {
        "Default": false,
        "Description": "Enables setting X-Forwarded-Proto header if SSL termination happened upstream and incorrectly set the header value. When this property is set to true gorouter sets the header X-Forwarded-Proto to https. When this value set to false, gorouter set the header X-Forwarded-Proto to the protocol of the incoming request",
        "Example": null,
        "Examples": null,
        "Name": "router.force_forwarded_proto_https"
      },
      {
        "Default": null,
        "Description": "TCP port of NATS servers",
        "Example": 4222,
        "Examples": null,
        "Name": "nats.port"
      },
      {
        "Default": 20,
        "Description": "Time period in seconds to wait until declaring the router instance started after starting the listener socket. This allows an external load balancer time to register the instance as healthy.",
        "Example": null,
        "Examples": null,
        "Name": "router.load_balancer_healthy_threshold"
      },
      {
        "Default": "always_forward",
        "Description": "How to handle the x-forwarded-client-cert (XFCC) HTTP header. Possible values are:\n- always_forward: Always forward the XFCC header in the request, regardless of whether the client connection is mTLS.\nUse this value when your load balancer is forwarding the client certificate and requests are not forwarded to Gorouter over mTLS. In the case where the connection between load balancer and Gorouter is mTLS, the client certificate received by Gorouter in the TLS handshake will not be forwarded.\n- forward: Forward the XFCC header received from the client only when the client connection is mTLS.\nThis is a more secure version of `always_forward`. The client certificate received by Gorouter in the TLS handshake will not be forwarded.\n- sanitize_set: Strip any instances of XFCC headers from the client request.\nWhen the client connection is mTLS, the client certificate received by Gorouter in the TLS handshake will be forwarded in this header.\nValues will be base64 encoded PEM. Use this value when Gorouter is the first component to terminate TLS.\n",
        "Example": null,
        "Examples": null,
        "Name": "router.forwarded_client_cert"
      },
      {
        "Default": 0,
        "Description": "Maximum concurrent TCP connections per backend. When set to 0 there is no limit",
        "Example": null,
        "Examples": null,
        "Name": "router.backends.max_conns"
      },
      {
        "Default": 8080,
        "Description": "Port for the /health, /varz, and /routes endpoints.",
        "Example": null,
        "Examples": null,
        "Name": "router.status.port"
      },
      {
        "Default": "round-robin",
        "Description": "Algorithm used to distribute requests for a route across backends. Supported values are round-robin and least-connection",
        "Example": null,
        "Examples": null,
        "Name": "router.balancing_algorithm"
      },
      {
        "Default": 60,
        "Description": "Expiry time of a route service signature in seconds",
        "Example": null,
        "Examples": null,
        "Name": "router.route_services_timeout"
      },
      {
        "Default": "2M",
        "Description": "The size at which logrotate will decide to rotate the log file",
        "Example": null,
        "Examples": null,
        "Name": "router.logrotate.size"
      },
      {
        "Default": "TLSv1.2",
        "Description": "Minimum accepted version of TLS protocol. All versions above this will also be accepted. Valid values are TLSv1.0, TLSv1.1, and TLSv1.2.",
        "Example": null,
        "Examples": null,
        "Name": "router.min_tls_version"
      },
      {
        "Default": 0,
        "Description": "Maximum total idle keepalive connections to backends. When 0, support for keepalive connections is disabled. Maximum idle connections per backend is 100.",
        "Example": null,
        "Examples": null,
        "Name": "router.max_idle_connections"
      },
      {
        "Default": "consul.service.cf.internal",
        "Description": "Host to ping for confirmation of DNS resolution, only used when Routing API is enabled",
        "Example": null,
        "Examples": null,
        "Name": "router.dns_health_check_host"
      },
      {
        "Default": true,
        "Description": "Route Services are told where to send requests after processing using the X-CF-Forwarded-Url header. When this property is true, the scheme for this URL is https. When false, the scheme is http. As requests from Route Services to applications on CF transit load balancers and gorouter, disable this property for deployments that have TLS termination disabled.",
        "Example": null,
        "Examples": null,
        "Name": "router.route_services_recommend_https"
      },
      {
        "Default": 7,
        "Description": "The number of files that logrotate will keep around on the VM",
        "Example": null,
        "Examples": null,
        "Name": "router.logrotate.rotate"
      },
      {
        "Default": false,
        "Description": "Enables support for the popular PROXY protocol, allowing downstream load balancers that do not support HTTP to pass along client information.",
        "Example": null,
        "Examples": null,
        "Name": "router.enable_proxy"
      },
      {
        "Default": null,
        "Description": "IPs of each NATS cluster member",
        "Example": "- 192.168.50.123\n- 192.168.52.123\n",
        "Examples": null,
        "Name": "nats.machines"
      },
      {
        "Default": 20,
        "Description": "Delay in seconds after shut down is initiated before server stops listening.\nDuring this time the server will reject requests to the /health endpoint.\nThis accommodates requests forwarded by a load balancer until it considers the router unhealthy.\n",
        "Example": null,
        "Examples": null,
        "Name": "router.drain_wait"
      },
      {
        "Default": false,
        "Description": "Skip validation of TLS certificates received from route services and UAA",
        "Example": null,
        "Examples": null,
        "Name": "router.ssl_skip_validation"
      },
      {
        "Default": null,
        "Description": "User name for NATS authentication",
        "Example": "nats",
        "Examples": null,
        "Name": "nats.user"
      },
      {
        "Default": 900,
        "Description": "Timeout in seconds for Router -\u003e Endpoint roundtrip.",
        "Example": null,
        "Examples": null,
        "Name": "request_timeout_in_seconds"
      },
      {
        "Default": "router-status",
        "Description": "Username for HTTP basic auth to the /varz and /routes endpoints.",
        "Example": null,
        "Examples": null,
        "Name": "router.status.user"
      },
      {
        "Default": false,
        "Description": "Set secure flag on http cookies",
        "Example": null,
        "Examples": null,
        "Name": "router.secure_cookies"
      },
      {
        "Default": null,
        "Description": "Array of private keys and certs for TLS termination. Each element in the array supports a chain of certificates and private keys in PEM format. Required if router.enable_ssl is true.",
        "Example": null,
        "Examples": null,
        "Name": "router.tls_pem"
      },
      {
        "Default": false,
        "Description": "When false, Routing API requires OAuth tokens for authentication.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.auth_disabled"
      },
      {
        "Default": false,
        "Description": "When enabled, GoRouter will fetch HTTP routes from the Routing API in addition to routes obtained via NATS.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.enabled"
      },
      {
        "Default": "info",
        "Description": "Log level for router",
        "Example": null,
        "Examples": null,
        "Name": "router.logging_level"
      },
      {
        "Default": [],
        "Description": "Routes with these isolation segments will be registered. Used in combination with routing_table_sharding_mode.",
        "Example": null,
        "Examples": null,
        "Name": "router.isolation_segments"
      },
      {
        "Default": "all",
        "Description": "all: all routes will be registered.\nshared-and-segments: both routes for the configured isolation segments and those that do not have an isolation segment specified will be registered.\nsegments: only routes for the configured isolation segments will be registered.\n",
        "Example": null,
        "Examples": null,
        "Name": "router.routing_table_sharding_mode"
      },
      {
        "Default": false,
        "Description": "Enables streaming of access log to syslog.",
        "Example": null,
        "Examples": null,
        "Name": "router.enable_access_log_streaming"
      },
      {
        "Default": 80,
        "Description": "Listening Port for Router.",
        "Example": null,
        "Examples": null,
        "Name": "router.port"
      },
      {
        "Default": "ECDHE-RSA-AES128-GCM-SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Description": "An ordered, colon-delimited list of golang supported TLS cipher suites in OpenSSL or RFC format. The selected cipher suite will be negotiated according to the order of this list during a TLS handshake. See https://github.com/golang/go/blob/release-branch.go1.7/src/crypto/tls/cipher_suites.go#L269-L285 for golang supported cipher suites. The first four of these are supported for TLSv1.0/1.1 only. See https://testssl.sh/openssl-rfc.mapping.html for a mapping of OpenSSL and RFC suite names.",
        "Example": null,
        "Examples": null,
        "Name": "router.cipher_suites"
      },
      {
        "Default": "",
        "Description": "Support for route services is disabled when no value is configured. A robust passphrase is recommended.",
        "Example": null,
        "Examples": null,
        "Name": "router.route_services_secret"
      },
      {
        "Default": false,
        "Description": "Enables the addition of the X-B3-Trace-Id header to incoming requests. If the header already exists on the incoming request, it will not be overwritten.",
        "Example": null,
        "Examples": null,
        "Name": "router.tracing.enable_zipkin"
      },
      {
        "Default": null,
        "Description": "Password for UAA client for the gorouter.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.clients.gorouter.secret"
      },
      {
        "Default": -1,
        "Description": "Number of CPUs to utilize, the default (-1) will equal the number of available CPUs",
        "Example": null,
        "Examples": null,
        "Name": "router.number_of_cpus"
      },
      {
        "Default": null,
        "Description": "Password for HTTP basic auth to the /varz and /routes endpoints.",
        "Example": null,
        "Examples": null,
        "Name": "router.status.password"
      },
      {
        "Default": false,
        "Description": "Disables the http listener on port specified by router.port. This cannot be set to true if enable_ssl is false.",
        "Example": null,
        "Examples": null,
        "Name": "router.disable_http"
      },
      {
        "Default": 5,
        "Description": "The frequency in minutes which logrotate will rotate VM logs",
        "Example": null,
        "Examples": null,
        "Name": "router.logrotate.freq_min"
      },
      {
        "Default": null,
        "Description": "Secure Port on which UAA is running.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.ssl.port"
      },
      {
        "Default": false,
        "Description": "When enabled, Gorouter will listen on port 443 and terminate TLS for requests received on this port.",
        "Example": null,
        "Examples": null,
        "Name": "router.enable_ssl"
      },
      {
        "Default": "",
        "Description": "Certificate authority for communication between clients and uaa.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.ca_cert"
      },
      {
        "Default": [],
        "Description": "Array of additional certificate authorities used to validate certificates provided by remote systems during (m)TLS handshakes.",
        "Example": null,
        "Examples": null,
        "Name": "router.ca_certs"
      },
      {
        "Default": 0,
        "Description": "",
        "Example": null,
        "Examples": null,
        "Name": "router.offset"
      },
      {
        "Default": "127.0.0.1:17002",
        "Description": "Address at which to serve debug info",
        "Example": null,
        "Examples": null,
        "Name": "router.debug_address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/logrotate.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/logrotate.conf.erb",
        "SrcPathEnd": "logrotate.conf.erb"
      },
      {
        "DstPathEnd": "bin/gorouter_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/gorouter_ctl",
        "SrcPathEnd": "gorouter_ctl"
      },
      {
        "DstPathEnd": "bin/post-start",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/post-start.erb",
        "SrcPathEnd": "post-start.erb"
      },
      {
        "DstPathEnd": "bin/run_gorouter",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/run_gorouter.erb",
        "SrcPathEnd": "run_gorouter.erb"
      },
      {
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/dns_health_check.erb",
        "SrcPathEnd": "dns_health_check.erb"
      },
      {
        "DstPathEnd": "bin/publish_to_nats",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/publish_to_nats.erb",
        "SrcPathEnd": "publish_to_nats.erb"
      },
      {
        "DstPathEnd": "config/gorouter_logrotate.cron",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/gorouter_logrotate.cron.erb",
        "SrcPathEnd": "gorouter_logrotate.cron.erb"
      },
      {
        "DstPathEnd": "config/gorouter.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/gorouter.yml.erb",
        "SrcPathEnd": "gorouter.yml.erb"
      },
      {
        "DstPathEnd": "bin/drain",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/drain",
        "SrcPathEnd": "drain"
      },
      {
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor618304514/templates/uaa_ca.crt.erb",
        "SrcPathEnd": "uaa_ca.crt.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor074201220/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "routing-api",
    "Packages": [
      {
        "Name": "routing-api"
      },
      {
        "Name": "routing_utils"
      }
    ],
    "Properties": [
      {
        "Default": "120s",
        "Description": "String representing the maximum TTL a client can request for route registration.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.max_ttl"
      },
      {
        "Default": false,
        "Description": "Disables UAA authentication",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.auth_disabled"
      },
      {
        "Default": "consul.service.cf.internal",
        "Description": "Host to ping for confirmation of DNS resolution",
        "Example": null,
        "Examples": null,
        "Name": "dns_health_check_host"
      },
      {
        "Default": null,
        "Description": "Host for SQL database",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.sqldb.host"
      },
      {
        "Default": null,
        "Description": "Type of SQL database",
        "Example": "mysql",
        "Examples": null,
        "Name": "routing_api.sqldb.type"
      },
      {
        "Default": "",
        "Description": "Certificate authority for communication between clients and UAA.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.ca_cert"
      },
      {
        "Default": "5s",
        "Description": "interval to wait before retrying a failed lock acquisition",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.lock_retry_interval"
      },
      {
        "Default": false,
        "Description": "Skip TLS verification when talking to UAA",
        "Example": null,
        "Examples": null,
        "Name": "skip_ssl_validation"
      },
      {
        "Default": 3457,
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Example": null,
        "Examples": null,
        "Name": "metron.port"
      },
      {
        "Default": "",
        "Description": "Hostname and port of the Locket server. Used to obtain a lock so only one instance of Routing API is active at a time. Requires Locket, which is not deployed with cf-release by default.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.locket.api_location"
      },
      {
        "Default": false,
        "Description": "When false, Routing API will obtain a lock from both Consul and Locket. When true, Routing API will obtain the lock from Locket only. Requires locket.api_location to be set and Locket, which is not deployed with cf-release by default.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.skip_consul_lock"
      },
      {
        "Default": "",
        "Description": "Client key for communication between clients and etcd",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.etcd.client_key"
      },
      {
        "Default": null,
        "Description": "Password used for connecting to SQL database",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.sqldb.password"
      },
      {
        "Default": null,
        "Description": "Database name for routing api",
        "Example": "routing_api",
        "Examples": null,
        "Name": "routing_api.sqldb.schema"
      },
      {
        "Default": null,
        "Description": "Domain reserved for CF operator; base URL where the UAA, Cloud Controller, and other non-user apps listen",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.system_domain"
      },
      {
        "Default": "info",
        "Description": "Log level",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.log_level"
      },
      {
        "Default": null,
        "Description": "Port on which UAA is listening for TLS connections. This is required for obtaining a key to verify client OAuth tokens.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.tls_port"
      },
      {
        "Default": "10s",
        "Description": "TTL for service lock",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.lock_ttl"
      },
      {
        "Default": "",
        "Description": "Client cert for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.locket.client_cert"
      },
      {
        "Default": "",
        "Description": "Client key for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.locket.client_key"
      },
      {
        "Default": "localhost:8125",
        "Description": "The endpoint for the statsd server used to translate the following metrics from statsd to dropsonde: total_http_subscriptions, total_http_routes, total_tcp_subscriptions, total_tcp_routes, total_token_errors, key_refresh_events.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.statsd_endpoint"
      },
      {
        "Default": null,
        "Description": "Username used for connecting to SQL database",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.sqldb.username"
      },
      {
        "Default": null,
        "Description": "Port on which SQL database is listening",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.sqldb.port"
      },
      {
        "Default": [],
        "Description": "Array of router groups that will be seeded into routing_api database. Once some value is included with a deploy, subsequent changes to this property will be ignored. TCP Routing requires a router group of type: tcp.",
        "Example": "- name: default-tcp\n  reservable_ports: 1024-10000,12000\n  type: tcp\n",
        "Examples": null,
        "Name": "routing_api.router_groups"
      },
      {
        "Default": false,
        "Description": "etcd requires client to communicate via TLS",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.etcd.require_ssl"
      },
      {
        "Default": "http://127.0.0.1:8500",
        "Description": "comma-separated list of consul server URLs (scheme://ip:port)",
        "Example": null,
        "Examples": null,
        "Name": "consul.servers"
      },
      {
        "Default": null,
        "Description": "When require_ssl:true, this must be an array of the internal DNS name for the etcd cluster. When require_ssl:false this must be an array of either the DNS name or the IP addresses of the etcd servers.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.etcd.servers"
      },
      {
        "Default": "",
        "Description": "Certificate authority used to sign cert hosted by etcd",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.etcd.ca_cert"
      },
      {
        "Default": "300ms",
        "Description": "Buffered statsd client flush interval",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.statsd_client_flush_interval"
      },
      {
        "Default": 3000,
        "Description": "Port on which Routing API is running. If this is changed and routing_api.enabled:true in cf-release, it will break management of routes and domains until routing_api.port is updated in cf-release.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.port"
      },
      {
        "Default": "",
        "Description": "Client certificate for communication between clients and etcd",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.etcd.client_cert"
      },
      {
        "Default": "uaa.service.cf.internal",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.token_endpoint"
      },
      {
        "Default": "",
        "Description": "CA cert for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.locket.ca_cert"
      },
      {
        "Default": "30s",
        "Description": "String representing interval for reporting the following metrics: total_http_subscriptions, total_http_routes, total_tcp_subscriptions, total_tcp_routes, total_token_errors, key_refresh_events. Units: ms, s, m h",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.metrics_reporting_interval"
      },
      {
        "Default": "127.0.0.1:17002",
        "Description": "Address at which to serve debug info",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.debug_address"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/routing-api_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/routing-api_ctl.erb",
        "SrcPathEnd": "routing-api_ctl.erb"
      },
      {
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/uaa_ca.crt.erb",
        "SrcPathEnd": "uaa_ca.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/locket/client.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/locket_client.crt.erb",
        "SrcPathEnd": "locket_client.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/locket/client.key",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/locket_client.key.erb",
        "SrcPathEnd": "locket_client.key.erb"
      },
      {
        "DstPathEnd": "config/routing-api.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/routing-api.yml.erb",
        "SrcPathEnd": "routing-api.yml.erb"
      },
      {
        "DstPathEnd": "config/certs/locket/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/locket_ca.crt.erb",
        "SrcPathEnd": "locket_ca.crt.erb"
      },
      {
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/dns_health_check.erb",
        "SrcPathEnd": "dns_health_check.erb"
      },
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/pre-start",
        "SrcPathEnd": "pre-start"
      },
      {
        "DstPathEnd": "config/certs/etcd/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/etcd_ca.crt.erb",
        "SrcPathEnd": "etcd_ca.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/etcd/client.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/etcd_client.crt.erb",
        "SrcPathEnd": "etcd_client.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/etcd/client.key",
        "Path": "/mnt/tmp/tar-CmdExtractor074201220/templates/etcd_client.key.erb",
        "SrcPathEnd": "etcd_client.key.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor443979862/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "tcp_emitter",
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "tcp_emitter"
      },
      {
        "Name": "tcp_router"
      }
    ],
    "Properties": [
      {
        "Default": "3000",
        "Description": "Port of routing api",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.port"
      },
      {
        "Default": false,
        "Description": "auth disabled setting of routing api",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.auth_disabled"
      },
      {
        "Default": null,
        "Description": "Port on which UAA is listening for TLS connections. This is required for obtaining a OAuth token for Routing API.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.tls_port"
      },
      {
        "Default": "20s",
        "Description": "Interval to sync with BBS to get latest route information.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.sync_interval"
      },
      {
        "Default": "bbs.service.cf.internal:8889",
        "Description": "Diego BBS Server hostname. Do not include the scheme; this will be configured automatically based on the value of property bbs.require_ssl.",
        "Example": null,
        "Examples": null,
        "Name": "bbs.api_location"
      },
      {
        "Default": "consul.service.cf.internal",
        "Description": "Host to ping for confirmation of DNS resolution",
        "Example": null,
        "Examples": null,
        "Name": "dns_health_check_host"
      },
      {
        "Default": null,
        "Description": "PEM-encoded client certificate",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.bbs.client_cert"
      },
      {
        "Default": "http://routing-api.service.cf.internal",
        "Description": "URL where the routing API can be reached internally",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.uri"
      },
      {
        "Default": false,
        "Description": "Skip TLS verification when talking to UAA",
        "Example": null,
        "Examples": null,
        "Name": "skip_ssl_validation"
      },
      {
        "Default": "120s",
        "Description": "TTL used for routes registered with Routing API.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.route_ttl"
      },
      {
        "Default": "info",
        "Description": "Log level",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.log_level"
      },
      {
        "Default": "10s",
        "Description": "TTL for service lock",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.lock_ttl"
      },
      {
        "Default": null,
        "Description": "PEM-encoded CA certificate used to sign TLS certificate hosted by Diego BBS.",
        "Example": null,
        "Examples": null,
        "Name": "bbs.ca_cert"
      },
      {
        "Default": "http://127.0.0.1:8500",
        "Description": "comma-separated list of consul server URLs (scheme://ip:port)",
        "Example": null,
        "Examples": null,
        "Name": "consul.servers"
      },
      {
        "Default": "127.0.0.1:17002",
        "Description": "Address at which to serve debug info",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.debug_address"
      },
      {
        "Default": "5s",
        "Description": "interval to wait before retrying a failed lock acquisition",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.lock_retry_interval"
      },
      {
        "Default": "uaa.service.cf.internal",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.token_endpoint"
      },
      {
        "Default": true,
        "Description": "Enables mutual-TLS communication with Diego BBS.",
        "Example": null,
        "Examples": null,
        "Name": "bbs.require_ssl"
      },
      {
        "Default": 3457,
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Example": null,
        "Examples": null,
        "Name": "metron.port"
      },
      {
        "Default": "",
        "Description": "Certificate authority for communication between clients and uaa.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.ca_cert"
      },
      {
        "Default": null,
        "Description": "PEM-encoded client key",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.bbs.client_key"
      },
      {
        "Default": null,
        "Description": "Password for UAA client for tcp emitter.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.oauth_secret"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/certs/bbs/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/bbs_ca.crt.erb",
        "SrcPathEnd": "bbs_ca.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/bbs/client.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/bbs_client.crt.erb",
        "SrcPathEnd": "bbs_client.crt.erb"
      },
      {
        "DstPathEnd": "config/certs/bbs/client.key",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/bbs_client.key.erb",
        "SrcPathEnd": "bbs_client.key.erb"
      },
      {
        "DstPathEnd": "config/tcp_emitter.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/tcp_emitter.yml.erb",
        "SrcPathEnd": "tcp_emitter.yml.erb"
      },
      {
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/uaa_ca.crt.erb",
        "SrcPathEnd": "uaa_ca.crt.erb"
      },
      {
        "DstPathEnd": "bin/tcp_emitter_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/tcp_emitter_ctl.erb",
        "SrcPathEnd": "tcp_emitter_ctl.erb"
      },
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor443979862/templates/pre-start",
        "SrcPathEnd": "pre-start"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor900682232/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "tcp_router",
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "tcp_router"
      },
      {
        "Name": "haproxy"
      }
    ],
    "Properties": [
      {
        "Default": "info",
        "Description": "Log level",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.log_level"
      },
      {
        "Default": false,
        "Description": "Disables UAA authentication",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.auth_disabled"
      },
      {
        "Default": 300,
        "Description": "Server and client timeouts in seconds",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.request_timeout_in_seconds"
      },
      {
        "Default": [],
        "Description": "Routes with these isolation segments will be registered. Used in combination with routing_table_sharding_mode.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.isolation_segments"
      },
      {
        "Default": "uaa.service.cf.internal",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.token_endpoint"
      },
      {
        "Default": "consul.service.cf.internal",
        "Description": "Host to ping for confirmation of DNS resolution",
        "Example": null,
        "Examples": null,
        "Name": "dns_health_check_host"
      },
      {
        "Default": 80,
        "Description": "Load balancer in front of TCP Routers should be configured to check the health of TCP Router instances by establishing a TCP connection on this port",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.health_check_port"
      },
      {
        "Default": "1m",
        "Description": "String representing interval for collecting statistic metrics from tcp proxy. Units: ms, s, m h",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.tcp_stats_collection_interval"
      },
      {
        "Default": null,
        "Description": "OAuth client secret used to obtain token for Routing API from UAA.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.oauth_secret"
      },
      {
        "Default": "http://routing-api.service.cf.internal",
        "Description": "URL where the routing API can be reached internally",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.uri"
      },
      {
        "Default": "3000",
        "Description": "Port of routing api",
        "Example": null,
        "Examples": null,
        "Name": "routing_api.port"
      },
      {
        "Default": "127.0.0.1:17002",
        "Description": "Address at which to serve debug info",
        "Example": null,
        "Examples": null,
        "Name": "tcp_router.debug_address"
      },
      {
        "Default": false,
        "Description": "Skip TLS verification when talking to UAA",
        "Example": null,
        "Examples": null,
        "Name": "skip_ssl_validation"
      },
      {
        "Default": 3457,
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Example": null,
        "Examples": null,
        "Name": "metron.port"
      },
      {
        "Default": "",
        "Description": "Certificate authority for communication between clients and uaa.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.ca_cert"
      },
      {
        "Default": null,
        "Description": "Port on which UAA is listening for TLS connections. This is required for obtaining an OAuth token for Routing API.",
        "Example": null,
        "Examples": null,
        "Name": "uaa.tls_port"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/tcp_router.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/tcp_router.yml.erb",
        "SrcPathEnd": "tcp_router.yml.erb"
      },
      {
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/uaa_ca.crt.erb",
        "SrcPathEnd": "uaa_ca.crt.erb"
      },
      {
        "DstPathEnd": "config/haproxy.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/haproxy.conf.erb",
        "SrcPathEnd": "haproxy.conf.erb"
      },
      {
        "DstPathEnd": "config/haproxy.conf.template",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/haproxy.conf.template.erb",
        "SrcPathEnd": "haproxy.conf.template.erb"
      },
      {
        "DstPathEnd": "bin/tcp_router_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/tcp_router_ctl.erb",
        "SrcPathEnd": "tcp_router_ctl.erb"
      },
      {
        "DstPathEnd": "bin/haproxy_reloader",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/haproxy_reloader",
        "SrcPathEnd": "haproxy_reloader"
      },
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor900682232/templates/pre-start",
        "SrcPathEnd": "pre-start"
      }
    ]
  },
  {
    "Description": "Used for registering routes",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor830319082/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "route_registrar",
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "route_registrar"
      }
    ],
    "Properties": [
      {
        "Default": null,
        "Description": "Password for NATS authentication",
        "Example": "natSpa55w0rd",
        "Examples": null,
        "Name": "nats.password"
      },
      {
        "Default": null,
        "Description": "* Array of hashes determining which routes will be registered.\n* Each hash should have 'port', 'uris', 'registration_interval'\n  and 'name' keys.\n* 'registration_interval' is the delay between\n  routing updates. It must be a time duration represented as a string\n  (e.g. \"10s\").\n  It must parse to a positive time duration i.e. \"-5s\" is not permitted.\n* Additionally, the 'tags', 'health_check', and 'prepend_instance_index' keys are optional.\n* 'uris' is an array of URIs to register for the 'port'.\n* 'tags' are included in metrics that gorouter emits to support filtering.\n* 'health_check' is a hash which should have 'name' and 'script_path'.\n* 'health_check.timeout' is optional.\n  If the health_check timeout is not provided, it defaults to half of the\n  value of `registration_interval`.\n  If it is provided it must be a time duration represented as a string (e.g. \"10s\"),\n  and less than the value of `registration_interval`.\n  It must parse to a positive time duration i.e. \"-5s\" is not permitted.\n* if the healthcheck is not configured, the route is continually registered.\n* if the healthcheck script exits with success, the route is registered.\n* if the healthcheck script exits with error, the route is unregistered.\n* if a timeout is configured, the healthcheck script must exit within the timeout,\n  otherwise it is terminated (with `SIGKILL`) and the route is unregistered.\n* 'prepend_instance_index' is a boolean. When set to true the values in 'uris'\n  will be prepended with the instance index.\n  e.g. 'some-uri.system-domain.com' will become '0-some-uri.system-domain.com' on the instance\n  with index 0, and '2-some-url.system-domain.com' on the instance with index 2.\n  When this value is enabled, each instance will register its own, unique, set of uris.\n  To additionally continue to register these original uris, create another route\n  with the same uris and set 'prepend_instance_index' to false (or omit the key entirely).\n",
        "Example": "- name: my-service\n  registration_interval: 20s\n  port: 12345\n  tags:\n    component: my-service\n    env: production\n  uris:\n    - my-service.system-domain.com\n    - *.my-service.system-domain.com\n  health_check:\n    name: my-service-health_check\n    script_path: /path/to/script\n    timeout: 5s\n- name: my-debug-endpoint\n  port: 12346\n  uris:\n    - my-service.system-domain.com/debug\n- name: cf-mysql-proxy-api-per-instance\n  port: 8080\n  uris:\n  - proxy-cf-mysql.system.domain\n  prepend_instance_index: true\n- name: cf-mysql-proxy-api\n  port: 8081\n  uris:\n  - proxy-cf-mysql.system.domain\n",
        "Examples": null,
        "Name": "route_registrar.routes"
      },
      {
        "Default": null,
        "Description": "IPs of each NATS cluster member",
        "Example": "- 192.168.50.123\n- 192.168.52.123\n",
        "Examples": null,
        "Name": "nats.machines"
      },
      {
        "Default": null,
        "Description": "TCP port of NATS servers",
        "Example": 4222,
        "Examples": null,
        "Name": "nats.port"
      },
      {
        "Default": null,
        "Description": "User name for NATS authentication",
        "Example": "nats",
        "Examples": null,
        "Name": "nats.user"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor830319082/templates/pre-start",
        "SrcPathEnd": "pre-start"
      },
      {
        "DstPathEnd": "bin/route_registrar_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor830319082/templates/route_registrar_ctl.erb",
        "SrcPathEnd": "route_registrar_ctl.erb"
      },
      {
        "DstPathEnd": "config/registrar_settings.yml",
        "Path": "/mnt/tmp/tar-CmdExtractor830319082/templates/registrar_settings.yml.erb",
        "SrcPathEnd": "registrar_settings.yml.erb"
      }
    ]
  },
  {
    "Description": "",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor001520300/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "smoke_tests",
    "Packages": [
      {
        "Name": "golang1.8"
      },
      {
        "Name": "acceptance_tests"
      },
      {
        "Name": "cf-cli"
      }
    ],
    "Properties": [
      {
        "Default": "",
        "Description": "TCP app domain to use for testing. By default, a temporary domain will be created but tests will use the IP address of the TCP Router",
        "Example": null,
        "Examples": null,
        "Name": "smoke_tests.tcp_apps_domain"
      },
      {
        "Default": false,
        "Description": "When true, does not verify TLS certificates for any API calls made during the test run",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.skip_ssl_validation"
      },
      {
        "Default": null,
        "Description": "App domain that will be created",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.apps_domain"
      },
      {
        "Default": null,
        "Description": "Domain for system components, e.g. bosh-lite.com",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.system_domain"
      },
      {
        "Default": null,
        "Description": "Password for UAA client for the tcp emitter.",
        "Example": null,
        "Examples": null,
        "Name": "tcp_emitter.oauth_secret"
      },
      {
        "Default": null,
        "Description": "By default, users created during acceptance tests will be configured random names and random passwords. This property enables specifying the password for users created during the test.",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.user_password"
      },
      {
        "Default": null,
        "Description": "URL of the Cloud Controller API",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.api"
      },
      {
        "Default": null,
        "Description": "Cloud Controller admin user",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.admin_user"
      },
      {
        "Default": false,
        "Description": "Flag for using HTTP when making application requests rather than the default HTTPS",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.use_http"
      },
      {
        "Default": 120,
        "Description": "Default timeout for Ginkgo assertions. i.e. Timeout for `Eventually`",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.default_timeout"
      },
      {
        "Default": "default-tcp",
        "Description": "The name of the the router group associated with the default TCP Router",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.tcp_router_group"
      },
      {
        "Default": false,
        "Description": "Whether to pass the -v flag to router acceptance tests",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.verbose"
      },
      {
        "Default": [
          "10.244.14.2"
        ],
        "Description": "A list of addresses which will be checked for TCP connectivity and features",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.addresses"
      },
      {
        "Default": null,
        "Description": "Cloud Controller admin user's password",
        "Example": null,
        "Examples": null,
        "Name": "acceptance_tests.cloud_controller.admin_password"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "bin/config.json",
        "Path": "/mnt/tmp/tar-CmdExtractor001520300/templates/config.json.erb",
        "SrcPathEnd": "config.json.erb"
      },
      {
        "DstPathEnd": "bin/run",
        "Path": "/mnt/tmp/tar-CmdExtractor001520300/templates/run.erb",
        "SrcPathEnd": "run.erb"
      }
    ]
  }
]