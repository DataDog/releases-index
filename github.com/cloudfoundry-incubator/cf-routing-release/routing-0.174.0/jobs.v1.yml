[
  {
    "Name": "acceptance_tests",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor845135202/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.erb",
        "DstPathEnd": "bin/run",
        "Path": "/tmp/tar-CmdExtractor845135202/templates/run.erb"
      },
      {
        "SrcPathEnd": "config.json.erb",
        "DstPathEnd": "bin/config.json",
        "Path": "/tmp/tar-CmdExtractor845135202/templates/config.json.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "golang-1.9-linux"
      },
      {
        "Name": "acceptance_tests"
      },
      {
        "Name": "rtr"
      },
      {
        "Name": "cf-cli"
      }
    ],
    "Properties": [
      {
        "Name": "acceptance_tests.cloud_controller.apps_domain",
        "Description": "App domain that will be created",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.admin_password",
        "Description": "Cloud Controller admin user's password",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.user_password",
        "Description": "By default, users created during acceptance tests will be configured random names and random passwords. This property enables specifying the password for users created during the test.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.nodes",
        "Description": "The number of parallel test executors to spawn. The larger the number the higher the stress on the system.",
        "Default": 4,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.system_domain",
        "Description": "Domain for system components, e.g. bosh-lite.com",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.include_http_routes",
        "Description": "When true, additionally runs the HTTP Routes test for Routing API",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.default_timeout",
        "Description": "Default timeout for Ginkgo assertions. i.e. Timeout for `Eventually`",
        "Default": 120,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.tcp_router_group",
        "Description": "The name of the the router group associated with the default TCP Router",
        "Default": "default-tcp",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.verbose",
        "Description": "Whether to pass the -v flag to router acceptance tests",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.addresses",
        "Description": "A list of addresses which will be checked for TCP connectivity and features",
        "Default": [
          "10.244.14.2"
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.skip_ssl_validation",
        "Description": "When true, does not verify TLS certificates for any API calls made during the test run",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.api",
        "Description": "URL of the Cloud Controller API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_emitter.oauth_secret",
        "Description": "Password for UAA client for the tcp emitter.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.admin_user",
        "Description": "Cloud Controller admin user",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.use_http",
        "Description": "Flag for using HTTP when making application requests rather than the default HTTPS",
        "Default": false,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "bbr-routingdb",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor439351012/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "backup.erb",
        "DstPathEnd": "bin/bbr/backup",
        "Path": "/tmp/tar-CmdExtractor439351012/templates/backup.erb"
      },
      {
        "SrcPathEnd": "restore.erb",
        "DstPathEnd": "bin/bbr/restore",
        "Path": "/tmp/tar-CmdExtractor439351012/templates/restore.erb"
      },
      {
        "SrcPathEnd": "config.json.erb",
        "DstPathEnd": "config/config.json",
        "Path": "/tmp/tar-CmdExtractor439351012/templates/config.json.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": null,
    "Properties": null
  },
  {
    "Name": "gorouter",
    "Description": "Gorouter maintains a dynamic routing table based on updates received from NATS and (when enabled) the Routing API. This routing table maps URLs to backends. The router finds the URL in the routing table that most closely matches the host header of the request and load balances across the associated backends.",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor968926646/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "publish_to_nats.erb",
        "DstPathEnd": "bin/publish_to_nats",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/publish_to_nats.erb"
      },
      {
        "SrcPathEnd": "gorouter.yml.erb",
        "DstPathEnd": "config/gorouter.yml",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/gorouter.yml.erb"
      },
      {
        "SrcPathEnd": "drain",
        "DstPathEnd": "bin/drain",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/drain"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/uaa_ca.crt.erb"
      },
      {
        "SrcPathEnd": "gorouter_ctl",
        "DstPathEnd": "bin/gorouter_ctl",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/gorouter_ctl"
      },
      {
        "SrcPathEnd": "post-start.erb",
        "DstPathEnd": "bin/post-start",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/post-start.erb"
      },
      {
        "SrcPathEnd": "run_gorouter.erb",
        "DstPathEnd": "bin/run_gorouter",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/run_gorouter.erb"
      },
      {
        "SrcPathEnd": "dns_health_check.erb",
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/tmp/tar-CmdExtractor968926646/templates/dns_health_check.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "gorouter"
      }
    ],
    "Properties": [
      {
        "Name": "router.client_cert_validation",
        "Description": "none - Gorouter will not request client certificates in TLS handshakes, and will ignore them if presented. Incompatible with `forwarded_client_cert: forward` or `sanitize_set`.\nrequest - Gorouter will request client certificates in TLS handshakes, and will validate them when presented, but will not require them.\nrequire - Gorouter will fail a TLS handshake if the client does not provide a certificate signed by a CA it trusts. For use with Gorouters responsible for app domains only; incompatible with Gorouters responsible for the CF system domain as not all clients provide client certificates.\n",
        "Default": "request",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.enabled",
        "Description": "When enabled, GoRouter will fetch HTTP routes from the Routing API in addition to routes obtained via NATS.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.requested_route_registration_interval_in_seconds",
        "Description": "On startup, the router will delay listening for requests by this duration to increase likelihood that it has a complete routing table before serving requests.\nThe router also broadcasts the same duration as a recommended interval to registering clients via NATS.\nThis must be less than 60, otherwise monit will mark the process as failed.\n",
        "Default": 20,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.force_forwarded_proto_https",
        "Description": "Enables setting X-Forwarded-Proto header if SSL termination happened upstream and incorrectly set the header value. When this property is set to true gorouter sets the header X-Forwarded-Proto to https. When this value set to false, gorouter set the header X-Forwarded-Proto to the protocol of the incoming request",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.backends.enable_tls",
        "Description": "(optional, boolean) By default, Gorouter forwards requests to backends over unencrypted connections and will ignore routes registered with a TLS port, preferring a non-tls port when both are present. When this property is set to true, Gorouter will connect to backends using TLS when routes are registered with a TLS port, ignoring non-tls ports when both are present.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.isolation_segments",
        "Description": "Routes with these isolation segments will be registered. Used in combination with routing_table_sharding_mode.",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.offset",
        "Description": "",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.uri",
        "Description": "URL where the routing API can be reached internally",
        "Default": "http://routing-api.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.drain_wait",
        "Description": "Delay in seconds after shut down is initiated before server stops listening.\nDuring this time the server will reject requests to the /health endpoint.\nThis accommodates requests forwarded by a load balancer until it considers the router unhealthy.\n",
        "Default": 20,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.cipher_suites",
        "Description": "An ordered, colon-delimited list of golang supported TLS cipher suites in OpenSSL or RFC format. The selected cipher suite will be negotiated according to the order of this list during a TLS handshake. See https://github.com/golang/go/blob/release-branch.go1.9/src/crypto/tls/cipher_suites.go#L369-L390 for golang supported cipher suites. The first four of these are supported for TLSv1.0/1.1 only. See https://www.openssl.org/docs/man1.1.0/apps/ciphers.html for a mapping of OpenSSL and RFC suite names.",
        "Default": "ECDHE-RSA-AES128-GCM-SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ssl.port",
        "Description": "Secure Port on which UAA is running.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.port",
        "Description": "Port on which Routing API is running.",
        "Default": 3000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.status.port",
        "Description": "Port for the /health, /varz, and /routes endpoints.",
        "Default": 8080,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "request_timeout_in_seconds",
        "Description": "Timeout in seconds for Router -\u003e Endpoint roundtrip.",
        "Default": 900,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.token_endpoint",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.backends.cert_chain",
        "Description": "Certificate chain used for client authentication to TLS-registered backends.  In PEM format.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.backends.max_conns",
        "Description": "Maximum concurrent TCP connections per backend. When set to 0 there is no limit",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "nats.user",
        "Description": "User name for NATS authentication",
        "Default": null,
        "Example": "nats",
        "Examples": null
      },
      {
        "Name": "router.trace_key",
        "Description": "If the X-Vcap-Trace request header is set and has this value, trace headers are added to the response.",
        "Default": 22,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.clients.gorouter.secret",
        "Description": "Password for UAA client for the gorouter.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.suspend_pruning_if_nats_unavailable",
        "Description": "Suspend pruning of routes when NATs is unavailable and maintain the\ncurrent routing table. WARNING: This strategy favors availability over\nconsistency and there is a possibility of routing to an incorrect\nendpoint in the case of port re-use. To be used with caution.\"\n",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.balancing_algorithm",
        "Description": "Algorithm used to distribute requests for a route across backends. Supported values are round-robin and least-connection",
        "Default": "round-robin",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "nats.machines",
        "Description": "IPs of each NATS cluster member",
        "Default": null,
        "Example": "- 192.168.50.123\n- 192.168.52.123\n",
        "Examples": null
      },
      {
        "Name": "routing_api.auth_disabled",
        "Description": "When false, Routing API requires OAuth tokens for authentication.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "Certificate authority for communication between clients and uaa.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.frontend_idle_timeout",
        "Description": "(optional, integer) Duration in seconds to maintain an open connection when client supports keep-alive.\nThis property must be configured with regards to how an IaaS-provided load balancer behaves in order to prevent connections from being closed prematurely.\nGenerally, this timeout must be greater than that of the load balancer. As examples, GCP has a default timeout of 600 seconds so a value greater than 600 is recommended and AWS ELB has a default timeout of 60 seconds so a value greater than 60 is recommended.\nHowever, depending on the IaaS, this timeout may need to be shorter than the load balancer's timeout, e.g., Azure's load balancer times out at 240 seconds (by default) without sending a TCP RST to clients, so a value lower than this is recommended in order to force it to send the TCP RST.\n",
        "Default": 900,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.extra_headers_to_log",
        "Description": "An array of headers that access log events will be annotated with",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.route_services_timeout",
        "Description": "Expiry time of a route service signature in seconds",
        "Default": 60,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.load_balancer_healthy_threshold",
        "Description": "Time period in seconds to wait until declaring the router instance started after starting the listener socket. This allows an external load balancer time to register the instance as healthy.",
        "Default": 20,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.ca_certs",
        "Description": "String of concatenated certificate authorities in PEM format, used to validate certificates provided by remote systems. By default, Gorouter will trust certificates signed by well-known CAs and by CA certificates installed on the filesystem.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.logging_level",
        "Description": "Log level for router",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron.port",
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.status.password",
        "Description": "Password for HTTP basic auth to the /varz and /routes endpoints.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.tls_pem",
        "Description": "Array of private keys and certificates used for TLS handshakes with downstream clients. Each element in the array is an object containing fields 'private_key' and 'cert_chain', each of which supports a PEM block. Required if router.enable_ssl is true.",
        "Default": null,
        "Example": "tls_pem:\n- cert_chain: |\n  -----BEGIN CERTIFICATE-----\n  -----END CERTIFICATE-----\n  -----BEGIN CERTIFICATE-----\n  -----END CERTIFICATE-----\n  private_key: |\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n",
        "Examples": null
      },
      {
        "Name": "router.route_services_secret",
        "Description": "Support for route services is disabled when no value is configured. A robust passphrase is recommended.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.route_services_recommend_https",
        "Description": "Route Services are told where to send requests after processing using the X-CF-Forwarded-Url header. When this property is true, the scheme for this URL is https. When false, the scheme is http. As requests from Route Services to applications on CF transit load balancers and gorouter, disable this property for deployments that have TLS termination disabled.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.max_idle_connections",
        "Description": "Maximum total idle keepalive connections to backends. When 0, support for keepalive connections is disabled. Maximum idle connections per backend is 100.",
        "Default": 0,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "nats.password",
        "Description": "Password for NATS authentication",
        "Default": null,
        "Example": "natSpa55w0rd",
        "Examples": null
      },
      {
        "Name": "router.disable_http",
        "Description": "Disables the http listener on port specified by router.port. This cannot be set to true if enable_ssl is false.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.number_of_cpus",
        "Description": "Number of CPUs to utilize, the default (-1) will equal the number of available CPUs",
        "Default": -1,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.healthcheck_user_agent",
        "Description": "DEPRECATED. Use /health endpoint on port specified by status.port. User-Agent for the health check agent (usually the Load Balancer).",
        "Default": "HTTP-Monitor/1.1",
        "Example": "ELB-HealthChecker/1.0",
        "Examples": null
      },
      {
        "Name": "router.backends.private_key",
        "Description": "Private key used for client authentication to TLS-registered backends.  In PEM format.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.port",
        "Description": "Listening Port for Router.",
        "Default": 80,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.enable_ssl",
        "Description": "When enabled, Gorouter will listen on port 443 and terminate TLS for requests received on this port.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.forwarded_client_cert",
        "Description": "How to handle the x-forwarded-client-cert (XFCC) HTTP header. Possible values are:\n- always_forward: Always forward the XFCC header in the request, regardless of whether the client connection is mTLS.\n  Use this value when your load balancer is forwarding the client certificate and requests are not forwarded to Gorouter over mTLS. In the case where the connection between load balancer and Gorouter is mTLS, the client certificate received by Gorouter in the TLS handshake will not be forwarded.\n- forward: Forward the XFCC header received from the client only when the client connection is mTLS.\n  This is a more secure version of `always_forward`. The client certificate received by Gorouter in the TLS handshake will not be forwarded.\n  Requires `client_cert_validation: request` or `require`.\n- sanitize_set: Strip any instances of XFCC headers from the client request.\n  When the client connection is mTLS, the client certificate received by Gorouter in the TLS handshake will be forwarded in this header.\n  Values will be base64 encoded PEM. Use this value when Gorouter is the first component to terminate TLS.\n  Requires `client_cert_validation: request` or `require`.\n",
        "Default": "always_forward",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.route_services_secret_decrypt_only",
        "Description": "To rotate keys, add your new key here and deploy. Then swap this key with the value of route_services_secret and deploy again.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.secure_cookies",
        "Description": "Set secure flag on http cookies",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.ssl_skip_validation",
        "Description": "Skip validation of TLS certificates received from route services and UAA",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.min_tls_version",
        "Description": "Minimum accepted version of TLS protocol. All versions above this will also be accepted. Valid values are TLSv1.0, TLSv1.1, and TLSv1.2.",
        "Default": "TLSv1.2",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.dns_health_check_host",
        "Description": "Host to ping for confirmation of DNS resolution, only used when Routing API is enabled",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.status.user",
        "Description": "Username for HTTP basic auth to the /varz and /routes endpoints.",
        "Default": "router-status",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.enable_access_log_streaming",
        "Description": "Enables streaming of access log to syslog.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.enable_proxy",
        "Description": "Enables support for the popular PROXY protocol, allowing downstream load balancers that do not support HTTP to pass along client information.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.tracing.enable_zipkin",
        "Description": "Enables the addition of the X-B3-Trace-Id header to incoming requests. If the header already exists on the incoming request, it will not be overwritten.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "nats.port",
        "Description": "TCP port of NATS servers",
        "Default": null,
        "Example": 4222,
        "Examples": null
      },
      {
        "Name": "router.write_access_logs_locally",
        "Description": "Enables writing access log to local disk.",
        "Default": true,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.debug_address",
        "Description": "Address at which to serve debug info",
        "Default": "127.0.0.1:17002",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "router.routing_table_sharding_mode",
        "Description": "all: all routes will be registered.\nshared-and-segments: both routes for the configured isolation segments and those that do not have an isolation segment specified will be registered.\nsegments: only routes for the configured isolation segments will be registered.\n",
        "Default": "all",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "route_registrar",
    "Description": "Used for registering routes",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor721913432/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "pre-start",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor721913432/templates/pre-start"
      },
      {
        "SrcPathEnd": "route_registrar_ctl.erb",
        "DstPathEnd": "bin/route_registrar_ctl",
        "Path": "/tmp/tar-CmdExtractor721913432/templates/route_registrar_ctl.erb"
      },
      {
        "SrcPathEnd": "registrar_settings.json.erb",
        "DstPathEnd": "config/registrar_settings.json",
        "Path": "/tmp/tar-CmdExtractor721913432/templates/registrar_settings.json.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "route_registrar"
      }
    ],
    "Properties": [
      {
        "Name": "nats.machines",
        "Description": "IPs of each NATS cluster member",
        "Default": null,
        "Example": "- 192.168.50.123\n- 192.168.52.123\n",
        "Examples": null
      },
      {
        "Name": "nats.port",
        "Description": "TCP port of NATS servers",
        "Default": null,
        "Example": 4222,
        "Examples": null
      },
      {
        "Name": "nats.user",
        "Description": "User name for NATS authentication",
        "Default": null,
        "Example": "nats",
        "Examples": null
      },
      {
        "Name": "nats.password",
        "Description": "Password for NATS authentication",
        "Default": null,
        "Example": "natSpa55w0rd",
        "Examples": null
      },
      {
        "Name": "route_registrar.routes",
        "Description": "* Array of hashes determining which routes will be registered.\n* Each hash should have 'port' or 'tls_port', 'uris', 'registration_interval'\n  and 'name' keys.\n* 'server_cert_domain_san' is the SAN on the destination host's TLS certificate. You must provide 'server_cert_domain_san' when 'tls_port' is specified.\n* 'registration_interval' is the delay between\n  routing updates. It must be a time duration represented as a string\n  (e.g. \"10s\").\n  It must parse to a positive time duration i.e. \"-5s\" is not permitted.\n* Additionally, the 'tags', 'health_check', and 'prepend_instance_index' keys are optional.\n* 'uris' is an array of URIs to register for the 'port'.\n* 'tags' are included in metrics that gorouter emits to support filtering.\n* 'health_check' is a hash which should have 'name' and 'script_path'.\n* 'health_check.timeout' is optional.\n  If the health_check timeout is not provided, it defaults to half of the\n  value of `registration_interval`.\n  If it is provided it must be a time duration represented as a string (e.g. \"10s\"),\n  and less than the value of `registration_interval`.\n  It must parse to a positive time duration i.e. \"-5s\" is not permitted.\n* if the healthcheck is not configured, the route is continually registered.\n* if the healthcheck script exits with success, the route is registered.\n* if the healthcheck script exits with error, the route is unregistered.\n* if a timeout is configured, the healthcheck script must exit within the timeout,\n  otherwise it is terminated (with `SIGKILL`) and the route is unregistered.\n* 'prepend_instance_index' is a boolean. When set to true the values in 'uris'\n  will be prepended with the instance index.\n  e.g. 'some-uri.system-domain.com' will become '0-some-uri.system-domain.com' on the instance\n  with index 0, and '2-some-url.system-domain.com' on the instance with index 2.\n  When this value is enabled, each instance will register its own, unique, set of uris.\n  To additionally continue to register these original uris, create another route\n  with the same uris and set 'prepend_instance_index' to false (or omit the key entirely).\n",
        "Default": null,
        "Example": "- name: my-service\n  registration_interval: 20s\n  port: 12345\n  tags:\n    component: my-service\n    env: production\n  uris:\n    - my-service.system-domain.com\n    - *.my-service.system-domain.com\n  health_check:\n    name: my-service-health_check\n    script_path: /path/to/script\n    timeout: 5s\n- name: my-tls-endpoint\n  tls_port: 12346\n  server_cert_domain_san: \"my-tls-endpoint.internal.com\"\n  uris:\n    - my-service.system-domain.com\n- name: my-debug-endpoint\n  port: 12346\n  uris:\n    - my-service.system-domain.com/debug\n- name: cf-mysql-proxy-api-per-instance\n  port: 8080\n  uris:\n  - proxy-cf-mysql.system.domain\n  prepend_instance_index: true\n- name: cf-mysql-proxy-api\n  port: 8081\n  uris:\n  - proxy-cf-mysql.system.domain\n",
        "Examples": null
      }
    ]
  },
  {
    "Name": "routing-api",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor633763146/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "locket_client.key.erb",
        "DstPathEnd": "config/certs/locket/client.key",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/locket_client.key.erb"
      },
      {
        "SrcPathEnd": "pre-backup-lock.erb",
        "DstPathEnd": "bin/bbr/pre-backup-lock",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/pre-backup-lock.erb"
      },
      {
        "SrcPathEnd": "post-restore-unlock.erb",
        "DstPathEnd": "bin/bbr/post-restore-unlock",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/post-restore-unlock.erb"
      },
      {
        "SrcPathEnd": "pre-start",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/pre-start"
      },
      {
        "SrcPathEnd": "routing-api.yml.erb",
        "DstPathEnd": "config/routing-api.yml",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/routing-api.yml.erb"
      },
      {
        "SrcPathEnd": "locket_client.crt.erb",
        "DstPathEnd": "config/certs/locket/client.crt",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/locket_client.crt.erb"
      },
      {
        "SrcPathEnd": "locket_ca.crt.erb",
        "DstPathEnd": "config/certs/locket/ca.crt",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/locket_ca.crt.erb"
      },
      {
        "SrcPathEnd": "bbr-metadata",
        "DstPathEnd": "bin/bbr/metadata",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/bbr-metadata"
      },
      {
        "SrcPathEnd": "post-backup-unlock.erb",
        "DstPathEnd": "bin/bbr/post-backup-unlock",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/post-backup-unlock.erb"
      },
      {
        "SrcPathEnd": "pre-restore-lock.erb",
        "DstPathEnd": "bin/bbr/pre-restore-lock",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/pre-restore-lock.erb"
      },
      {
        "SrcPathEnd": "routing-api_ctl.erb",
        "DstPathEnd": "bin/routing-api_ctl",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/routing-api_ctl.erb"
      },
      {
        "SrcPathEnd": "dns_health_check.erb",
        "DstPathEnd": "bin/dns_health_check",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/dns_health_check.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/tmp/tar-CmdExtractor633763146/templates/uaa_ca.crt.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "routing-api"
      },
      {
        "Name": "routing_utils"
      }
    ],
    "Properties": [
      {
        "Name": "routing_api.sqldb.schema",
        "Description": "Database name for routing api",
        "Default": null,
        "Example": "routing_api",
        "Examples": null
      },
      {
        "Name": "routing_api.locket.api_location",
        "Description": "Hostname and port of the Locket server. Used to obtain a lock so only one instance of Routing API is active at a time. Requires Locket, which is not deployed with cf-release by default.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.auth_disabled",
        "Description": "Disables UAA authentication",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.lock_retry_interval",
        "Description": "interval to wait before retrying a failed lock acquisition",
        "Default": "5s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "release_level_backup",
        "Description": "Include routing api database in backup and restore operations",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.lock_ttl",
        "Description": "TTL for service lock",
        "Default": "10s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.system_domain",
        "Description": "Domain reserved for CF operator; base URL where the UAA, Cloud Controller, and other non-user apps listen",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "skip_ssl_validation",
        "Description": "Skip TLS verification when talking to UAA",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron.port",
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.locket.client_cert",
        "Description": "Client cert for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.metrics_reporting_interval",
        "Description": "String representing interval for reporting the following metrics: total_http_subscriptions, total_http_routes, total_tcp_subscriptions, total_tcp_routes, total_token_errors, key_refresh_events. Units: ms, s, m h",
        "Default": "30s",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.log_level",
        "Description": "Log level",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "dns_health_check_host",
        "Description": "Host to ping for confirmation of DNS resolution",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.router_groups",
        "Description": "Array of router groups that will be seeded into routing_api database. Once some value is included with a deploy, subsequent changes to this property will be ignored. TCP Routing requires a router group of type: tcp.",
        "Default": [],
        "Example": "- name: default-tcp\n  reservable_ports: 1024-10000,12000\n  type: tcp\n",
        "Examples": null
      },
      {
        "Name": "routing_api.locket.ca_cert",
        "Description": "CA cert for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.statsd_endpoint",
        "Description": "The endpoint for the statsd server used to translate the following metrics from statsd to dropsonde: total_http_subscriptions, total_http_routes, total_tcp_subscriptions, total_tcp_routes, total_token_errors, key_refresh_events.",
        "Default": "localhost:8125",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.username",
        "Description": "Username used for connecting to SQL database",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.tls_port",
        "Description": "Port on which UAA is listening for TLS connections. This is required for obtaining a key to verify client OAuth tokens.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.locket.client_key",
        "Description": "Client key for the Locket server. Requires Locket, which is not deployed with cf-release by default.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.skip_consul_lock",
        "Description": "When false, Routing API will obtain a lock from both Consul and Locket. When true, Routing API will obtain the lock from Locket only. Requires locket.api_location to be set and Locket, which is not deployed with cf-release by default.",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.admin_port",
        "Description": "Local port to listen on with admin endpoint (used for backup/restore locking)",
        "Default": 15897,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.debug_address",
        "Description": "Address at which to serve debug info",
        "Default": "127.0.0.1:17002",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.port",
        "Description": "Port on which SQL database is listening",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "Certificate authority for communication between clients and UAA.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.token_endpoint",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.clients",
        "Description": "OAuth client ids and secrets provided via link to jobs in other BOSH deployments that need to read and/or write to Routing API. These clients must be configured in UAA via API or using the property uaa.clients with the desired scopes. For a list of scopes supported see https://github.com/cloudfoundry-incubator/routing-api/blob/master/docs/api_docs.md. Jobs consuming the link should use these credentials to fetch a token from UAA with which to authenticate with Routing API.",
        "Default": null,
        "Example": {
          "cfcr_routing_api_client": {
            "secret": "((uaa_clients_cfcr_routing_api_client_secret))"
          }
        },
        "Examples": null
      },
      {
        "Name": "routing_api.port",
        "Description": "Port on which Routing API is running. If this is changed and routing_api.enabled:true in cf-release, it will break management of routes and domains until routing_api.port is updated in cf-release.",
        "Default": 3000,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.host",
        "Description": "Host for SQL database",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.type",
        "Description": "Type of SQL database",
        "Default": null,
        "Example": "mysql",
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.password",
        "Description": "Password used for connecting to SQL database",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.sqldb.ca_cert",
        "Description": "(optional, string) When present, force database connections via TLS.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "consul.servers",
        "Description": "comma-separated list of consul server URLs (scheme://ip:port)",
        "Default": "http://127.0.0.1:8500",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.statsd_client_flush_interval",
        "Description": "Buffered statsd client flush interval",
        "Default": "300ms",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.max_ttl",
        "Description": "String representing the maximum TTL a client can request for route registration.",
        "Default": "120s",
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "smoke_tests",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor426078988/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "run.erb",
        "DstPathEnd": "bin/run",
        "Path": "/tmp/tar-CmdExtractor426078988/templates/run.erb"
      },
      {
        "SrcPathEnd": "config.json.erb",
        "DstPathEnd": "bin/config.json",
        "Path": "/tmp/tar-CmdExtractor426078988/templates/config.json.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "golang-1.9-linux"
      },
      {
        "Name": "acceptance_tests"
      },
      {
        "Name": "cf-cli"
      }
    ],
    "Properties": [
      {
        "Name": "acceptance_tests.skip_ssl_validation",
        "Description": "When true, does not verify TLS certificates for any API calls made during the test run",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.api",
        "Description": "URL of the Cloud Controller API",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_emitter.oauth_secret",
        "Description": "Password for UAA client for the tcp emitter.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.admin_password",
        "Description": "Cloud Controller admin user's password",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.user_password",
        "Description": "By default, users created during acceptance tests will be configured random names and random passwords. This property enables specifying the password for users created during the test.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.addresses",
        "Description": "A list of addresses which will be checked for TCP connectivity and features",
        "Default": [
          "10.244.14.2"
        ],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.admin_user",
        "Description": "Cloud Controller admin user",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "smoke_tests.tcp_apps_domain",
        "Description": "TCP app domain to use for testing. By default, a temporary domain will be created but tests will use the IP address of the TCP Router",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.tcp_router_group",
        "Description": "The name of the the router group associated with the default TCP Router",
        "Default": "default-tcp",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.verbose",
        "Description": "Whether to pass the -v flag to router acceptance tests",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.apps_domain",
        "Description": "App domain that will be created",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.cloud_controller.use_http",
        "Description": "Flag for using HTTP when making application requests rather than the default HTTPS",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.system_domain",
        "Description": "Domain for system components, e.g. bosh-lite.com",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "acceptance_tests.default_timeout",
        "Description": "Default timeout for Ginkgo assertions. i.e. Timeout for `Eventually`",
        "Default": 120,
        "Example": null,
        "Examples": null
      }
    ]
  },
  {
    "Name": "tcp_router",
    "Description": "",
    "MonitTemplate": {
      "SrcPathEnd": "monit",
      "DstPathEnd": "monit",
      "Path": "/tmp/tar-CmdExtractor909666334/monit"
    },
    "Templates": [
      {
        "SrcPathEnd": "haproxy_reloader",
        "DstPathEnd": "bin/haproxy_reloader",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/haproxy_reloader"
      },
      {
        "SrcPathEnd": "pre-start",
        "DstPathEnd": "bin/pre-start",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/pre-start"
      },
      {
        "SrcPathEnd": "tcp_router.yml.erb",
        "DstPathEnd": "config/tcp_router.yml",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/tcp_router.yml.erb"
      },
      {
        "SrcPathEnd": "uaa_ca.crt.erb",
        "DstPathEnd": "config/certs/uaa/ca.crt",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/uaa_ca.crt.erb"
      },
      {
        "SrcPathEnd": "haproxy.conf.erb",
        "DstPathEnd": "config/haproxy.conf",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/haproxy.conf.erb"
      },
      {
        "SrcPathEnd": "haproxy.conf.template.erb",
        "DstPathEnd": "config/haproxy.conf.template",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/haproxy.conf.template.erb"
      },
      {
        "SrcPathEnd": "tcp_router_ctl.erb",
        "DstPathEnd": "bin/tcp_router_ctl",
        "Path": "/tmp/tar-CmdExtractor909666334/templates/tcp_router_ctl.erb"
      }
    ],
    "DeploymentJobTemplates": null,
    "Packages": [
      {
        "Name": "routing_utils"
      },
      {
        "Name": "tcp_router"
      },
      {
        "Name": "haproxy"
      }
    ],
    "Properties": [
      {
        "Name": "tcp_router.oauth_secret",
        "Description": "OAuth client secret used to obtain token for Routing API from UAA.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.request_timeout_in_seconds",
        "Description": "Server and client timeouts in seconds",
        "Default": 300,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.token_endpoint",
        "Description": "UAA token endpoint host name. Do not include a scheme in this value; TCP Router will always use TLS to connect to UAA.",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.ca_cert",
        "Description": "Certificate authority for communication between clients and uaa.",
        "Default": "",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.log_level",
        "Description": "Log level",
        "Default": "info",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.uri",
        "Description": "URL where the routing API can be reached internally",
        "Default": "http://routing-api.service.cf.internal",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.port",
        "Description": "Port of routing api",
        "Default": "3000",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "routing_api.auth_disabled",
        "Description": "Disables UAA authentication",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "uaa.tls_port",
        "Description": "Port on which UAA is listening for TLS connections. This is required for obtaining an OAuth token for Routing API.",
        "Default": null,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.isolation_segments",
        "Description": "Routes with these isolation segments will be registered. Used in combination with routing_table_sharding_mode.",
        "Default": [],
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.tcp_stats_collection_interval",
        "Description": "String representing interval for collecting statistic metrics from tcp proxy. Units: ms, s, m h",
        "Default": "1m",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.health_check_port",
        "Description": "Load balancer in front of TCP Routers should be configured to check the health of TCP Router instances by establishing a TCP connection on this port",
        "Default": 80,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "skip_ssl_validation",
        "Description": "Skip TLS verification when talking to UAA",
        "Default": false,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "metron.port",
        "Description": "The port used to emit dropsonde messages to the Metron agent.",
        "Default": 3457,
        "Example": null,
        "Examples": null
      },
      {
        "Name": "tcp_router.debug_address",
        "Description": "Address at which to serve debug info",
        "Default": "127.0.0.1:17002",
        "Example": null,
        "Examples": null
      },
      {
        "Name": "dns_health_check_host",
        "Description": "Host to ping for confirmation of DNS resolution",
        "Default": "uaa.service.cf.internal",
        "Example": null,
        "Examples": null
      }
    ]
  }
]