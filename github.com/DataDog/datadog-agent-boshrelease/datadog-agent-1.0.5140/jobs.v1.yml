[
  {
    "Description": "Datadog Agent",
    "MonitTemplate": {
      "DstPathEnd": "monit",
      "Path": "/mnt/tmp/tar-CmdExtractor239631678/monit",
      "SrcPathEnd": "monit"
    },
    "Name": "dd-agent",
    "Packages": [
      {
        "Name": "dd-agent"
      }
    ],
    "Properties": [
      {
        "Default": false,
        "Description": "Skip SSL validation for the Datadog url",
        "Example": null,
        "Examples": null,
        "Name": "dd.skip_ssl_validation"
      },
      {
        "Default": null,
        "Description": "Datadog API key",
        "Example": null,
        "Examples": null,
        "Name": "dd.api_key"
      },
      {
        "Default": null,
        "Description": "Force the hostname to whatever you want. Default is autogenerated",
        "Example": null,
        "Examples": null,
        "Name": "dd.hostname"
      },
      {
        "Default": "127.0.0.1",
        "Description": "Ganglia host where gmetad is running",
        "Example": null,
        "Examples": null,
        "Name": "dd.ganglia_host"
      },
      {
        "Default": true,
        "Description": "Include all partitions in the system",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_disk_config_all_partitions"
      },
      {
        "Default": 8125,
        "Description": "Forward packets received by the dogstatsd server to another statsd server port",
        "Example": null,
        "Examples": null,
        "Name": "dd.statsd_forward_port"
      },
      {
        "Default": "INFO",
        "Description": "Logging level",
        "Example": null,
        "Examples": null,
        "Name": "dd.log_level"
      },
      {
        "Default": null,
        "Description": "Proxy settings to connect to the Internet",
        "Example": {
          "host": "proxy",
          "password": "pass",
          "port": 8080,
          "user": "user"
        },
        "Examples": null,
        "Name": "dd.proxy"
      },
      {
        "Default": [],
        "Description": "List of tags which will be applied to the data sent from this agent",
        "Example": null,
        "Examples": null,
        "Name": "dd.tags"
      },
      {
        "Default": true,
        "Description": "Use unique hostname for GCE hosts, see http://dtdg.co/1eAynZk",
        "Example": null,
        "Examples": null,
        "Name": "dd.gce_updated_hostname"
      },
      {
        "Default": 17124,
        "Description": "Start a graphite listener on this port",
        "Example": null,
        "Examples": null,
        "Name": "dd.graphite_listen_port"
      },
      {
        "Default": [
          "max",
          "median",
          "avg",
          "count"
        ],
        "Description": "List of histogram aggregates functions",
        "Example": null,
        "Examples": null,
        "Name": "dd.histogram_aggregates"
      },
      {
        "Default": false,
        "Description": "Should the jmxfetch agent be started",
        "Example": null,
        "Examples": null,
        "Name": "dd.use_jmxfetch"
      },
      {
        "Default": true,
        "Description": "Add basic system processes to process.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_system_processes"
      },
      {
        "Default": 60,
        "Description": "Max offset threshold in seconds",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_ntp_config_offset_threshold"
      },
      {
        "Default": true,
        "Description": "Add tags to mountpoints by filesystem type",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_disk_config_tag_by_filesystem"
      },
      {
        "Default": {},
        "Description": "Agent integration configuration. Each key will have \".yaml\" appended to it and the value dumped a file",
        "Example": null,
        "Examples": null,
        "Name": "dd.integrations"
      },
      {
        "Default": null,
        "Description": "By default dogstatsd will post aggregate metrics to the Agent, but you can define a different endpoint here",
        "Example": null,
        "Examples": null,
        "Name": "dd.dogstatsd_target"
      },
      {
        "Default": null,
        "Description": "Define a namespace for statsd metrics, metric.name will instead become namespace.metric.name",
        "Example": null,
        "Examples": null,
        "Name": "dd.statsd_metric_namespace"
      },
      {
        "Default": null,
        "Description": "List of logs to parse and optionally custom parsers to use",
        "Example": [
          "/path/to/log1:/path/to/my/parsers_module.py:custom_parser",
          "/path/to/log2"
        ],
        "Examples": null,
        "Name": "dd.dogstreams"
      },
      {
        "Default": true,
        "Description": "Add monit processes to process.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_monit_processes"
      },
      {
        "Default": true,
        "Description": "Automatically generate network monitoring integration, network.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_network_config"
      },
      {
        "Default": [
          "lo",
          "lo0"
        ],
        "Description": "List of the network interfaces to exclude from reporting metrics",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_network_config_excluded_interfaces"
      },
      {
        "Default": "0.ubuntu.pool.ntp.org",
        "Description": "NTP host",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_ntp_config_host"
      },
      {
        "Default": true,
        "Description": "Enable autogenerated bosh tags",
        "Example": null,
        "Examples": null,
        "Name": "dd.bosh_tags"
      },
      {
        "Default": false,
        "Description": "Add dd_check:checkname tag per running check",
        "Example": null,
        "Examples": null,
        "Name": "dd.create_dd_check_tags"
      },
      {
        "Default": false,
        "Description": "Collect AWS EC2 custom tags as agent tags (requires an IAM role associated with the instance)",
        "Example": null,
        "Examples": null,
        "Name": "dd.collect_ec2_tags"
      },
      {
        "Default": [
          "0.95"
        ],
        "Description": "List of histogram percentiles",
        "Example": null,
        "Examples": null,
        "Name": "dd.histogram_percentiles"
      },
      {
        "Default": 8125,
        "Description": "Statsd listening port",
        "Example": null,
        "Examples": null,
        "Name": "dd.dogstatsd_port"
      },
      {
        "Default": false,
        "Description": "Dogstatsd supports plain ASCII packets, this enables support for UTF8 metric names",
        "Example": null,
        "Examples": null,
        "Name": "dd.utf8_decoding"
      },
      {
        "Default": 17123,
        "Description": "Change port the Agent is listening to",
        "Example": null,
        "Examples": null,
        "Name": "dd.listen_port"
      },
      {
        "Default": false,
        "Description": "The collector will capture a metric for check run times",
        "Example": null,
        "Examples": null,
        "Name": "dd.check_timings"
      },
      {
        "Default": false,
        "Description": "Enable Ganglia support for collecting metrics",
        "Example": null,
        "Examples": null,
        "Name": "dd.use_ganglia"
      },
      {
        "Default": 8651,
        "Description": "Ganglia port where gmetad is running",
        "Example": null,
        "Examples": null,
        "Name": "dd.ganglia_port"
      },
      {
        "Default": false,
        "Description": "Enable a graphite endpoint",
        "Example": null,
        "Examples": null,
        "Name": "dd.use_graphite"
      },
      {
        "Default": null,
        "Description": "List of emitters to be used in addition to the standard one",
        "Example": [
          "/usr/local/my-code/emitters/rabbitmq.py:RabbitMQEmitter"
        ],
        "Examples": null,
        "Name": "dd.custom_emitters"
      },
      {
        "Default": true,
        "Description": "Automatically generate process monitoring integration, process.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_processes"
      },
      {
        "Default": true,
        "Description": "Generate disk configuration, disk.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_disk_config"
      },
      {
        "Default": false,
        "Description": "Incorporate security-groups into tags collected from AWS EC2",
        "Example": null,
        "Examples": null,
        "Name": "dd.collect_security_groups"
      },
      {
        "Default": false,
        "Description": "Remove the 'ww' flag from ps catching the arguments of processes",
        "Example": null,
        "Examples": null,
        "Name": "dd.exclude_process_args"
      },
      {
        "Default": false,
        "Description": "Should the dogstatsd agent be started for statsd metrics collection",
        "Example": null,
        "Examples": null,
        "Name": "dd.use_dogstatsd"
      },
      {
        "Default": true,
        "Description": "Generate NTP monitoring ntp.yaml",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_ntp_config"
      },
      {
        "Default": "https://app.datadoghq.com",
        "Description": "The host of the Datadog intake server to send Agent data to",
        "Example": null,
        "Examples": null,
        "Name": "dd.url"
      },
      {
        "Default": "bosh_",
        "Description": "Prefix for autogenerated bosh tags",
        "Example": null,
        "Examples": null,
        "Name": "dd.bosh_tags_prefix"
      },
      {
        "Default": false,
        "Description": "Allow non-local traffic to this Agent, required when using it as a proxy for other agents",
        "Example": null,
        "Examples": null,
        "Name": "dd.non_local_traffic"
      },
      {
        "Default": null,
        "Description": "Forward packets received by the dogstatsd server to another statsd server",
        "Example": null,
        "Examples": null,
        "Name": "dd.statsd_forward_host"
      },
      {
        "Default": 300,
        "Description": "Metrics collection interval",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_ntp_config_min_collection_interval"
      },
      {
        "Default": true,
        "Description": "Report metrics including the state of the nics",
        "Example": null,
        "Examples": null,
        "Name": "dd.generate_network_config_connection_state"
      }
    ],
    "Templates": [
      {
        "DstPathEnd": "config/confd.sh",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/config/confd.sh.erb",
        "SrcPathEnd": "config/confd.sh.erb"
      },
      {
        "DstPathEnd": "bin/collector_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/bin/collector_ctl",
        "SrcPathEnd": "bin/collector_ctl"
      },
      {
        "DstPathEnd": "bin/dogstatsd_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/bin/dogstatsd_ctl",
        "SrcPathEnd": "bin/dogstatsd_ctl"
      },
      {
        "DstPathEnd": "bin/forwarder_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/bin/forwarder_ctl",
        "SrcPathEnd": "bin/forwarder_ctl"
      },
      {
        "DstPathEnd": "bin/jmxfetch_ctl",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/bin/jmxfetch_ctl",
        "SrcPathEnd": "bin/jmxfetch_ctl"
      },
      {
        "DstPathEnd": "bin/pre-start",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/bin/pre-start",
        "SrcPathEnd": "bin/pre-start"
      },
      {
        "DstPathEnd": "data/properties.sh",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/data/properties.sh.erb",
        "SrcPathEnd": "data/properties.sh.erb"
      },
      {
        "DstPathEnd": "config/datadog.conf",
        "Path": "/mnt/tmp/tar-CmdExtractor239631678/templates/config/datadog.conf.erb",
        "SrcPathEnd": "config/datadog.conf.erb"
      }
    ]
  }
]